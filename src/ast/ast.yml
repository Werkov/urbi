#
# Possible values:
#  * class
#    Description of classes.
#    + name
#      a C++ class name.
#
#    + desc
#      a (Doxygen) comment describing the class.
#
#    + hide
#      if True, output within <<- and ->>.
#
#    + super
#      a possibly empty space separated list of superclass names.
#
#  * attributes:
#    + name
#      a C++ attribute name
#
#    + type
#      a C++ type name
#
#    + abstract
#      If True, don't output.
#
#    + mandatory
#      + True
#        *_get methods return a const ref.
#      + False
#        *_get methods return a const pointer.
#
#    + init=VALUE
#      If set, the value used to initialize the member.
#      This attribute will not have a argument in the constructors.
#
#    + owned
#      - True: Pointer members are "delete"'d.
#      - False: They are not.
#
#    + access composed by [ 'r', 'w, 'W' ]
#      - r: provide a *_get const accessor.
#      - w: provide a *_get accessor that returns a reference
#        for possible modifications.
#      - W: provide a *_set accessor.
#    + desc, a short description of the attribute
#    + hide, some code in the final tarball (no fixme)
#
# Defaults:
#  * class:
#    + desc: the name of the class
#
#  * attributes:
#    + mandatory: True
#    + access: rw
#    + owned: True
#

---


Ast:
  inline:
    header prologue: '# include "ast/fwd.hh"'
  attributes:
    - location:
        type: location
        access: rW
        desc: Scanner position information
    - up:
        type: 'Ast*'
        init: '0'
        access: rW
        desc: Parent node

Exp:
  super: Ast

IntExp:
  super: Exp
  attributes: [ { value: { type: int, access: r, desc: Stored integer value } } ]

AssignExp:
  super: Exp
  attributes:
    - var: { type: 'Var*', desc: Reference to the affected variable }
    - exp: { type: 'Exp*', desc: Assigned value }


Var:
  super: Exp

# Local Variables:
# mode: text
# End:
