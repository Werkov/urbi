#! /usr/bin/perl -w

use strict;
use Text::Wrap;

my @keyword;
while (<>)
{
  if (/^"(\w+)"(\{FLAVOR\})?/)
    {
      push @keyword, $1;
      push @keyword, "$1;", "$1|", "$1,", "$1&"
        if $2;
    }
}

@keyword = sort @keyword;

my $mode = $ENV{'KEYWORDS_MODE'};

if ($mode eq "c++")
{
  print wrap (" " x 4, " " x 4,
              join (", ", (map { "\"$_\"" } @keyword), '0')), "\n";
}
elsif ($mode eq "emacs")
{
  print wrap (" " x 12, " " x 12,
              join (" ", map { "\"$_\"" } @keyword)), "\n";
}
elsif ($mode eq "listings")
{
  print wrap (" " x 4, " " x 4,
              join (", ", map { s/_/\\_/g; $_ } @keyword)), "\n";
}
else
{
  die "invalid KEYWORDS_MODE: $mode";
}


### Setup "GNU" style for perl-mode and cperl-mode.
## Local Variables:
## perl-indent-level: 2
## perl-continued-statement-offset: 2
## perl-continued-brace-offset: 0
## perl-brace-offset: 0
## perl-brace-imaginary-offset: 0
## perl-label-offset: -2
## cperl-indent-level: 2
## cperl-brace-offset: 0
## cperl-continued-brace-offset: 0
## cperl-label-offset: -2
## cperl-extra-newline-before-brace: t
## cperl-merge-trailing-else: nil
## cperl-continued-statement-offset: 2
## End:
