2007-09-13  mefyl  <mefyl@lrde.epita.fr>

	Handle the 'context' special message.
	* src/runner/runner.cc: Catch and handle the message.
	* src/runner/runner.hxx: Remove obsolete 'context' slot.
	* src/object/atom.hxx: Print out context, for test purpose.

2007-09-13  Thomas Moulard  <thomas@moulard.net>

	Add string primitives.
	* src/object/string-class.cc: Here.

2007-09-13  Akim Demaille  <demaille@gostai.com>

	Disable "autostringification"
	* src/parser/bison/utoken.l: For the time being, do not
	allow automatic stringification of add, cancel etc.  Another,
	hopefully cleaner, solution will be found when needed.

2007-09-12  Thomas Moulard  <thomas@moulard.net>

	Make URBI strings symbols.
	* src/object/atom.hh: Here.
	* src/object/object-class.cc: Remove useless symbol construction.

2007-09-12  Thomas Moulard  <thomas@moulard.net>

	Revert r1505.
	* src/object/object-class.cc: Don't sort.

2007-09-12  Thomas Moulard  <thomas@moulard.net>

	Sort slotNames output.
	* src/object/object-class.cc: Here.

2007-09-12  Thomas Moulard  <thomas@moulard.net>

	Add sort primitive.
	* src/object/atom.hh: Add comparison operator.
	* src/object/atom.hxx: Idem.
	* src/object/list-class.cc: Add sort primitive.
	* src/object/object.cc: Add comparison operator.
	* src/object/object.hh: Idem.

2007-09-10  Thomas Moulard  <thomas.moulard@gmail.com>

	Fix slotNames.
	* src/object/atom.hxx: Fix FIXME's.
	* src/object/object-class.cc: Fix slotNames returned values.

2007-09-10  Thomas Moulard  <thomas.moulard@gmail.com>

	Check argument's count in object's primitives.
	* src/object/object-class.cc: Check argument's count.
	* src/object/object-test-lookup.cc: Catch exceptions by reference.
	* src/runner/runner.cc: Add "!!!" before errors.

2007-09-09  Thomas Moulard  <thomas.moulard@gmail.com>

	Check argument's count and handle lookup failure.
	* src/object/Makefile.am: Add urbi-exception.hxx.
	* src/object/float-class.cc: Check argument's count.
	* src/object/object-test-lookup.cc: Use UrbiException
        instead of std::exception.
	* src/object/object.cc: Handle lookup failure.
	* src/object/primitives.hh: Check argument's count.
	* src/object/urbi-exception.cc: Add error messsages text.
	* src/object/urbi-exception.hh: Add named constructors.
	* src/object/urbi-exception.hxx: Implement named constructors. New.

2007-09-09  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Remove useless file.
	* buildnumber.php: Remove.

2007-09-09  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Minor changes.
	* AUTHORS,
	* NEWS,
	* README: Adjust.

2007-09-09  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Minor changes.
	* configure.ac: Aesthetic changes.
	* src/runner/coroutine.cc,
	* src/runner/coroutine.hh: Disable debug traces.
	* src/uconnection.cc: Print debug message only with
	ENABLE_DEBUG_TRACES.

2007-09-09  mefyl  <mefyl@gruntech.net>

	Remove coroutines debug traces.
	* src/console.cc,
	* src/runner/scheduler.cc,
	* src/uconnection.cc: Here.
	* src/runner/runner.hh: Remove trailing whitespace.

2007-09-08  Thomas Moulard  <thomas.moulard@gmail.com>

	Add introspection functions.
	* src/object/atom.hxx: Fix code/primitive printing.
	* src/object/code-class.cc: Send endline after echo.
	* src/object/object-class.cc: Add slotNames, parents, getSlot, setSlot.
	* src/object/object.hh: Add accessor for parents and slots.
	* src/object/object.hxx: Idem.

2007-09-07  Thomas Moulard  <thomas.moulard@gmail.com>

	Handle run-time URBI errors.
	* src/object/float-class.cc: Primitives now throw errors.
	* src/object/urbi-exception.cc: Fix error format.
	* src/runner/runner.cc: Catch run-time errors.

2007-09-05  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Fix the test suite.
	* src/object/object-test-primitives.cc: Adjust to match the new
	prototypes (pass a NULL context to float_class_mul and
	float_class_add).
	* tests-local.mk (XFAIL_TESTS): Adjust (sort and add
	parse-errors.chk since a k2-specific version of this test will be
	added).

2007-09-04  mefyl  <mefyl@lrde.epita.fr>

	Add list insertion functions.
	* src/object/atom.hh,
	* src/object/atom.hxx: Add a non-const accessor to the held value.
	* src/object/primitives.hh: Add macro for primitive taking objects
        as argument.
	* src/object/list-class.cc,
	* src/object/list-class.hh: Add insertion function.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	Don't yield for Scope
	* src/runner/runner.cc (YIELD): Take no arg, it is very misleading:
	it looks like we yield a result.
	(Scope): Don't yield here, we do nothing.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	Fix scopes handling
	* src/ast/ast.yml: Implement default visitor.
	* src/runner/runner.cc: Fix Scope processing.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	Start scopes implementation
	* src/ast/ast.yml (Scope): New.
	* src/parser/bison/ugrammar.y: Support it.
	* src/runner/runner.hh, src/runner/runner.hxx,
	* src/runner/runner.cc: Ditto.
	(locals_): New.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	k2-check
	* tests-local.mk (K2_TESTS, k2-check): New.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	Let primitives access the context
	* src/object/fwd.hh (primitive_type): Takes an rContext
	as 1st arg.
	* src/object/code-class.cc, src/object/float-class.cc,
	* src/object/float-class.hh, src/object/list-class.cc,
	* src/object/list-class.hh, src/object/object-class.cc,
	* src/object/primitive-class.hh, src/object/primitives.hh,
	* src/runner/runner.cc:
	Adjust.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	Use Boost PP
	* src/runner/runner.hh: To factor op() declarations.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	Disable "def" instead of "var"
	* src/parser/bison/ugrammar.y: here.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	Fix Bison use
	Apparently I didn't know that <TYPE> anotations
	were applied to all the following tokens...
	* src/parser/bison/ugrammar.y: Fix <types>.
	Factor them.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	Use regular idiom for unused values
	* dev/ast-pretty-printer-gen: Don't use a fake function,
	cast to void.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	More automatic generation
	* dev/ast-all-gen: New.
	* dev/ast-ignores-gen: New.
	* dev/ast-visitor-gen: Use Boost PP library.
	* src/ast/Makefile.am: Adjust to use the new generators.
	* src/ast/all.hh: Now generated (should be removed from repo).
	* src/ast/ast.yml (ScopeExp): Rename as...
	(Scope): this.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	We need ReturnExp
	* src/ast/ast.yml (ReturnExp): Decomment it.
	Implement its printer.

2007-09-04  Akim Demaille  <demaille@gostai.com>

	object::State
	* src/object/state.hh, src/object/state.cc: New.
	* src/object/Makefile.am: Adjust.
	* src/object/atom.hh, src/object/atom.hxx: Context now
	holds a State, not a UConnection&.
	* src/object/code-class.cc: Adjust.
	* src/object/context-class.hh: Adjust.
	* src/object/fwd.hh: Declare State.
	* src/runner/runner.cc: Adjust.
	* src/uconnection.cc: Adjust.

2007-08-28  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Adjust a comment.
	* src/runner/coroutine.hh: It's `throw (foo);' that doesn't work
	with GCC <= 3.3.

2007-08-28  Akim Demaille  <akim@lrde.epita.fr>

	Minor changes
	* src/runner/coroutine.hh (line): protected so that we can use
	it in the macros.

2007-08-28  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Minor code enhancements.
	* src/runner/coroutine.hh (context_number): Rename as context_count.
	* src/runner/runner.hh (emit_result): Accept NULL ref-counted
	pointers and ignore them.
	* src/runner/coroutine.hxx,
	* src/runner/runner.cc: Adjust all callers of context_number and
	emit_result.
	* src/runner/scheduler.cc (kill_job): Simplify with libport.

2007-08-28  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Code cleanup.
	* src/runner/coroutine.hh (CORO_SAVE_BEGIN_): Drop the unused
	argument.

2007-08-09  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Compilation fix.
	* src/runner/runner.cc: Declare variables in a local scope so that
	they are not crossed by case labels.

2007-08-09  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Do not generate case statements for calls in background.
	* src/runner/coroutine.hh (CORO_CALL_): Add an argument.  Do not
	always invoke CORO_SAVE_END_ as it generates useless `case'
	statements for calls in background.
	(CORO_CALL, CORO_CALL_IN_BACKGROUND): Adjust.

2007-08-09  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Enhance usability of coroutines.
	This patch greatly improves usability of coroutines by injecting the
	context in the current scope.  The code used to be clobbered with
	calls to CORO_CTX which was both ugly and tedious.  Now the context
	needs to be declared with a Boost CPP array so that thanks to the
	Boost preprocessor library, the context is injected in the current
	scope by declaring references that alias members of the context.
	Credits go Roland Levillain for his help to use the Boost
	preprocessor library.

	* src/runner/coroutine.hh: Use the Boost preprocessor library.
	Do not use names starting with an underscore.  Suffix these names
	with `__' instead.
	(CORO_DECL_, CORO_USE_): New internal helpers.
	(CORO_CTX_ADD, CORO_CTX_START, CORO_START, CORO_INIT_WITHOUT_CTX):
	Remove.
	(CORO_CTX_VARS_): New.  Injects the variables of the context in the
	current scope.
	(CORO_CTX_VARS, CORO_WITHOUT_CTX): New.
	(CORO_INIT_WITH_[123]SLOT_CTX): Rename as CORO_WITH_[123]SLOT_CTX
	and adjust.
	(CORO_SAVE_END_): Don't restore the context, this is already done if
	necessary by CORO_CTX_VARS_.
	* src/runner/runner.cc: Adjust.  Remove all the explicit accesses to
	the context.

2007-08-07  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Minor build fixes.
	* src/console.cc: Add missing include.
	* src/kernel.mk: Put BOOST_CPPFLAGS in AM_CPPFLAGS not AM_CXXFLAGS.
	* src/network/bsdnet/network.cc (processNetwork): Add a return
	statement (gcc4 complains with -03).

2007-08-07  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Tie the Coroutine class with the Scheduler.
	Before this patch, Coroutine was a standalone class.  The Runner
	inherited Job (to be schedulable by the Scheduler) and Coroutine.
	Now a Coroutine is-a Job and Runner simply inherits Coroutine.  This
	makes the Coroutine aware of the Scheduler and simplifies some
	aspects of the implementation.  The Scheduler was already aware of
	the CoroutineYield exception anyways.
	Thanks to this patch, noop are correctly handled (they used to leak
	Jobs which could never end).  A couple of bugs in the internals of
	the Coroutine are also fixed.

	* src/runner/Makefile.am: Add the new file.
	* src/runner/coroutine-yield.hh: New.  The exception CoroutineYield
	now contains a reference to the coroutine that yielded.
	* src/runner/coroutine.cc (dtor): Emit the `finished' signal.
	(cr_signal_finished_): Cleanup the list of coroutines signaled so
	that the signal is delivered only once.
	* src/runner/coroutine.hh: The class Coroutine is-a Job.
	(ctor): Adjust: take a Scheduler in argument.
	(cr_waiting_for_, cr_waited_by_): New internal helpers.
	(CORO_CHK_WAITING_): Reschedule jobs to be deleted.
	(CORO_CHECK_WAITING_AND_SAVE_): Simplify.
	(CORO_YIELD_): Reschedule the job that yields.
	(CORO_CLEANUP_): Adjust.
	* src/runner/coroutine.hxx: Adjust various methods.
	(cr_waiting_for_, cr_waited_by_): Implement.
	* src/runner/fwd.hh: Forward declare CoroutineYield.
	* src/runner/job.hxx: Remove debugging code.
	* src/runner/runner.cc: Adjust.
	(operator()(Noop)): Implement.
	* src/runner/runner.hh: Remove useless includes.  No longer inherit
	Job, inheriting Coroutine is now enough.
	(operator()(Noop)): New.
	* src/runner/runner.hxx (ctor): Adjust.
	* src/runner/scheduler.hxx (add_job): Move ...
	* src/runner/scheduler.cc: ... here.
	(schedule_immediately): Adjust.
	Add a couple of CPP guards so that the code compiles when debugging
	is disabled.

2007-08-06  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add a rule to generate the documentation.
	* Makefile.am (doc): New.

2007-08-06  Benoit Sigoure  <tsuna@lrde.epita.fr>

	* include/kernel/fwd.hh,
	* include/kernel/uasyncregister.hh,
	* include/kernel/userver.hh,
	* include/kernel/uvalue.hh,
	* src/network/bsdnet/connection.hh,
	* src/parser/uparser.hh,
	* src/uatcandidate.hh,
	* src/ucommand.cc,
	* src/ucommandqueue.hh,
	* src/uconnection.cc,
	* src/userver.cc: Fix the Doxygen comments.

2007-08-06  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add documentation.
	* src/runner/coroutine.hh: Document everything.
	(cr_line_): New internal method.
	(CORO_CHK_WAITING_, CORO_CHECK_WAITING_)
	(CORO_CHECK_WAITING_AND_SAVE_): New internal macros.
	* src/runner/coroutine.hxx (cr_line_): Implement.

2007-08-04  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Don't create unecessary contexts.
	* src/runner/coroutine.hh (CORO_START): Make a macro-function (to
	uniformize with other CORO_* macros).
	(CORO_START_WITHOUT_CTX): New.
	(CORO_INIT_WITHOUT_CTX): Use CORO_START_WITHOUT_CTX.
	* src/runner/runner.cc: Adjust.

2007-08-03  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Implement the "|"-operator.  Fix the ";"-operator.
	* src/runner/runner.hh (operator()(PipeExp)): New.
	* src/runner/runner.cc (operator()(SemicolonExp)): Fix to strictly
	follow the URBI semantics.
	(operator()(PipeExp)): Implement.

2007-08-03  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Finish the implementation of AndExp.
	This patch adds a CORO_JOIN feature (a coroutine can wait for a
	given set of other coroutines to terminate).  This way, the
	execution of AndExp is suspend until both its LHS and RHS have
	finished.  When either of these finished, they signal the AndExp
	which can fetch their result and send it to the context.  Results
	are thus printed as soon as they are available.
	* src/runner/coroutine.hh (finished): New.
	(cr_signal_finished_): New internal helper.
	(CORO_START): Adjust: prevent coroutines to be rescheduled if
	they're waiting for other coroutines to terminate.
	(CORO_RET_, CORO_END_): Prevent a coroutine from returning if it's
	waiting for other coroutines to terminate.
	(CORO_JOIN): New.
	* src/runner/coroutine.hxx (started): Adjust.
	(finished): Provide a default implementation.
	* src/runner/coroutine.cc (cr_signal_finished_): Implement.
	* src/runner/runner.hh (finished): Override the virtual method.
	* src/runner/runner.cc (finished): Implement.
	(operator()(AndExp)): Use CORO_JOIN.
	* src/runner/scheduler.cc (work): Fix the cycle number printed.

2007-07-31  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Automatically delete the coroutines when they are finished.
	This patch also ensures the server terminates properly with the
	builtin `shutdown'.
	* src/console.cc (shutdown): Invoke UServer::shutdown.
	* src/runner/Makefile.am: Add the new file.
	* src/runner/coroutine.cc: New.
	* src/runner/coroutine.hh: Document the public interface.
	(reset, wait_for): New.
	(CORO_CLEANUP_): New macro to properly delete the coroutine when it
	has finished.
	* src/runner/coroutine.hxx [!NDEBUG]: Track the number of coroutines
	alive in order to make sure they have all been destroyed when the
	program finishes.
	* src/runner/runner.hh (stop): New.
	* src/runner/runner.cc (stop): Implement.
	(operator()(AndExp)): Fix the code to match the URBI semantics of
	the "&"-operator.
	* src/runner/scheduler.hh (killall_jobs, kill_job): New.
	* src/runner/scheduler.cc (work): Exit after 5 consecutive cycles of
	doing nothing.  Very useful when debugging.
	(killall_jobs, kill_job): Implement.
	* src/runner/scheduler.hxx (ctor): Adjust.
	* src/userver.cc (shutdown): Tell the Scheduler to kill all jobs.

2007-07-31  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add the first version of the "&"-operator.
	* src/runner/coroutine.hh (CoroCtx): New internal class.
	(cr_save_, cr_restore_, cr_drop_stack_): New internal methods.
	Contexts now inherit CoroCtx.
	(CORO_SAVE_BEGIN_): Take an argument and use cr_save_.
	(CORO_SAVE_END_): Use cr_restore_.
	(CORO_CALL_): New internal helper to implement one coroutine calling
	another.
	(CORO_CALL, CORO_CALL_IN_BACKGROUND): Implement with CORO_CALL_.
	(CORO_RET_): Fix a bug (don't pop the context since it's not in the
	stack anyway!).
	* src/runner/coroutine.hxx (cr_save_, cr_restore_, cr_drop_stack_):
	Implement.
	* src/runner/runner.hh (Runner): Be a DefaultVisitor not a
	DefaultConstVisitor.  Adjust methods accordingly.
	* src/runner/runner.hxx: Adjust methods accordingly.
	* src/runner/runner.cc: Ditto.
	(operator()(AndExp)): Almost correct implementation.
	* src/runner/scheduler.cc (work): Print the number of jobs as they
	are executed.
	* src/userver.cc (work_handle_connections_): Keep the CPU Overload
	warning quiet.  I run make -j5 on my machines and sometimes it
	triggers the warning.  Maybe we should ignore this one in
	uconsole-check.

2007-07-31  Benoit Sigoure  <tsuna@lrde.epita.fr>

	A Runner is not a const visitor.
	The Runner needs to modify (actually destroy) bits of AST that have
	been executed (and can safely be discarded unlike function bodies).
	* dev/ast-default-visitor-gen (GenDefaultVisitor): Allow non-const
	visitors.
	* src/ast/ast.yml (BinaryExp): Add non-const accessors.
	* src/object/atom.hh (value_get): Add a non-const version.
	(code_traits):  Hold a non-const reference to the AST.
	* src/object/atom.hxx (value_get): Implement the non-const version.

2007-07-31  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Finally get k2.0 to work with coroutines.
	* src/runner/coroutine.hh (context_number): New.
	(CORO_INIT_WITHOUT_CTX, CORO_INIT_WITH_1SLOT_CTX)
	(CORO_INIT_WITH_2SLOTS_CTX, CORO_INIT_WITH_3SLOTS_CTX): New.
	(CORO_CALL): Properly restore the call stack.  We save the call
	stack only if needed (that is, if the sub-coroutine or a deeper
	child did a yield).
	* src/runner/coroutine.hxx (context_number: Implement.
	* src/runner/job.hxx (run): Aesthetic change.
	* src/runner/runner.hh (ctor): Take the AST as a 3rd argument.  Hide
	most of the methods (visiting operators and eval) in a protected
	section.  They must only be called by `work'.
	* src/runner/runner.hxx (ctor): Adjust.
	* src/runner/runner.cc (YIELD): Do not call Job::yield.  This sounds
	weird but CORO_YIELD is enough to reschedule the job.
	(work): Always restart the evaluation from the topmost AST node to
	ensure the entire call stack is restored.
	Various implementation fixes in the rest of the file.
	* src/runner/scheduler.hh (schedule_immediately): New.
	* src/runner/scheduler.cc (schedule_immediately): Implement.
	(work): Use schedule_immediately.
	* src/runner/scheduler.hxx (add_job): Add a safety assertion.
	* src/uconnection.cc (execute): Pass the new Runner to
	schedule_immediately instead of trying to execute it manually.
	* src/userver.cc (work): Add some dead code convenient for debugging.

2007-07-29  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Pretty-print tagged expressions.
	* src/ast/ast.yml (TagExp): Add a printer.
	* src/parser/bison/ugrammar.y (new_bin): Add assert to prevent NULL
	operands.

2007-07-29  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Ensure that no invalid AST is executed.
	* src/parser/uparser.cc (command_tree_get): Don't return the AST if
	there was a parse error.

2007-07-29  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Properly build the AST and return values from the Runner.

	This patch does two things:
	  1. The connection no longer prints results from the Runner.  It's
	     the runner that sends the result to the context (which happens
	     to be the connection for now).
	  2. UConnection::execute was implemented quick'n'dirty: once it had
	     something to execute, it executed it and discarded the AST.
	     For instance, in "1;2;", since the input is chunked at ";" and
	     ",", it got "1;noop" and "2;noop" and executed them both.  Now
	     it builds "1;2;noop" and starts the execution only once.

	Because of the 1st point, and since our only form of context for now
	is the UConnection, intermediate results in functions are printed in
	the console.

	Because of the 2nd point, it frequently happens that parse errors
	appear before the result of the correct code preceding them.  This
	is because if you have, say, "1;*;2;" and the connection receives
	the 3 hunks ("1;" and "*;" and "2;") at the same time, it will
	attempt to build the AST.  But since the 2nd hunk is invalid, a
	parse error is issued and this hunk is discarded.  Then the
	resulting AST ("1;2;noop") is evaluated.  That's why the parse error
	will appear before the result of "1;" (well, it will most likely do
	in the console, but it might not over the network, this is non
	deterministic, it depends on timing issues).

	* include/kernel/uconnection.hh (execute): Don't take any argument.
	(has_pending_command, drop_pending_commands): New.
	Remove some attributes from the public visibility.
	(append): Remove.
	* include/kernel/userver.hh: Aesthetic change.
	* src/ast/ast.yml (BinaryExp): Equip lhs and rhs with setters.
	* src/object/fwd.hh: Clarify the code with comments.
	* src/runner/runner.hh (emit_result): New.
	(result) Remove.
	* src/runner/runner.cc (emit_result): Implement.
	(operator() (SemicolonExp)): Emit results to the context.
	* src/runner/runner.hxx (result): Remove.
	* src/uconnection.cc (ctor, dtor): Adjust.
	(has_pending_command, drop_pending_commands): Implement.
	(received): Properly store and build the AST so that only one call
	to execute is made per cycle.
	(simplify): Remove (unused).
	(execute): Adjust.  Don't print anything.  The result is printed by
	the Runner with emit_result.
	(append): Remove.
	* src/userver.cc: Adjust.

2007-07-28  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Properly restore the call stack of coroutines.
	* src/runner/coroutine.hh: Use a list instead of a stack to hold the
	stack of calls.  When yielding, the execution is saved right before
	the call.  New contexts are pushed at the end of the list.  This
	way, when a coroutine is resumed, the stack frame is properly
	restored (which leads to much more natural programming and makes it
	possible to return values from one coroutine to another).
	* src/runner/coroutine.hxx: Adjust.
	* src/runner/runner.cc: Compilation fix.

2007-07-28  Benoit Sigoure  <tsuna@lrde.epita.fr>

	First attempt to implement parallelism with coroutines.
	* src/runner/Makefile.am: Add new files.
	* src/runner/coroutine.hh: New.
	* src/runner/coroutine.hxx: New.
	* src/runner/fwd.hh: New.
	* src/runner/job.hh (yield): New.
	* src/runner/job.hxx (yield): Implement.
	* src/runner/runner.cc: Complete rewrite with coroutines.  AndExp
	doesn't work.
	* src/runner/runner.hh (Runner): Inherit from Coroutine.
	* src/runner/runner.hxx: Adjust.
	* src/runner/scheduler.cc: New.
	* src/runner/scheduler.hh: Adjust.
	* src/runner/scheduler.hxx (add_job): Implement.
	* src/uconnection.cc (execute): Adjust.
	* src/userver.cc (work): Invoke the Scheduler.

2007-07-28  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Code cleanup (use C++ instead of C).
	* src/parser/uparser.hh (process): Use a std::string instead of a
	ubyte*+int.
	(process): Rename as process_file (using overloads to do something
	different is evil, a small kitten died because of this one).
	* src/parser/uparser.cc (process): Adjust.
	(process(std::string)): Rename as process_file.
	* src/ucommandqueue.hh (popCommand): Return a std::string instead of
	a ubyte* (and don't take an int-reference to return the length).
	* src/ucommandqueue.cc (popCommand),
	* src/uconnection.cc (received),
	* src/uexpression.cc (eval_FUNCTION_EXEC_OR_LOAD): Adjust.

2007-07-28  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Code cleanup.
	* include/kernel/uconnection.hh (execute): Argument is now a
	const reference (BinaryExp) instead of a reference-to-pointer (Ast).
	* src/parser/uparser.hh (commandTree): No longer a public attribute.
	(command_tree_get, command_tree_set): New accessors.
	* src/parser/uparser.cc: Adjust, implement new accessors.
	* src/parser/bison/ugrammar.y,
	* src/uconnection.cc,
	* src/uexpression.cc,
	* src/userver.cc: Adjust.

2007-07-28  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Remove dead code.
	* src/uconnection.cc: Remove all the hunks between #if 0 ... #endif.
	* src/userver.cc: Aesthetic change.

2007-07-27  mefyl  <mefyl@lrde.epita.fr>

	Improve primitive-generation macros. Add list primitives.
	* src/object/primitives.hh: Macro now can act whether on Urbi object,
	  whether on C++ values.
	* src/object/float-class.cc: Use new macros.
	* src/object/list-class.cc: Add head, tail, front and back primitives.

2007-07-27  mefyl  <mefyl@lrde.epita.fr>

	Generalize and document primitive-generation macros.
	* src/object/atom.hh: Add an access to the traits, for macros.
	* src/object/primitives.hh: Add generic macros for
	  primitives generation,.
	* src/object/float-class.cc: Remove float-dedicated macros
	  and use generic ones.
	* src/object/list-class.cc: Use macros.

2007-07-27  Thomas Moulard  <thomas.moulard@gmail.com>

	Fix minor problems in UrbiException.
	* src/object/urbi-exception.cc: Aesthetic change.
	* src/object/urbi-exception.hh:
	Remove superfluous prototype specification.

2007-07-27  Thomas Moulard  <thomas.moulard@gmail.com>

	Add UrbiException class, handle some maths errors.
	* src/object/Makefile.am: Add urbi-exception to libobject sources.
	* src/object/float-class.cc: Handle /0 and %0 errors.
	* src/object/fwd.hh: Add UrbiException.
	* src/object/urbi-exception.cc: New.
	* src/object/urbi-exception.hh: New.

2007-07-27  Thomas Moulard  <thomas.moulard@gmail.com>

	Split primitices.cc.
	* src/object/Makefile.am: Add new files to libobject sources.
	* src/object/code-class.cc: New.
	* src/object/code-class.hh: New.
	* src/object/context-class.cc: New.
	* src/object/context-class.hh: New.
	* src/object/float-class.cc: New.
	* src/object/float-class.hh: New.
	* src/object/integer-class.cc: New.
	* src/object/integer-class.hh: New.
	* src/object/list-class.cc: New.
	* src/object/list-class.hh: New.
	* src/object/object-class.cc: New.
	* src/object/object-class.hh: New.
	* src/object/object.hxx: Call root_classes_initialize function.
	* src/object/primitive-class.cc: New.
	* src/object/primitive-class.hh: New.
	* src/object/primitives.cc:
	Remove moved code and fix static initialization problem.
	* src/object/primitives.hh: Add root_classes_initialize prototype.
	* src/object/string-class.cc: New.
	* src/object/string-class.hh: New.

2007-07-27  mefyl  <mefyl@lrde.epita.fr>

	Temporarily remove %destructor to fix memory errors.
	* src/parser/bison/ugrammar.y: Here.

2007-07-27  mefyl  <mefyl@lrde.epita.fr>

	Add concatenation operator on lists.
	* src/object/primitives.cc: Here.
	* src/object/atom.hh,
	* src/object/atom.hxx,
	* src/object/fwd.hh: Aesthetic changes and coding-style fixes.

2007-07-27  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Coding style changes.
	* src/runner/job.hh (setScheduler): Rename as scheduler_set.
	(getScheduler) Rename as scheduler_get.
	* src/runner/job.hxx: Adjust.
	* src/runner/runner.hh: Aesthetic change.

2007-07-27  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Start to integrate the Scheduler in the UServer.
	* include/kernel/userver.hh (getScheduler): New.
	* include/kernel/userver.hxx (getScheduler): Implement.
	* src/runner/job.hh: A Job is copyable.  Change the interface:
	(ctor): Take a Scheduler in argument.
	(setScheduler, getScheduler): New.
	(run): No longer virtual, calls a protected pure virtual `work'
	instead.
	(work, terminate): New.
	(start, stop): Become protected.
	* src/runner/job.hxx: Add lots of assert.
	(setScheduler, getScheduler, run, terminate, start, stop): Implement.
	* src/runner/runner.hh,
	* src/runner/runner.hxx: Adjust accordingly.
	* src/runner/scheduler.hxx: New.
	* src/runner/scheduler.hh: Include the .hxx file.
	* src/uconnection.cc (execute): Give the Scheduler to the Runner.
	* src/userver.cc: Adjust.
	* src/runner/Makefile.am: Add the new file.

2007-07-27  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Add new classes for the Scheduler.
	The Scheduler itself is not yet used.
	* src/runner/job.hh: New.
	* src/runner/job.hxx: New.
	* src/runner/runner.hh: Runner is-a Job.
	* src/runner/runner.hxx (Runner::run): New.
	* src/runner/scheduler.hh: New.
	* src/runner/Makefile.am: Add new files.

2007-07-26  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Use characters instead of strings, wherever possible.
	* src/object/atom.hxx,
	* src/object/object.cc,
	* src/parser/uparser.cc,
	* src/ucommand.cc,
	* src/uconnection.cc,
	* src/ueventcompound.hh,
	* src/ueventhandler.cc,
	* src/ueventinstance.hh,
	* src/uexpression.cc,
	* src/userver.cc,
	* src/ustring.cc,
	* src/uvalue.cc,
	* src/uvariablename.cc: Here.

2007-07-26  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Split the UServer::work method.
	* include/kernel/userver.hh (work_exec_timers_,
	work_access_and_change_, work_handle_connections_,
	work_handle_stopall_, work_blend_values_, work_execute_hub_updater_,
	work_test_cpuoverload_, work_reset_if_needed_): New.
	(reseting): Rename as `resetting'.
	* src/userver.cc: Implement.
	* src/ucommand.cc: Adjust.

2007-07-26  Benoit Sigoure  <tsuna@lrde.epita.fr>

	More memory-tracking-related clean up.
	* include/kernel/ucomplaints.hh,
	* src/ucomplaints.cc,
	* src/userver.cc: Remove UERROR_MEMORY_OVERFLOW and
	UERROR_MEMORY_WARNING.

2007-07-26  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Remove the memory tracking related code.
	* include/kernel/mem-track.hh: Remove.
	* Makefile.am,
	* include/kernel/uconnection.hh,
	* include/kernel/ustring.hh,
	* include/kernel/utypes.hh,
	* src/ubinary.cc,
	* src/ucommand.cc,
	* src/ucommandqueue.cc,
	* src/ueventhandler.cc,
	* src/uexpression.cc,
	* src/ufunction.cc,
	* src/ughostconnection.cc,
	* src/unamedparameters.cc,
	* src/uqueue.cc,
	* src/userver.cc,
	* src/ustring.cc,
	* src/uvalue.cc,
	* src/uvariable.cc,
	* src/uvariablelist.cc,
	* src/uvariablename.cc: Adjust.

2007-07-26  Thomas Moulard  <thomas.moulard@gmail.com>

	Handle unary negation.
	* src/object/atom.hh: Fix documentation.
	* src/runner/runner.cc,
	* src/runner/runner.hh: Handle unary negation.
	* src/runner/runner.hxx: Remove buggy include.

2007-07-26  mefyl  <mefyl@lrde.epita.fr>

	Handle literal strings.
	* src/runner/runner.cc,
	* src/runner/runner.hh: Here.

2007-07-26  mefyl  <mefyl@lrde.epita.fr>

	Handle literal lists.
	* src/object/fwd.hh: Add `list' to the primitive list.
	* src/uconnection.cc: Result printing moved ...
	* src/object/atom.hh,
	* src/object/atom.hxx: ... here, inside the new `print' method.
	* src/object/object.cc,
	* src/object/object.hh: Add the `print' method.
	* src/object/primitives.cc,
	* src/object/primitives.hh: Add list declaration and initialization.
	* src/runner/runner.cc,
	* src/runner/runner.hh: Handle literal lists.

2007-07-25  Akim Demaille  <akim@lrde.epita.fr>
	Clean a bit
	* src/object/atom.hh, src/object/atom.hxx (Atom::Atom): Don't take
	the arg as ref, as it prevents the type of the arg from being a ref.
	(value_get): Remove the non-const one.
	(code_traits, context_traits): Take a ref, not a pointer.
	(context_traits): Doesn't need to be const.
	* src/object/fwd.hh
	(APPLY_ON_ALL_PRIMITIVES_BUT_OBJECT, APPLY_ON_ALL_PRIMITIVES):
	Remove.
	(APPLY_ON_GLOBAL_PRIMITIVES_BUT_OBJECT)
	(APPLY_ON_GLOBAL_PRIMITIVES): Rename back as...
	(APPLY_ON_ALL_PRIMITIVES_BUT_OBJECT, APPLY_ON_ALL_PRIMITIVES):
	these, since we do not need the others
	* src/object/primitives.cc: Use cast instead of safe_cast + assert.
	Fix indentation and semicolon use.
	Comment changes.
	* src/runner/runner.cc: Adjust.
	* src/uconnection.cc: Ditto.

2007-07-24  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Remove dead code.
	* src/userver.cc (work): #if 0 ... #endif.

2007-07-24  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Code clean up in UServer.
	Remove useless memory checks.  Attempt to use accessors instead of
	public attributes.
	* include/kernel/userver.hh: Move inline code to the .hxx file.
	(ctor): Remove the 2nd argument
	(freeMemory).
	(initialization): Remove the objsolete method.
	(find_file, loadFile, saveFile): Use std::string.
	(memoryCheck): Remove.
	(addConnection, removeConnection, addAlias): Use references instead
	of pointers (because NULL pointers are unexpected there).
	(isRunningSystemCommands, setSystemCommand, getTag, getGroupTab,
	getFunctionTab, getObjTab, getFunctionBinderTab, getAliasTab,
	isDefChecking, setDefCheck, getObjWaitTab, getAliasTab,
	getVariableTab, getFunctionDefTab, getEventBinderTab,
	hasSomethingToDelete): New accessors.
	(unic): Rename as unique.
	* include/kernel/userver.hxx: New.
	* Makefile.am: Add new file.
	* src/object/Makefile.am: Use libkernel.la to build the tests
	(needed on my machine because UConnection::send is used).
	* src/object/object-test.hh: Don't declare a global UServer since
	libkernel.la provides one.
	* src/console.cc,
	* src/network/bsdnet/network.cc,
	* src/ucommand.cc,
	* src/uconnection.cc,
	* src/ueventhandler.cc,
	* src/uexpression.cc,
	* src/uobj.cc,
	* src/uobject.cc,
	* src/userver.cc,
	* src/uvalue.cc,
	* src/uvar.cc,
	* src/uvariable.cc,
	* src/uvariablename.cc: Adjust accordingly (use new accessors etc).

2007-07-24  Akim Demaille  <demaille@gostai.com>

	Implement echo
	* src/object/atom.hh, src/object/atom.hxx (value_get): Duplicate
	const and non const.
	* src/object/primitives.cc (context_class_echo): New.

2007-07-24  Akim Demaille  <demaille@gostai.com>

	echo as a symbol
	* src/parser/bison/utoken.l (echo): Use RETURN_OP.
	* src/parser/bison/ugrammar.y: Adjust.

2007-07-24  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Prepare to handle AndExp.
	* src/parser/uparser.cc (parse_): Don't even look at YYDEBUG if
	ENABLE_DEBUG_TRACES is defined.
	* src/runner/runner.hh (operator()): Override for AndExp.
	* src/runner/runner.cc: Dummy (empty) implementation.
	* src/uqueue.hh (ctor),
	* src/ucommandqueue.hh (ctor): Mark as explicit.
	* src/userver.cc: Fix some comments.

2007-07-24  Akim Demaille  <demaille@gostai.com>

	Context is per connection
	Each connection must store its own rContext, otherwise we
	create it for each evaluation of a command, therefore keep the
	same one for all the connection life.
	* include/kernel/uconnection.hh (context_): New.
	* src/runner/runner.hh, src/runner/runner.hxx (context_): Take
	it as an rContext.
	* src/uconnection.cc (execute): Adjust.

2007-07-24  Akim Demaille  <demaille@gostai.com>

	Give details on failures
	* src/object/object.cc (lookup): Send a readable exception.

2007-07-24  mefyl  <mefyl@lrde.epita.fr>

	Build and pretty-print ListExp ast nodes.
	* dev/ast-pretty-printer-gen: Don't warn about unused variables.
	* src/ast/ast.yml: Add printer for ListExp.
	* src/parser/bison/ugrammar.y: Build ListExp ast node.

2007-07-24  Akim Demaille  <demaille@gostai.com>

	rContext
	* src/object/fwd.hh (APPLY_ON_ALL_PRIMITIVES_BUT_OBJECT)
	(APPLY_ON_ALL_PRIMITIVES): New.
	* src/object/atom.hh, src/object/atom.hxx (kernel/fwd.hh):
	Include to get UConnection.
	(context_traits): New.
	Fix Doc.
	(op<<(UConnection)): New.
	* src/object/object.hh, src/object/object.cc: Handle ALL
	primitives, not just GLOBAL.
	* src/object/primitives.cc (context_class_initialize): New.
	(root_classes_initialize): Call it.
	Use APPLY_ON_ALL_PRIMITIVES_*, since Context is to handle too.
	* src/runner/runner.hh, src/runner/runner.hxx (Runner::Runner):
	Take a UConnection as arg.
	(context_): New.
	(target): Use it.
	(rContext): New typedef.
	* src/uconnection.cc: Adjust Runner construction.

2007-07-24  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Update externals.
	* configure.ac: List kernelteam@gostai.com.

2007-07-24  Akim Demaille  <demaille@gostai.com>

	ALL => GLOBAL
	* src/object/atom.hxx, src/object/fwd.hh, src/object/object.cc,
	* src/object/object.hh, src/object/primitives.cc
	(APPLY_ON_ALL_PRIMITIVES_BUT_OBJECT, APPLY_ON_ALL_PRIMITIVES):
	Rename as...
	(APPLY_ON_GLOBAL_PRIMITIVES_BUT_OBJECT, APPLY_ON_GLOBAL_PRIMITIVES):
	these.

2007-07-24  mefyl  <mefyl@lrde.epita.fr>

	Reduce code duplication. Use strings instead of char*.
	* src/parser/uparser.cc,
	* src/parser/uparser.hh: Use std::string instead of char*.
	  Add accessors for errors and warnings handling.
	* src/uconnection.cc,
	* src/uexpression.cc: Use the new interface for
	  errors and warnings handling.

2007-07-24  Akim Demaille  <demaille@gostai.com>

	Add k2 tests
	* tests-local.mk (TESTS): Extend it.

2007-07-24  mefyl  <mefyl@lrde.epita.fr>

	Report "^" as "**" in the scanner.
	* src/parser/bison/utoken.l: Here.

2007-07-24  Guillaume Deslandes  <deslandes@gostai.com>

	* src/object/object-test-primitives.cc: Remove extra arg.
	* src/object/primitives.cc: Restore argument indexes.

2007-07-23  Guillaume Deslandes  <deslandes@gostai.com>

	Fix argument index for method calls in objects
	* src/object/object-test-primitives.cc: Here.
	* src/object/primitives.cc: Add target.

2007-07-23  Thomas Moulard  <thomas.moulard@gmail.com>

	Add math primitives.
	* src/object/primitives.cc: Here.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	function name args body
	* src/parser/bison/ugrammar.y: Recognize it.
	* tests-local.mk, Makefile.am: Reactivate the tests.
	IT DOES NOT WORK WELL, because recent changes in tests/
	made it less robust.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	"Support" wait & noop
	* src/ast/ast.yml (YieldExp): Rename as...
	(Noop): this.
	* src/ast/all.hh: Adjust.
	* src/object/primitives.cc (object_class_wait): New.
	* src/parser/bison/ugrammar.y, src/parser/bison/utoken.l
	(wait): Store its symbol.
	Use it to implement it as a CallExp.
	Remove useless code.
	* src/uconnection.cc (execute): Display something only if there
	is something to display.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Fix again ast-nodes.mk generation
	* src/ast/Makefile.am: Use always the same name, with $(srcdir),
	so that Make realizes it must update it.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Fix make check
	* src/object/Makefile.am (LDADD): Add libast.
	* src/object/object-test.hh (urbiserver): New.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Activate function calls
	* src/parser/bison/ugrammar.y: Generalize the function call syntax.
	Delete lists that have been spliced.
	(new_exp): Return type is CallExp.
	(name): Type is CallExp.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Remove debug scafolding
	Thanks to Ted and Julian (Valgrind).
	* src/parser/bison/ugrammar.y: Activate dtors.
	* src/runner/runner.cc: Remove debug traces.
	* src/uconnection.cc (UConnection::execute): Deactivate delete.

2007-07-20  Guillaume Deslandes  <deslandes@gostai.com>

	Remove extra delete in uconnection.cc (execute)
	* src/uconnection.cc: here.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Warning: does not work!
	* src/object/atom.hxx (ast/pretty-printer.hh): Include.
	* src/parser/bison/ugrammar.y: Deactivate dtors.
	* src/runner/runner.cc: Add debug scafolding.
	* src/uconnection.cc, src/uexpression.cc: Do not free the Ast.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Prettify
	* src/ast/ast.yml (CallExp::printer): Don't display useless parens.
	* src/object/Makefile.am: Don't compile atom.cc, it's empty.
	* src/runner/runner.cc (CallExp): Initial attempt to call a Code.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Support function (but not yet calls)
	* src/ast/all.hh (function.hh): Include.
	* src/ast/ast.yml (AssignExp::printer): New.
	(FunctionDec): Rename as...
	(Function): this.
	Derive from Exp, not Dec: it does not have a name.
	Remove the "result" attribute, we are not typed.
	Add printer description.

	* src/object/fwd.hh: Tidy.
	(APPLY_ON_ALL_PRIMITIVES_BUT_OBJECT): Add code/Code.
	* src/object/atom.cc: Empty.
	* src/object/atom.hh, src/object/atom.hxx (code_traits): New.
	Use APPLY_ON_ALL_PRIMITIVES_BUT_OBJECT.
	(special_slots_dump): Use libport::deref since code is actually
	a pointer.
	* src/object/primitives.hh, src/object/primitives.cc
	(code_class, code_class_initialize): New.
	* src/parser/bison/ugrammar.y: Sort things together.
	(<symbols>): New type.
	Use it.
	(function <id> <args> { <expr> }): New.

	* src/runner/runner.hh, src/runner/runner.cc (Function):
	Preliminary support.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	shutil.rm does not exist
	* dev/tools.py: Use os.remove.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Clean up
	* dev/ast_params.py: Support symbols_type.
	* dev/ast-clone-visitor-gen: Use tools.banner.
	* dev/ast-default-visitor-gen: Fix ctor layout.
	* dev/ast-nodes-gen: Use tools.lazy_install.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Fix lazy_overwrite
	* dev/tools.py (warning): Simplify.
	(lazy_overwrite): Do not recreate the file if it is not
	needed!

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Fix dependency on ast-nodes.mk
	* src/ast/Makefile.am: Depend on nodes-mk.stamp since the
	generator is ast-nodes-mk-gen.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Improve ast-fwd-gen
	* dev/ast_params.py (fwd_hh_epilogue): New.
	* dev/ast-fwd-gen: Use it.
	Modernize.

2007-07-20  Akim Demaille  <demaille@gostai.com>

	Let all the classes be accessible
	* src/object/primitives.cc (root_classes_initialize): Register
	the root classes in Object.
	* src/parser/bison/ugrammar.y (new id): Properly clone the base
	class, not the Context.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	new Object
	* src/object/primitives.cc (object_class_print)
	(object_class_clone, object_class_init): New.
	(object_class_initialize): Bind them.
	* src/parser/bison/ugrammar.y (new "id"): Run clone and init.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	Connetion -> Context to please JC
	* src/object/primitives.cc, src/object/primitives.hh,
	* src/parser/bison/ugrammar.y, src/runner/runner.hxx: Do it.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	merge -r 1332:1336 https://svn.gostai.com/svn/kernel1/trunk

	2007-07-17  Akim Demaille  <demaille@gostai.com>
	Fix warning output
	* src/uconnection.cc (received): Process the warnings similarly
	to the errors.
	Add a few PINGs.
	(UConnection::processCommand::morphed): Reduce its scope.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	"Return" results
	* src/parser/bison/ugrammar.y: Set up.commandTree.
	* src/uconnection.cc (execute): Send back the result for
	floats only at the moment.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	AX_*
	* configure.ac: Catch them.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	merge -r 1320:1332 https://svn.gostai.com/svn/kernel1/trunk

	2007-07-17  Akim Demaille  <demaille@gostai.com>
	Clean up some UConnection::send
	* src/ucommand.cc: Show what I'd like to write.
	* src/uconnection.cc (sendPrefix): Factor.

	2007-07-17  Akim Demaille  <demaille@gostai.com>
	* src/ucommand.hh, src/ucommand.cc
	(UCommand_EXPR::execute_function_call): New.
	Extracted from...
	(UCommand_EXPR::execute_): here.
	Scope reduction.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	Hook to the regular input mechanism
	* include/kernel/fwd.hh (ast::Ast): New.
	* include/kernel/uconnection.hh, src/uconnection.cc: No longer
	use UCommand, but rather ast::Ast.
	Adjust dependencies.
	Comment out obsolete code.
	(processCommand): Remove.
	(execute): Update to use the Ast.
	Comment the code for "binary commands".
	Fix the handling of warnings.
	* src/parser/uparser.hh (commandTree): Now an AST.
	* src/ucommand.cc: Comment out code that no longer makes sense.
	* src/uexpression.cc: Ditto.
	* src/userver.cc: Ditto.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	* src/parser/bison/ugrammar.y (EVALUATE): Simplify.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	We do use bison 2.3a+
	* src/parser/bison/flex-lexer.hh: Remove useless includes.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	Initial support for assignment
	* src/ast/ast.yml (AssignExp): Rename members.
	* src/parser/bison/ugrammar.y: An lvalue has 1 argument: the
	current object.
	* src/runner/runner.hh, src/runner/runner.hxx (target): New.
	* src/runner/runner.hh, src/runner/runner.cc (AssignExp): New.
	(CallExp): Activate only if it has to be activated.

2007-07-17  Guillaume Deslandes  <deslandes@gostai.com>

	Put Target as first arg for CallExp
	* src/ast/ast.yml (CallExp): remove target.
	* src/parser/bison/ugrammar.y (CallExp): use target as arg[0].
	* src/runner/runner.cc: use aeg[0] as target.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	Revamp the handling of lvalues
	The current grammar is way too hard to transform to support
	several kinds of lvalues, including with messages.  The following
	shows the problem:

	%%
	target: /* empty */
	      | expr "."

	name: target "identifier"

	expr: name
	    | target "identifier" "(" ")"
	    | "%" name

	This grammar has a reduce/reduce conflict: on "% id .", the
	parser does not know whether it will read "% id . id", in
	which case it should reduce "name -> expr" to "% _expr ._ id"
	-> "% _target id_" -> "_% var_" -> "expr", or read "_% name_ . id ()"
	-> "_expr ._ id ()" -> "_target id ()_" -> expr.  The grammar is
	not ambiguous, but it is not LR.  Of course GLR would do, but
	we try to avoid it.

	So it is decided that lvalue will be basically *parsed* as
	any kind of expr, but a run time check during the parsing
	(in the action) will select only those that we consider as
	value lvalues.

	* src/ast/ast.yml (AssignExp): The lhs is a CallExp.
	* src/parser/bison/ugrammar.y (rvalue): Remove, use only expr.
	(libport::deref): Use it to print pointers, so that even if they
	are null, we don't dump core.
	Use lexical_cast.
	(lvalue): Now a CallExp.
	Assign all its former rules to expr, introduce a new one that
	filters Expr* that are correct.

2007-07-17  Akim Demaille  <demaille@gostai.com>

	Grammar clean up
	* src/parser/bison/ugrammar.y: Let foreach use a single identifier,
	not a complex name.
	Group derive stuff together.
	Remove dead comment.

2007-07-16  Guillaume Deslandes  <deslandes@gostai.com>

	* src/kernel.mk: Add include dir for UObject headers.

2007-07-16  Akim Demaille  <demaille@gostai.com>

	merge -r 1298:1320 https://svn.gostai.com/svn/kernel1/trunk

	2007-07-16  Akim Demaille  <demaille@gostai.com>
	Nuke keywords that are not used
	* src/parser/bison/ugrammar.y, src/parser/bison/utoken.l: Remove
	keyword that are scanned at all, or not used anywhere in the
	grammar.
	Some (e.g., "stop" and "switch") actually used to be specific
	terminals, but they are now part of a wider family (OPERATOR_ID,
	TOK_NUMBER).

	2007-07-16  Akim Demaille  <demaille@gostai.com>
	Remove dead keyword
	* configure.ac: Set version.
	* src/parser/bison/ugrammar.y (TOK_EXPRBLOCK): Remove, useless.
	* src/uconnection.cc: Space changes.

	2007-07-13  Akim Demaille  <demaille@gostai.com>
	merge -r 1266:1300 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-07-13  Akim Demaille  <demaille@gostai.com>
	Fix ''d
	* src/parser/bison/ugrammar.y: Actually, it's 'dd.

2007-07-16  Akim Demaille  <demaille@gostai.com>

	Use includes
	* src/parser/bison/ugrammar.y: Remove useless includes.
	(''d): Actually it's named...
	('dd): this.

2007-07-16  Akim Demaille  <demaille@gostai.com>

	Remove debug scafolding
	* src/parser/bison/ugrammar.y (new_bin): Here.

2007-07-16  Akim Demaille  <demaille@gostai.com>

	Fix and simplification
	* src/parser/bison/ugrammar.y (<exprs>): Fix its printer.
	(expr.opt): Use it for emit.

2007-07-16  Akim Demaille  <demaille@gostai.com>

	Factor effective arguments
	* src/parser/bison/ugrammar.y (args): New.
	Use it where it factors the grammar without changing it.

2007-07-16  Akim Demaille  <demaille@gostai.com>

	Class instantiations are regular expressions
	* src/parser/bison/ugrammar.y (stmt): Move the special
	"class" instantiation to...
	(expr): here.
	The actions are still to write.

2007-07-16  Akim Demaille  <demaille@gostai.com>

	Bind shutdown and reboot
	* src/object/primitives.hh, src/object/primitives.cc
	(connection_class): New.
	(object_class_initialize): Bind to Object, not Float.
	* src/parser/bison/utoken.l (reboot, shutdown): No longer special.
	* src/parser/bison/ugrammar.y (expr): The printer should not
	evaluate.
	(stmt, lvalue, rvalue, expr): Pass the $1 where appropriate.
	* src/runner/runner.cc (CallExp): Default target is Connection.

2007-07-16  Akim Demaille  <demaille@gostai.com>

	Factor
	* src/parser/bison/ugrammar.y (new_exp): Factor the two
	implementations.

2007-07-16  Akim Demaille  <demaille@gostai.com>

	Avoid undefined values
	* src/parser/bison/ugrammar.y: Actions not defined should set
	the result to 0 to avoid stupid debugging sessions.
	(OPERATOR, OPERATOR_ID, OPERATOR_ID_PARAM, OPERATOR_VAR)
	(BINDER): Now use a Symbol for them.
	* src/parser/bison/utoken.l: Adjust their scanning.

2007-07-16  Akim Demaille  <demaille@gostai.com>

	Make first compilation easier
	* src/ast/Makefile.am: If location.hh is not generated, ask for it.
	* src/parser/bison/bison.mk (generate-parser): New, a hook for
	the previous Makefile.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	libport/Makefile.am
	* Makefile.am: Use it.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	merge -r 1269:1298 https://svn.gostai.com/svn/kernel1/trunk

	2007-07-13  Akim Demaille  <demaille@gostai.com>
	Remove incorrect nonterminal aliases
	* src/urbi/trunk/kernel1/src/parser/bison/ugrammar.y: Remove
	explicit strings that were made to be aliases for terminals,
	but it is not accepted but Bison like this, it believes they
	are fresh tokens.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	Tidy grammar
	* src/parser/bison/ugrammar.y: Reorder some rules.
	Remove the strings that Bison interprets as tokens, not aliases
	for nonterminals.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	More primitives
	* src/object/primitives.cc: Add shutdown and reboot primitives.
	Unfortunately not yet callable.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	Upgrade grammar
	* src/parser/bison/ugrammar.y: Remove all types, use <expr> instead.
	(new_exp): Activate and use it.

2007-07-13  Guillaume Deslandes  <deslandes@gostai.com>

	Add primitives for floats
	* src/object/primitives.cc: Add operators and base functions.

2007-07-13  Guillaume Deslandes  <deslandes@gostai.com>

	* all.hh: Remove include of ast/op-exp.hh.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	operator<< for slot_type
	* src/object/object.hh (slot_type): Define directly instead of
	asking slots_type::value_type.
	(operator<<): New one for slot_type.
	* src/object/object.hxx: Implement it.
	* src/object/object.cc: Use it.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	Remove OpExp
	* src/ast/ast.yml (OpExp):
	Remove, handled by CallExp now.
	* src/object/atom.hxx, src/object/object.cc,
	* src/runner/runner.cc:
	Space changes.
	Use `=' to report slots.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	Runner::CallExp
	* src/runner/runner.cc (CallExp): Actually call the primitive.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	Fix the definition of the slots of the primitive classes
	Here's the catch: I was using the operator[] to define the
	type of each base class, but operator[] updates the slots, i.e.,
	it first looks for the slot in the hierarchy, and then updates
	it!  As a result, it was only the version of Object that was
	changed several times, and every other class was pointing to it.
	* src/object/fwd.hh: Simplify.

	* src/object/object.cc, src/object/object.hh, src/object/object.hxx
	(set_slot, update_slot, remove_slot): Rename as...
	(slot_set, slot_update, slot_remove): these.
	Use BOOST_FOREACH.
	* src/object/primitives.cc: Don't put in the anonymous namespace
	what must be visible from other compilation units.
	Use slot_set.
	* src/object/object-test-primitives.cc: Add missing dereferencing.
	* src/object/object-test-slot.cc: Adjust.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	Improve primitive support
	* src/object/fwd.hh (APPLY_ON_ALL_PRIMITIVES_BUT_OBJECT)
	(APPLY_ON_ALL_PRIMITIVES, objects_type, primitive_type): New.
	Use these macros where possible to factor the list of primitives.
	(primitive): A new kind of Atom.
	* src/object/atom.cc, src/object/atom.hh, src/object/atom.hxx:
	Move the declaration of the float_class primitives to...
	* src/object/primitives.hh, src/object/primitives.cc: Here.
	(primitive_traits): New.
	* src/object/object.cc, src/object/object.hh: Adjust.
	* src/object/object-test-primitives.cc: Ditto.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	Fix the initialization of the base class objects
	* src/object/primitives.hh, src/object/primitives.cc: New, taken
	from...
	* src/object/object.cc, src/object/object.hh, src/object/object.hxx:
	Here.
	* src/object/Makefile.am: Adjust.
	* src/object/primitives.hh, src/object/primitives.cc
	(root_classes_initialize, root_classes_initialized): New.
	* src/object/object.cc, src/object/object.hh, src/object/object.hxx:
	Use some assertions.
	More is needed.
	Use BOOST_FOREACH (it's cool!).
	(id_dump): Use directly the String value instead on relying on the
	behavior of operator<<.
	* src/object/atom.hxx (primitives.hh): Include.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	Don't run the tests
	K2 is far from being ready for it.
	* Makefile.am (SUBDIRS): Remove tests for the time being.

2007-07-13  Akim Demaille  <demaille@gostai.com>

	* src/ast/ast.yml (CallExp::printer): Fix it.

2007-07-12  Akim Demaille  <akim.demaille@gmail.com>

	Fix pretty printing of CallExp
	* src/ast/ast.yml: Do not output the '.' when there is no target.

2007-07-12  mefyl  <mefyl@lrde.epita.fr>

	Test pointers before dereferencing them in pretty-printer generator.
	* dev/ast-pretty-printer-gen: Here.
	* src/ast/ast.yml: Replace now useless hack.

2007-07-12  Akim Demaille  <akim.demaille@gmail.com>

	Use "type" just as IO does
	* src/object/object.hh, src/object/object.cc (lookup_set_type): Now
	const.
	(lookup): Now const too.
	(lookup): New, not const.
	(id_lookup): New.
	Use "type", not "name".
	* src/object/object-test-lookup.cc, src/object/object-test-parent.cc,
	* src/object/object-test-slot.cc, src/object/object-test.cc:
	Use "type", not "name".

2007-07-12  mefyl  <mefyl@lrde.epita.fr>

		merge -r 1261:1269 https://svn.gostai.com/svn/kernel1/trunk
	2007-07-12  mefyl  <mefyl@lrde.epita.fr>
	Update the test suite external.

	2007-07-12  mefyl  <mefyl@lrde.epita.fr>
	merge -r 1259:1266 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-07-12  mefyl  <mefyl@lrde.epita.fr>
	Warn on use of operator ^. Add operator **.
	* src/parser/uparser.cc,
	* src/parser/uparser.hh: Add a mehod to emit warnings.
	* src/parser/bison/utoken.l: Emit warnings on ^.
	Scan ** as exponent operator.
	* src/uconnection.cc,
	* src/uexpression.cc: Report warnings through the connection.

2007-07-12  Akim Demaille  <akim.demaille@gmail.com>

	CallExp::printer
	* src/ast/ast.yml (CallExp::printer): Output the target.
	* src/object/atom.hh: Space changes.

2007-07-12  Akim Demaille  <akim.demaille@gmail.com>

	Add some primitives for Floats
	* src/object/fwd.hh (float_traits, Float, rFloat, integer_traits)
	(Integer, rInteger, string_traits, String, rString): Fwd decl
	or declare them.
	* src/object/atom.cc, src/object/atom.hh, src/object/atom.hxx:
	(kind_type, string_of): New.
	(kind_get): Now return the kind, not a string.
	* src/object/object.cc, src/object/object.hh, src/object/object.hxx:
	(float_class_add, float_class_div, float_class_mul, float_class_sub):
	New.

	* src/object/object-test-primitives.cc: New.
	* src/object/Makefile.am: Adjust.

2007-07-12  mefyl  <mefyl@lrde.epita.fr>

	merge -r 1216:1261 https://svn.gostai.com/svn/kernel1/trunk
	2007-07-12  mefyl  <mefyl@lrde.epita.fr>
	Fix previous patch: use automerge.
	* .automerge: Update.

	2007-07-12  mefyl  <mefyl@lrde.epita.fr>
	Fix logic operators precedence.
	* src/parser/bison/ugrammar.y: Here.

2007-07-12  Akim Demaille  <akim.demaille@gmail.com>

	clone
	* src/object/object-test-parent.cc: Try using clone.
	* src/object/object.hh, src/object/object.hxx,
	* src/object/object.cc (clone): New.
	(new_object_class, new_float_class): New.
	(object_class, float_class): New.
	Unused for the time being.

2007-07-12  mefyl  <mefyl@lrde.epita.fr>

	Handle pointer attributes and blocks of code insertion in pretty-printer generator.
	* dev/ast-pretty-printer-gen: Here.
	* src/ast/ast.yml: Document.
	* dev/ast.py: Add method to lookup a node attribute.
	* src/ast/Makefile.am: Fix filename error.

2007-07-12  Akim Demaille  <akim.demaille@gmail.com>

	CallExp: optional target
	* src/ast/ast.yml: The CallExp can have an empty target.
	Disable the printing of the target, as the infrastructure is
	not ready yet.
	* src/parser/bison/ugrammar.y: Adjust.

2007-07-12  Akim Demaille  <akim.demaille@gmail.com>

	Operators are syntactic sugar for method calls
	* dev/ast-pretty-printer-gen: We now use more libport tools.
	* src/ast/ast.yml (CallExp): Provide a printer.
	* src/parser/bison/utoken.l (RETURN_OP): New.
	Use it for binary operators for a start.
	* src/parser/bison/ugrammar.y (take): Move higher to make it
	usable ealier.
	(new_exp): Use CallExp instead of OpExp.
	(TOK_BANG, TOK_PERCENT, TOK_STAR, TOK_PLUS, TOK_MINUS)
	(TOK_DIV, TOK_EXP, TOK_EQU, TOK_GTH, TOK_LEQ, TOK_LTH, TOK_PEQ)
	(TOK_NEQ, TOK_GEQ, TOK_DEQ, TOK_REQ): Use their symbol value.

2007-07-11  Guillaume Deslandes  <deslandes@gostai.com>

	Handle hirarchy loop case
	FIXME: Hierarchy loops induce mem leaks (due to ref counting)
	* object-test-lookup.cc: Test hirarchy loops.
	* object.cc: Add lookup wrapper.
	* object.hh: Idem.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	CallExp
	* src/ast/ast.yml (CallExp): The name called is a Symbol.
	* src/parser/bison/ugrammar.y: Let "(" have precedence over "!".
	Remove dead %union definitions.
	Use exps_type for exprs.
	Add empty actions to silence some Bison warnings.
	Change the syntax of function calls to take a identifier as
	name, not an expression.
	(exprs): Implement.

2007-07-11  Guillaume Deslandes  <deslandes@gostai.com>

	Add slot handling to Object
	* Makefile.am: Add test files and programs.
	* object-test-lookup.cc: New.
	* object-test-parent.cc: New.
	* object-test-slot.cc: New.
	* object-test.cc: Split into several files.
	* object-test.hh: New.
	Some useful macros for testing
	* object.cc (lookup): return rObject, add catch if not found.
	* object.hh: Add slot handling methods.
	* object.hxx (operator[]): Use lookup. Create slot if needed.
	(update_slot): New. Use lookup.
	(set_slot): New. Use local slot. Create slot if needed.
	(remove_slot): New. Remove local slot.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	Clean and update
	* dev/ast-fwd-gen: Remove dead code.
	Use tools.
	Remove useless imports.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	Start running
	* src/parser/bison/ugrammar.y (EVALUATE): Scafolding to run
	the runner.
	Use it in a couple of places.
	* src/runner/runner.cc, src/runner/runner.hh (eval): New.
	(result, operator()): New.
	* src/runner/runner.hxx: Fix missing inlines.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	Add missing inline
	* src/ast/ast.yml: For inline code.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	* dev/ast-default-visitor-gen: Do not output default visits for abstract nodes.
	* dev/ast-nodes-gen: Comment changes.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	Minor improvements
	* dev/ast-visitor-gen: Use C++ comments.
	Use lazy_install and banner.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	Recurse in src last
	* src/Makefile.am (SUBDIRS): Restore the correct order.
	The issue we are trying to workaround is the fact that libport
	must be compiled first.  This can't be done properly until
	libport features its own Makefile.am, which is what I tried to
	avoid until now to try to save a few autotool cycles.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	Factor default-visitor generation
	* dev/ast-default-visitor-gen: Use newer routines from tools.
	Fix some Doxygen tags.

2007-07-11  Guillaume Deslandes  <deslandes@gostai.com>

	* bootstrap: Fix python call for ast generation..

2007-07-11  Akim Demaille  <demaille@gostai.com>

	Pretty-print an OpExp
	* src/ast/ast.yml (OpExp): Implement the pretty-printer.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	Improve dev/ framework
	* dev/tools.py (lazy_install): New.
	* dev/ast-clone-visitor-gen, dev/ast-default-visitor-gen,
	* dev/ast-fwd-gen, dev/ast-graph-gen, dev/ast-nodes-gen,
	* dev/ast-pretty-printer-gen, dev/ast-visitor-gen: Use it.
	Use tools.error to issues errors.
	* dev/ast-nodes-mk-gen: Be like the others: create the file,
	don't output on stdout
	* src/ast/Makefile.am: Adjust.
	Now there is also the stamp system that prevents useless Automake
	invocations.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	Improve messages
	* dev/ast.py: Improve warnings and errors.

2007-07-11  Akim Demaille  <demaille@gostai.com>

	Fix identification
	* configure.ac: .

2007-07-10  Guillaume Deslandes  <deslandes@gostai.com>

	Add parent list and lookup method
	* object-test.cc: Test new features.
	* object.cc (lookup) : New, depth first version.
	(special_slots_dump) : Print parents.
	* object.hh: Add typedefs and methods for parents.
	Add method for lookup.
	* object.hxx (parent_add) : New, add parent to object
	(parent_remove) : New, remove parent from object.

2007-07-09  Akim Demaille  <demaille@gostai.com>

	Make debug traces more io like
	* src/object/object.cc (dump): Include the address.

2007-07-09  Guillaume Deslandes  <deslandes@gostai.com>

	* fwd.hh: Add undef for DECLARE.

2007-07-09  Guillaume Deslandes  <deslandes@gostai.com>

	Reorder subdirs in src/Makefile.am
	* Makefile.am: Reorder subdirs, '.' comes firt.

2007-07-09  Akim Demaille  <demaille@gostai.com>

	More object-test
	* src/object/object-test.cc: Strengthen.

2007-07-09  Akim Demaille  <demaille@gostai.com>

	Factor print and rename it as dump
	* src/object/atom.cc, src/object/atom.hh, src/object/atom.hxx,
	* src/object/object.cc, src/object/object.hh, src/object/object.hxx
	(print): Rename as...
	(dump): this, to avoid SWIG problems.
	Call special_slots_dump and kind_get
	(special_slots_dump, kind_get): New.
	(prefix): Rename as...
	(kind): this.
	* src/object/object-test.cc: Strengthen.

2007-07-09  Akim Demaille  <demaille@gostai.com>

	object::Object
	* src/object/atom.cc, src/object/atom.hh, src/object/atom.hxx: New.
	* src/object/fwd.hh: Adjust.
	* src/kernel.mk, src/object/Makefile.am: Adjust.
	* src/Makefile.am: Adjust.
	* src/object/object-test.cc: New.
	* src/object/object.hxx: Add missing inlines.
	(print): Move from here, to...
	* src/object/object.cc: here.

2007-07-09  Guillaume Deslandes  <deslandes@gostai.com>

	Fix ast.yml type error on TagOpExp, update svn:ignore
	* src/ast/ast.yml: 'tag' attribute of TagOpExp is
	of type Exp* not Tag*.

2007-07-09  Akim Demaille  <demaille@gostai.com>

	object::Object
	* configure.ac: Automake 1.10.
	(src/object): New directory.
	* src/Makefile.am: Ditto.
	* src/object/Makefile.am, src/object/fwd.hh, src/object/object.cc,
	* src/object/object.hh, src/object/object.hxx: New.
	* src/runner/runner.hh: Remove useless includes.

2007-07-09  Akim Demaille  <demaille@gostai.com>

	Fix kernel.mk
	* src/kernel.mk (AM_CPPFLAGS): $(uobject_srcdir) is defined
	in src/Makefile.am only, although kernel.mk is used in several
	places, so open code its value here.
	A better and longer implementation might add a new uobject/*.mk
	file just to define this variable.  Probably overkill.

2007-07-09  Akim Demaille  <demaille@gostai.com>

	Upgrade pretty-print generation
	* dev/ast-nodes-gen (print_guard_open, print_guard_close)
	(print_banner): Take the file as argument.
	Don't change the current stdout.
	* dev/ast-pretty-printer-gen: Use them.
	Create an hxx file.
	* dev/tools.py (banner): New.
	(print_banner): Use it.
	* src/ast/Makefile.am: Adjust.

2007-07-09  Akim Demaille  <demaille@gostai.com>

	merge -r 1189:1216 https://svn.gostai.com/svn/kernel1/trunk

	2007-07-09  Akim Demaille  <demaille@gostai.com>
	merge -r 1186:1213 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-07-01  Jean-Christophe Baillie  <baillie@gostai.com>
	This time, we use a cache mechanism to hold the current cycle variable
	value.

	Fix ticket #111 (again).
	* src/ucommand.cc: use cyclevalue with a cache mechanism to initialize
	startval.
	* src/uvariable.cc: init cycleBeginTime to an impossible value (-1).
	* src/uvariable.hh: declare cycleBeginTime and cyclevalue.

	2007-07-01  Jean-Christophe Baillie  <baillie@gostai.com>
	This is a backward move that reintroduces ticket 111, but it will fix
	a much bigger problem where Aldeb is currently stuck. A future better
	fix of 111 is on the way.

	Fix bug aldeb before robocup.
	* src/ucommand.cc: reset old code.

	2007-07-01  Jean-Christophe Baillie  <baillie@gostai.com>
	UVar::reset can be used to set both the value and the previousval of a
	UVariable, which does a "deep" reset of this value.

	add support for UVar::reset.
	* src/uvar.cc: done.

	2007-07-06  Akim Demaille  <demaille@gostai.com>
	* include/kernel/utypes.hh: Use libport::hash_map.

	2007-07-06  Akim Demaille  <demaille@gostai.com>
	Formatting changes
	* src/ucommand.cc: here.

	2007-07-06  Akim Demaille  <demaille@gostai.com>
	Coding style
	* src/ucommand.cc: Prefer for to while.
	Reduce scopes.
	Formatting changes.

	2007-06-26  Akim Demaille  <demaille@gostai.com>
	Var scope
	* src/userver.cc (globalDelete): Move to...
	* src/parser/bison/ugrammar.y: here, as static.

2007-07-09  Akim Demaille  <demaille@gostai.com>

	Add Runner framework
	* src/runner/Makefile.am, src/runner/runner.cc,
	* src/runner/runner.hh, src/runner/runner.hxx: New.
	* configure.ac, src/Makefile.am: Adjust.

2007-07-06  Akim Demaille  <demaille@gostai.com>

	Less includes
	* dev/ast-pretty-printer-gen: Optimize the includes.

2007-07-06  Akim Demaille  <demaille@gostai.com>

	Fix Semicolon pretty printing
	* src/ast/ast.yml: here.

2007-07-06  Akim Demaille  <demaille@gostai.com>

	Fix pretty-printer generator
	* dev/ast-pretty-printer-gen: Do not declare a formal arg name
	if you don't use it.
	Use a shorter name.

2007-06-26  mefyl  <mefyl@lrde.epita.fr>

	Fix pretty-printer generator.
	* src/ast/ast.yml: Document. Use Yaml list instead of
	semicolon-separated list.
	* dev/ast-pretty-printer-gen: Adapt.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	YieldExp
	* src/ast/ast.yml (YieldExp): New.
	Complete a few printers.
	* src/ast/all.hh: Adjust.
	* src/parser/bison/ugrammar.y: Use it.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	Fix dependencies
	* src/ast/Makefile.am (ast.stamp): Rename as...
	(nodes.stamp): this, to match the generator name.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	Fix operator << generation
	* dev/ast-pretty-printer-gen: Put it in the ast namespace.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	Fix warnings
	* dev/ast.py: "default" is a valid Node attribute.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	Finish the pretty printer
	* dev/ast-pretty-printer-gen: Provide a ctor and dtor.
	(PrettyPrinter::ostr_): Let it be a reference.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	More AST generation
	* dev/ast-default-visitor-gen: New.
	* dev/ast-pretty-printer-gen: Fix some errors.
	Don't output a pretty printing rule if there is none.
	Derive from the default visitor rather than the (empty) visitor.
	Provide an operator<<.
	* src/ast/Makefile.am: Factor the generation rules using %-rules.
	* src/ast/all.hh: Include pretty-printer.hh.
	* src/ast/ast.yml: More doc.
	* src/ast/default-visitor.hh, src/ast/default-visitor.hxx: Remove.
	Now generated.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	delete globalDelete
	* src/userver.cc, src/parser/bison/ugrammar.y (globalDelete):
	Remove.
	Also, comment changes.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	Merge command and statement into stmt
	* src/parser/bison/ugrammar.y (statement, command): Merge into...
	(stmt): this.
	(commands): Rename as...
	(stmts): this.
	(TOK_EXPRBLOCK, EXPRBLOCK): Remove, unused.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	merge -r 1187:1189 https://svn.gostai.com/svn/kernel1/trunk

	2007-06-26  Akim Demaille  <demaille@gostai.com>
	Remove dead token
	* src/parser/bison/ugrammar.y (TOK_CMDBLOCK): Remove.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	merge -r 1149:1187 https://svn.gostai.com/svn/kernel1/trunk

	2007-06-26  Akim Demaille  <demaille@gostai.com>
	merge -r 1157:1186 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-06-26  Akim Demaille  <demaille@gostai.com>
	* src/parser/bison/ugrammar.y (variables): Rename as...
	(names): this.

	2007-06-22  Akim Demaille  <demaille@gostai.com>
	purevariable|variable -> name
	* src/parser/bison/ugrammar.y (variable, purevariable): Fuse
	into...
	(name): this.

	2007-06-22  Akim Demaille  <demaille@gostai.com>
	lvalue
	* src/parser/bison/ugrammar.y (lvalue): New.
	Use where appropriate (assignments).
	(rvalue): "static" belongs to here.
	(variable): Adjust.

	2007-06-22  Akim Demaille  <demaille@gostai.com>
	* src/parser/bison/ugrammar.y (derive): New.
	(ravlue): New.
	(variable): Adjust.
	* src/parser/bison/flex-lexer.hh, src/parser/uparser.cc,
	* src/parser/uparser.hh: Adjust includes.

	2007-06-22  Akim Demaille  <demaille@gostai.com>
	class-definition.chk
	* src/parser/bison/ugrammar.y: Comment a weakness.
	* src/uexpression.cc: Formatting changes.

	2007-06-22  Akim Demaille  <demaille@gostai.com>
	Simplify class defs
	* src/parser/bison/ugrammar.y (formal_arguments): New.
	(class_declaration): Use it to factor.

	2007-06-22  Akim Demaille  <demaille@gostai.com>
	Fix list of identifiers handling
	* src/parser/bison/ugrammar.y (var.opt, identifiers.1): New.
	(identifiers): Use them.

	2007-06-18  Jean-Christophe Baillie  <baillie@gostai.com>
	update externals (tests).

	2007-06-18  Jean-Christophe Baillie  <baillie@gostai.com>
	The +freeze flag notifies when the command gets frozen/unfrozen.

	add support for +freeze flag.
	* src/parser/bison/ugrammar.y: add the same optim like for +end.
	* src/parser/bison/utoken.l: add +freeze (and +stop at the same time).
	* src/ucommand.cc: handle the notification.
	* src/unamedparameters.cc: add notifyFreeze boolean to fasten
	treatment.
	* src/unamedparameters.hh: define notifyFreeze.

	2007-06-14  Akim Demaille  <demaille@gostai.com>
	merge -r 1138:1157 https://svn.gostai.com/svn/kernel1/branches/1.0
	Space changes only.

	2007-06-14  Akim Demaille  <demaille@gostai.com>
	* src/uexpression.cc: Use for instead of while.

	2007-06-14  Akim Demaille  <demaille@gostai.com>
	Readability
	* src/ucommand.cc: Formatting changes.
	* src/uexpression.cc (UExpression::eval_VARIABLE): Improve the
	readability of the code handle derives.

	2007-06-10  Jean-Christophe Baillie  <baillie@gostai.com>
	Until now, freezing a time controlled command (like wait or a modified
	assignement) did not freeze the internal time of the command, which
	resulted in an abrupt reajustement when the command was unfrozen. This
	patch fixes the problem on wait and assignments, and the corresponding
	tests has been added.
	add a first attempt in "time freezing" capabilities.
	* src/ucommand.cc: the WAIT and ASSIGN_VALUE commands now store the
	'lastExec' time and a flag when they have been frozen. Upon
	unfreezing, the internal time-oriented variables are adjusted based on
	the difference between the current time and lastExec..
	* src/ucommand.hh: add lastExec and the 'frozen' flag.

	2007-06-04  Akim Demaille  <demaille@gostai.com>
	Finish broken merge
	merge -r 1038:1078 failed to include the modifications for
	uconnection.cc.
	* src/uconnection.cc: Import the changes documented in 2007-06-04.

	2007-06-04  Akim Demaille  <demaille@gostai.com>
	Formatting changes
	* src/ueventhandler.cc: Sort commutable lines.
	Promote for over while.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	variable -> lvalue
	* src/parser/bison/ugrammar.y (variable): Rename as...
	(lvalue): this.
	Beware that some uses are now "name" uses.
	We sticked to the grammar of the trunk.

2007-06-26  Akim Demaille  <demaille@gostai.com>

	names, rvalue
	Get closer to the current trunk's grammar.
	* src/parser/bison/ugrammar.y (variable): Extract...
	(rvalue): this.
	(variables): Rename as...
	(names): this.
	And be actually a list of "name"s, not of "variable"s.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	* src/parser/bison/ugrammar.y: Remove an empty mid-rule action.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	taggedcommands -> commands.
	* src/parser/bison/ugrammar.y (taggedcommands): Rename as...
	(commands): this.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	taggedcommand == command
	* src/parser/bison/ugrammar.y (taggedcommand): Remove, use only
	command.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	Merge name and purevariable
	* src/parser/bison/ugrammar.y (name): Accept what purevariable
	used to accept.
	(purevariable): Remove.
	All users changed to use name instead.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	* src/parser/bison/ugrammar.y: Formatting changes.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	* src/parser/bison/ugrammar.y: Formatting changes.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	Simplify raw_arguments handling
	* src/parser/bison/ugrammar.y (raw_argument): New.
	(rawargument): Rename as...
	(raw_arguments): this.
	Now accept no raw_argument at all.
	Adjust uses.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	* src/parser/bison/ugrammar.y (class_declaration): Accept complex var names.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	* src/parser/bison/ugrammar.y: Throw the parser actions away.
	They clutter the file.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	Fix previous fix checkin
	* src/parser/bison/ugrammar.y (identifiers): Accept "var" where
	appropriate...

2007-06-22  Akim Demaille  <demaille@gostai.com>

	Fix and comment
	* src/parser/bison/ugrammar.y (identifiers): More comments.
	Always accept "var".

2007-06-22  Akim Demaille  <demaille@gostai.com>

	parser: name, identifiers
	* src/parser/bison/ugrammar.y (identifiers): Fix its definition
	that allowed trailing commas.
	(var.opt, identifiers.1): New.
	(name, formal_arguments): New.
	Use them to factor function and event declarations/definitions.
	Note that we break backward compatibility here, since now
	formal_arguments can no longer be empty.  This is because it
	simplifies the task for now.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	Renamings
	* src/parser/bison/ugrammar.y (ustring): Remove, useless currently.
	(arguments, argument_list): Rename as...
	(exprs.1, exprs): these.

2007-06-22  Akim Demaille  <demaille@gostai.com>

	* src/parser/bison/ugrammar.y: Remove "def" support for functions.

2007-06-14  Akim Demaille  <demaille@gostai.com>

	* src/parser/bison/ugrammar.y: Formatting changes.

2007-06-14  Akim Demaille  <demaille@gostai.com>

	Fix communication bw scanner and parser
	* src/parser/bison/ugrammar.y: The scanner no longer uses
	UStrings.

2007-06-04  Akim Demaille  <demaille@gostai.com>

	merge -r 1088:1149 https://svn.gostai.com/svn/kernel1/trunk

	2007-06-04  Akim Demaille  <demaille@gostai.com>
	Finish broken merge
	merge -r 1038:1078 failed to include the modifications for
	uconnection.cc.
	* src/uconnection.cc: Import the changes documented in 2007-06-04.

	2007-06-04  Akim Demaille  <demaille@gostai.com>
	Formatting changes
	* src/ueventhandler.cc: Sort commutable lines.
	Promote for over while.

	2007-06-04  Akim Demaille  <demaille@gostai.com>
	The attribute UVariableName::rooted is not removed (that was
	the effect of the "only" keyword) because it appears to be
	set and checked in other places.
	* src/parser/bison/utoken.l, src/parser/bison/ugrammar.y: Remove
	the "only" keyword.
	This was validated by JCB.
	(refvariable): Remove, use variable instead.
	(refvariables): Rename as...
	(variables): this.

	2007-06-04  Akim Demaille  <demaille@gostai.com>
	merge -r 1078:1138 https://svn.gostai.com/svn/kernel1/branches/1.0
	Note that, again, I had to apply some of the changes by hand,
	since some files were moved in include/kernel.
	Also, I had to fill properly Matthieu's ChangeLog entries.

	2007-05-31  Matthieu Nottale  <nottale@gostai.com>
	Fix a bug in timeout command
	* src/ucommand.cc: in UCommand_TIMEOUT::execute: setTag on
	intermediate nodes instead of morphed node.

	2007-05-29  Guillaume Deslandes  <deslandes@gostai.com>
	Wrong token definition for derivations
	* ugrammar.y: Fixed definition for first and second derivation.

	2007-05-29  Matthieu Nottale  <nottale@gostai.com>
	Add the 'runningcommands' keyword, fix a bug in tag mechanism.
	* parser/bison/utoken.l: Add the runningcommands keyword.
	* ucommand.cc: Implement runningcommands.
	Add missing unsetTag call in optimised implementations of setTag.

	2007-05-28  Matthieu Nottale  <nottale@gostai.com>
	Optimisation: replace sprintfs with strcpy.
	* src/uobj.cc: Use UString::makeName where possible.
	* src/ustring.hh: Add two static inline functions to form a "a.b"
	name from two UString/char* optimising the implementation.
	* src/uvariablename.cc: Use UString::makeName where possible.

	2007-05-25  Matthieu Nottale  <nottale@gostai.com>
	Fix critical bug in previous patch, optimize more.
	* ueventhandler.cc: use the char* in unForgedName to insert
	into emit2tab in UEventHandler ctor.
	* ueventhandler.hh: Remove unused emit2 attribute.
	* uobj.cc: use eventSymbolDefined in searchEvent intead of iterating.
	* uobj.hh: Change prototype of searchEvent to return a bool,
	nobody uses the return value except for !0 check.

	2007-05-25  Matthieu Nottale  <nottale@gostai.com>
	Optimize kernel::eventSymbolDefined
	* ueventhandler.cc: kernel::eventSymbolDefined now performs a find
	on urbiserver::emit2tab. An entry in this hash is added if not
	present in  UEventHandler ctor.
	Additionaly, the entry in emit2tab is a counter on the number of
	active events with this name
	* ueventhandler.hh: .
	* userver.hh,
	* utypes.hh: Defines a new hash_map type and an instance in
	userver: emit2tab.

	2007-05-23  Matthieu Nottale  <nottale@gostai.com>
	Fix leak in foreach command.
	* src/ucommand.cc,
	* src/ucommand.hh: Add a 'list' field containing the result of the
	evaluation of 'expression', delete it in dtor.

	2007-05-10  Matthieu Nottale  <nottale@gostai.com>
	Fix bug: adaptive modifier alone did not trigger notifyaccess callbacks
	* src/ucommand.cc: Set 'controlled' to true on UCommand_ASSIGN_VALUE
	when adaptive modifier is found.

	2007-05-07  Matthieu Nottale  <nottale@gostai.com>
	Increase max buffer size to 30M
	* src/network/bsdnet/connection.hh: Here.

	2007-05-05  Jean-Christophe Baillie  <baillie@gostai.com>
	fix bug #155 (+report inconsistant behavior)
	* src/ucommand.cc: donnot report the end of morphed commands.
	* src/uconnection.cc: transmit the connection information during
	morphing.
	* src/unamedparameters.cc: copy notifyEnd when copying flags.
	* src/unamedparameters.hh: adapt ctor to contain notifyEnd.

	2007-05-05  Jean-Christophe Baillie  <baillie@gostai.com>
	update test externals.

	2007-05-05  Jean-Christophe Baillie  <baillie@gostai.com>
	update test externals.

	2007-05-05  Jean-Christophe Baillie  <baillie@gostai.com>
	The bug appeared when a plugged UOwned UVar was notified on change and
	access, and a remote UObject var "notifychanging" it. UOwned was
	preventing the UVar::get call, from the autoloop mechanism used to make
	sure UVar that are both change/access notified are constantly updated.
	This security was not necessary because the UVar = operator was
	already preventing UOwner variable against notifychange calls when a
	notifyaccess was triggered.

	Fix bug in notifychange/access interaction with UOwned UVars.
	* src/userver.cc: change UVariable::get usage.
	* src/uvariable.cc: remove double blocking mechanism, change get.
	* src/uvariable.hh: change UVarialbe::get API.

	2007-05-25  Benoit Sigoure  <tsuna@lrde.epita.fr>
	Partial revert of r1111.
	* src/network/bsdnet/network.cc: Revert another part of r1111 that
	breaks on MinGW.

	2007-05-25  Benoit Sigoure  <tsuna@lrde.epita.fr>
	Partial revert of r1111.
	* src/network/bsdnet/network.cc: Don't try to use `pipe' or pthread
	functions on MinGW.

	2007-05-25  mefyl  <mefyl@lrde.epita.fr>
	Update externals.

	2007-05-25  mefyl  <mefyl@lrde.epita.fr>
	Use Unix networking under MinGW
	* src/network/bsdnet/connection.cc,
	* src/network/bsdnet/network.cc: Here.

2007-06-04  Akim Demaille  <demaille@gostai.com>

	* src/parser/bison/bison.mk (ugrammar.stamp): Depend on output-to-html
	too.

2007-05-31  Akim Demaille  <demaille@gostai.com>

	* dev/ast-pretty-printer-gen: Remove useless import.
	* src/parser/bison/ugrammar.y: Do return the value given to
	"return".

2007-05-31  Akim Demaille  <demaille@gostai.com>

	PrintVisitor -> PrettyPrinter
	* dev/ast-print-visitor-gen: Rename as...
	* dev/ast-pretty-printer-gen: ... this.
	Adjust the output accordingly.
	* src/ast/print-visitor.hh, src/ast/print-visitor.cc: Remove.
	* src/ast/Makefile.am: Adjust.
	Factor some bits.
	Use shorter and simpler stamp file names.

2007-05-31  Akim Demaille  <demaille@gostai.com>

	Tags are expressions
	* src/ast/ast.yml (Tag, StringTag, ExpTag): Remove.
	(TagExp): Now the tag is an Exp*.
	* src/ast/print-visitor.hh, src/ast/print-visitor.cc: Regen.
	* src/parser/bison/ugrammar.y: Implement the action for "tag : exp".

2007-05-31  Akim Demaille  <demaille@gostai.com>

	Fix typo
	* src/parser/bison/ugrammar.y: here.

2007-05-31  Akim Demaille  <demaille@gostai.com>

	Let braces be braces, and brackets be brackets
	* src/parser/bison/utoken.l, src/parser/bison/ugrammar.y
	(TOK_LBRACKET, TOK_RBRACKET, TOK_LSBRACKET, TOK_RSBRACKET):
	Rename as...
	(TOK_LBRACE, TOK_RRACE, TOK_LBRACKET, TOK_RBRACKET): these.

2007-05-31  Akim Demaille  <demaille@gostai.com>

	Clarify the scanning of numbers
	* src/parser/bison/utoken.l (RETURN_STR_TOKEN, RETURN_IVAL_TOKEN)
	(RETURN_FVAL_TOKEN): Rename as...
	(RETURN_STR, RETURN_IVAL, RETURN_FVAL): these.
	(RETURN_NUM, RETURN_FLAG, RETURN_FLAG_TIME): Remove.
	Replace the last two with RETURN_IVAL instead of floats as before.
	(RETURN_VALUE): New, used to implement others.
	* src/parser/bison/ugrammar.y: Be sure to receive the flags as
	integers, not floats.  This is not correct yet, but less incorrect.

2007-05-31  Akim Demaille  <demaille@gostai.com>

	* src/ast/ast.yml: Comment changes.

2007-05-29  Akim Demaille  <demaille@gostai.com>

	* src/parser/bison/utoken.l, src/parser/bison/ugrammar.y:
	Use Symbols for identifiers.

2007-05-29  Akim Demaille  <demaille@gostai.com>

	Remove memcheck from the parser
	* src/parser/bison/ugrammar.y (memcheck): Remove definitions and
	uses.
	Declare private functions as static.
	Comment some of them out, now that the compiler sees they're not used.
	(new_bin): Simplify: the UParser is no longer needed.

2007-05-29  Akim Demaille  <demaille@gostai.com>

	parameter -> argument
	* src/parser/bison/ugrammar.y: Use argument when more appropriate
	than parameter.

2007-05-28  mefyl  <mefyl@lrde.epita.fr>

	Add print-visitor generator.
	* dev/ast-print-visitor-gen: New. Printer generator.
	* dev/ast.py: Accept 'printer' attribute.
	* src/ast/Makefile.am: Add files.
	* src/ast/ast.yml: Add a few printer.
	* src/ast/print-visitor.cc,
	* src/ast/print-visitor.hh: New. Generated files.

2007-05-28  Benoit Sigoure  <tsuna@lrde.epita.fr>

	Compilation fixes.
	* NEWS: Add a slot for changes in 2.0.
	* src/ast/all.hh: Remove a useless include of a non-existent file.
	* src/parser/bison/ugrammar.y: Initialize a pointer that may be
	returned uninitialized otherwise.

2007-05-25  Akim Demaille  <demaille@gostai.com>

	Some more arithmetics
	* src/parser/bison/ugrammar.y: Handle unary - and ().

2007-05-25  Akim Demaille  <demaille@gostai.com>

	Cleanup string scanning
	* src/parser/bison/utoken.l: Let the scanner use only std::string.
	(SET_VALP_STR): Remove, inlined in the single remaining use.
	Use std::string, not UString.
	Add underscores to a few places that need them.
	Adjust to the following token name changes.
	* src/parser/bison/ugrammar.y: Put private functions in the
	anonymous namespace.
	(take): Welcome back.
	(TOK_FALSECONST, TOK_TRUECONST): Rename as...
	(TOK_FALSE, TOK_TRUE): ... these.
	(ustring): New.
	(STRING, IDENTIFIER): Now string.
	* src/ast/ast.yml: Layout changes.

2007-05-25  Akim Demaille  <demaille@gostai.com>

	Remove STRUCT hacks
	* src/parser/bison/utoken.l, src/parser/bison/ugrammar.y
	(STRUCT, TAG, %union structure, array): Remove.
	(purevariable): Handle "." and "[...]".

2007-05-25  Akim Demaille  <demaille@gostai.com>

	Use libport::Symbol for locations
	* src/parser/bison/ugrammar.y: Use Symbol for file names.
	* src/ast/loc.hh: Include libport/symbol.hh.
	* src/parser/uparser.hh, src/parser/uparser.cc: Remove the
	handling of the allocated file names, now handled by Symbol
	(not quite true).

2007-05-25  Akim Demaille  <demaille@gostai.com>

	Minor parser simplifications
	* src/parser/bison/utoken.l, src/parser/bison/ugrammar.y: Rename
	the tokens for the logical and and or.
	Use newer Bison features.

2007-05-25  Akim Demaille  <demaille@gostai.com>

	Clean up a bit the scanning of numbers
	* src/parser/bison/utoken.l, src/parser/bison/ugrammar.y:
	Now scan integers and floats differently.
	Store the semantic values using regular floats or integers.
	A lot of commented code remains to update, but anyway type checking
	will tell.
	(take): Remove, now useless.

2007-05-25  Akim Demaille  <demaille@gostai.com>

	Tidy ugrammar.y
	* src/parser/bison/ugrammar.y: Put flavor stuff together.
	Tidy a bit.

2007-05-25  Akim Demaille  <demaille@gostai.com>

	Token/type more alike
	* src/parser/bison/utoken.l, src/parser/bison/ugrammar.y: Let
	token names be token names instead of operation names, and
	use token names closer to those introduced in the previous
	changeset.

2007-05-25  Akim Demaille  <demaille@gostai.com>

	More OpExp
	* src/ast/ast.yml (OpExp::type): Fix some docs.
	Let them all be 3 characters long, except logical and, land,
	which I don't see how I could name in 3 letters (lnd? lan? lad?).
	* src/parser/bison/ugrammar.y: Use those that were declared.

2007-05-25  Akim Demaille  <demaille@gostai.com>

	Support arithmetics with OpExp
	* src/ast/ast.yml (BinaryExp): Use lhs and rhs, not left and right.
	(OpExp): Derive from BinaryExp.
	Rename "Oper" occurrences as "type".
	* dev/ast_params.py: Adjust.
	* src/parser/bison/ugrammar.y (new_exp): Adjust to using ast::OpExp.

2007-05-22  Akim Demaille  <akim.demaille@free.fr>

	Bind "return"
	* src/ast/all.hh: Include all the *-exp.hh headers.
	* src/parser/bison/ugrammar.y (expr.opt): New.
	Activate the code for "return".
	NUM -> "number".

2007-05-22  Akim Demaille  <akim.demaille@free.fr>

	Activate some rules
	* src/parser/bison/ugrammar.y: <command> -> <expr>.
	instruction -> statement.
	Use new_bin.

2007-05-22  Akim Demaille  <akim.demaille@free.fr>

	Make it linkable
	* src/Makefile.am: Link libast into libkernel.

2007-05-22  Akim Demaille  <akim.demaille@free.fr>

	Make it compilable
	* src/ast/all.hh: Include all the headers we need.
	* src/parser/bison/ugrammar.y: Disable all the actions.
	For the time being, this is still the old grammar, nothing
	was changed.
	Many simplifications are needed.

2007-05-11  Akim Demaille  <demaille@gostai.com>

	Take into account the comment on the ast
	* src/ast/ast.yml (Cmd): Remove, use only Exp.
	Adjust all *Cmd into *Exp.
	(BinaryExp): New, to factor AndExp, SemicolonExp etc.
	* dev/ast_params.py: Adjust.

2007-05-11  Akim Demaille  <demaille@gostai.com>

	Make it compile
	* src/ast/ast.yml (MapExp, ClassDec): Comment out so that it
	compiles.

2007-05-11  Akim Demaille  <demaille@gostai.com>

	Make ast generation more robust, and more alike tc's
	* dev/ast_params.py (deep_clear): New.
	* dev/ast-clone-visitor-gen, dev/ast-graph-gen, dev/ast-nodes-gen,
	* dev/ast-readme-gen, dev/ast-visitor-gen, dev/ast.py, dev/tools.py:
	Use it.
	Update with current version in tc.
	Make it (slightly) more generic.
	(node.final): Rename as...
	(node.concrete): this.

2007-05-11  Akim Demaille  <demaille@gostai.com>

	ast.yml fixes
	* dev/ast_params.py: New.
	Extend it.
	Was extracted from...
	* dev/ast-nodes-gen: here.
	Use it.
	* dev/ast.py: Ditto.
	* src/ast/Makefile.am (ast_gen_deps): Complete.

2007-05-11  Akim Demaille  <demaille@gostai.com>

	Fix typoes
	* src/ast/ast.yml: Don't use the "or" and "and" keywords.
	Remove meaningless comments.

2007-05-11  Akim Demaille  <demaille@gostai.com>

	Various updates and fixes
	* src/kernel.mk: Grow stronger.
	* src/Makefile.am: Use it.
	* configure.ac: .
	* dev/ast-clone-visitor-gen, dev/ast-fwd-gen, dev/ast-nodes-gen,
	* dev/ast-visitor-gen, dev/ast.py, src/ast/ast.yml: Adjust to the
	fact that most of our tools are in libport, not in misc/ or symbol/.

2007-05-11  Akim Demaille  <demaille@gostai.com>

	Update
	* bootstrap: Strengthen.
	* src/Makefile.am, configure.ac: Go into src/ast.
	Most of the following tools are imported from kernel2, but
	have been updated.
	* dev/ast-clone-visitor-gen: New.
	* dev/ast-fwd-gen: New.
	* dev/ast-graph-gen: New.
	* dev/ast-nodes-gen: New.
	* dev/ast-nodes-mk-gen: New.
	* dev/ast-readme-gen: New.
	* dev/ast-visitor-gen: New.
	* dev/ast.py: New.
	* dev/count-fixme-lines: New.
	* dev/cut-bison-actions: New.
	* dev/diff-r: New.
	* dev/tools.py: New.

	* src/ast/Makefile.am: New.
	* src/ast/all.hh: New.
	* src/ast/ast.yml: New.
	* src/ast/default-visitor.hh: New.
	* src/ast/default-visitor.hxx: New.
	* src/ast/loc.hh: New.
	* src/ast/visitor.hxx: New.
	* src/ast: New.
	* src/kernel.mk: New.

2007-05-03  Akim Demaille  <demaille@gostai.com>

	Finish the merge -r 1038:1078
	I guess I ran "svn revert src/ughostconnection.cc" when I meant
	"svn resolved", since Emacs had the right contents, but the
	file on the disk did not have the modifications.
	make check passes again.
	* src/ughostconnection.cc: Apply the changes, but getting rid of
	the useless casts.
	* src/userver.cc: Don't activate debug traces.

2007-05-03  Akim Demaille  <demaille@gostai.com>

	Minor changes to improve the similarity with the code before
	the breaking merge.  Of course, it still does not make check.
	* src/ucommand.cc, src/uobject.cc: Formatting changes.
	Use libport::mhas.
	Scope shortening.

2007-05-03  Akim Demaille  <demaille@gostai.com>

	svn merge -r 1038:1078 https://svn.gostai.com/svn/kernel1/branches/1.0
	NB: Since there are some files which have moved (the exported
	headers are now in include/kernel, not in src/), svn merge failed
	to do it right:
	svn merge -r 1038:1078 https://svn.gostai.com/svn/kernel1/branches/1.0
	C    src/ucommand.cc
	Skipped missing target: 'src/uconnection.hh'
	U    src/parser/bison/utoken.l
	U    src/parser/bison/ugrammar.y
	U    src/ucommand.hh
	C    src/uqueue.hh
	C    src/uobject.cc
	U    src/unamedparameters.cc
	C    src/uvalue.cc
	C    src/uvariable.cc
	U    src/uvar.cc
	C    src/userver.cc
	U    src/unamedparameters.hh
	C    src/uconnection.cc
	Skipped missing target: 'src/uvariable.hh'
	C    src/ughostconnection.cc
	Skipped missing target: 'ChangeLog'
	C    tests-local.mk
	U    NEWS
	 U   .

	So I had to complete the command with the following:
	svn diff -r 1038:1078 https://svn.gostai.com/svn/kernel1/branches/1.0/src/uconnection.hh | patch include/kernel/uconnection.hh
	svn diff -r 1038:1078 https://svn.gostai.com/svn/kernel1/branches/1.0/src/uvariable.hh | patch include/kernel/uvariable.hh

	Note that besides, several other adjustments were needed.  I tried
	not to break anything, but it just... hangs.  I have no idea why.
	So this checkin is fucked up.  And I'm fed up.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	add proper support for adaptive queues (following ticket #92)
	* uconnection.hh: fix accessors, they do something now.
	* uqueue.hh: add accessor for adaptive_.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	update NEWS.
	* NEWS: add note about UObject::send.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	update externals of uobject.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	The problem here was that plugged UObjects were using the
	ghostconnection of URBI.INI, so anything that was initialized via
	urbi::send in the constructor was in fact executed *after* URBI.INI
	code. It was impossible to use the result of a new in URBI.INI if this
	new was introducing some dynamically created code, typically with
	walk.

	Now, every UObject has its own connection (in fact it's activated only
	if you use UObject::send). UObject::send is the method to use if you
	want to send code to URBI, from within a UObject. It works fine in
	plugged and remote mode.

	fix bug #128: now plugged UObjects use a dedicated ghostconnection.
	* src/uconnection.cc: add a comment.
	* src/ughostconnection.cc: add maintenance of connectionList, done
	automatically by UGhostConnection, there was no reason not to do so.
	* src/uobject.cc: implement plugged version of UObject::send,
	initialize gc.
	* src/userver.cc: remove unecessary connectionList registration for
	the main UGhostConnection.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	This prepare the next step which will be to use ghostconnections as
	support for UObject::send method. These "hosting connections" (should
	be named "contexts" in k2 jargon) can be closed and so the closing
	mechanism must be enforced properly.

	add a conservative closing=true for a closing GhostConnection.
	* ughostconnection.cc: add closing=true in the closeConnection method.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	Reformating.
	* src/ughostconnection.cc: done.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	Minor reformat
	* src/ughostconnection.cc: done.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	Deleting a variable on which a UVar was set could result in
	catastrophic server crash, because some plugged UObject will assign
	something to this UVar, using the pointer to the UVariable in cache,
	and the UVariable is not valid anymore.

	This patch add a mechanism to set a UVar in "zombie" mode when it's
	corresponding UVariable is deleted. We should do more (error
	reporting, etc) but this is at least a first step and the server does
	not crash anymore.

	There is also now a ref counter in the UVar that prevent the attached
	UVariable to be deliberately deleted by the user. Now an error
	message is displayed.

	fix bug found in ticket #2.
	* src/ucommand.cc: refuse to delete a variable with UVar on it.
	* src/uvar.cc: handle proper ref counting, and zombie mode.
	* src/uvariable.cc: handle ref counting and zombie mode.
	* src/uvariable.hh: add useCpt counter.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	Improve reset messages.
	* userver.cc: make the series of messages more useful.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	Fix ticket #85
	* src/ucommand.cc: remove dead code.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	make undefall deprecated.
	* src/ucommand.cc: undefall is now deprecated, use reset instead.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	Fix the bug on reset (ticket #21)
	* src/uobject.cc: UHubObjects dtor must release their timers.
	* src/userver.cc: add proper destruction/recreation of hubs.

	2007-05-01  Jean-Christophe Baillie  <baillie@gostai.com>
	Minor reformating.
	* src/userver.cc: done.

	2007-04-30  Matthieu Nottale  <nottale@gostai.com>
	Fix a segfault when reseting.
	* src/userver.cc: Do not clear tagtab when reseting, its content
	is refcounted.

	2007-04-22  Benoit Sigoure  <tsuna@lrde.epita.fr>
	Minor code cleanup.
	* src/ucommand.cc: Formatting changes.

	2007-04-22  Benoit Sigoure  <tsuna@lrde.epita.fr>
	Remove a duplicate include.
	* src/ucommand.cc: Here (sstream).

	2007-04-22  Benoit Sigoure  <tsuna@lrde.epita.fr>
	Remove useless include.
	* src/uvalue.cc: Don't include iomanip.

	2007-04-20  Jean-Christophe Baillie  <baillie@gostai.com>
	That was a request after last years "coupe de robotique" experience.
	I'm pretty sure the syntax will evolve in k2, but we will keep this
	backward compatible and it will be usable right now.

	add a 'taglist' keyword to display the list of currently running tags.
	* NEWS: signal the feature.
	* src/parser/bison/utoken.l: add the keyword.
	* src/ucommand.cc: add the code that does the job.

	2007-04-20  Jean-Christophe Baillie  <baillie@gostai.com>
	remove too restricting ASSERT, fix ticket #136.
	* src/ucommand.cc: change ASSERT in if, for the case when the
	expression evaluation fail (it leads to a legitimate unasserted case).

	2007-04-20  Jean-Christophe Baillie  <baillie@gostai.com>
	revert change from previous commit: std::fixed should not be used.
	* src/uvalue.cc: std::fixed does not behave as it should.

	2007-04-20  Jean-Christophe Baillie  <baillie@gostai.com>
	fix ticket #24
	* src/uvalue.cc: add std::fixed formater.

	2007-04-20  Jean-Christophe Baillie  <baillie@gostai.com>
	This fix partialy solve the problem described in ticket #150.
	Limitations are:

	- Methods that want to benefit from the inhibition mechanism must be
	declared (with UBindFunction) in init, not in the UObject C++
	constructor. Otherwise, since the URBI object hierarchy is not yet
	updated	when the C++ ctor is executed, the inhibition mechanism fails
	to detect the previously defined version of the bound function.

	- The inhibition is performed when 'new' is executed, never after. So
	if you redefine b.refresh after you have newed c, it will fail to
	inhibate the binding. You must keep the order: b = new uBot;redefine
	b.refresh;c = new b;

	This is fragile of course and it's a dirty hack. However, fixing it
	properly would need the introduction of a vtable cache at the object
	level, which is almost impossible to "hack" with k1, knowing
	that k1 does not really know objects... We will fix that in k2 with a
	clean underlying structure.

	partialy fix bug #150 (the feature is usable, but fragile)
	* src/ucommand.cc: add inhibition code when a remote binded function
	is already user-redefined somewhere higher in the object hierarchy.
	* src/uobject.cc: same thing but for plugged uobjects.

	2007-04-19  Jean-Christophe Baillie  <baillie@gostai.com>
	fix bug #137 on invalid prefix resolution.
	* src/uconnection.cc: do not simplify scoping nodes.

	2007-04-19  Jean-Christophe Baillie  <baillie@gostai.com>
	minor reformat.
	* src/uconnection.cc: reduce to 80 col.

	2007-04-17  Matthieu Nottale  <nottale@gostai.com>
	Fix a segfault when 'stop notag'.
	* src/ucommand.cc: Use dummy subtags instead of dummy null
	commands to boost notag and __system__'s TagInfo reference
	counting: fixes a segfault when calling 'stop notag'.

	2007-04-15  Jean-Christophe Baillie  <baillie@gostai.com>
	fix ticket 151, problem with +end flags not triggering properly
	* src/parser/bison/ugrammar.y: add notifyEnd optimization in UCommand
	and the groupOfCommands flag to mark {...} types of commands.
	* src/ucommand.cc: add handling of +end in the dtor of UCommand.
	* src/ucommand.hh: add necessary attributes for notifyEnd and
	groupOfCommands.
	* src/uconnection.cc: remove the handling of +end from the tree
	machinery, it's now handled by UCommand dtor.
	* src/unamedparameters.cc: add an optimization to avoid having to scan
	the whole list of flags to know if +end is there.
	* src/unamedparameters.hh: add .

	2007-04-03  Matthieu Nottale  <nottale@gostai.com>
	Optimise by caching TagInfo structures for 'notag' and '__system__' tag.
	* src/ucommand.cc,
	* src/ucommand.hh: Add two static TagInfo* in UCommand, and a
	static method to initialise them. Use them instead of the tag
	strings "__system__" and "notag".
	* src/userver.cc: Call UCommand::initializeTagInfos in
	UServer::initialization. Replace an assert by code handling the
	condition as it can happen without being a problem.

	2007-04-03  Akim Demaille  <akim.demaille@free.fr>
	From hanging to segv
	* src/ucommand.cc (UCommand_OPERATOR::execute_): Iterate when
	running "undefall".

	2007-04-02  Akim Demaille  <demaille@gostai.com>
	tests-local.mk
	* tests-local.mk: New.

2007-04-02  Akim Demaille  <akim.demaille@free.fr>

	undefall
	* src/ucommand.cc (UCommand_OPERATOR::execute_): When handling
	undefall, iterate instead of staying on begin().
	Currently, it SEGVs (instead of hanging, that's an improvement :).
	* src/uexpression.cc: Formatting changes.

2007-04-02  Akim Demaille  <demaille@gostai.com>

	* src/uexpression.cc: Scope reduction.

2007-04-02  Akim Demaille  <demaille@gostai.com>

	* src/uvariablename.cc (resolve_alias): Introduce a binary version.
	Use to factor some code.

2007-04-02  Akim Demaille  <demaille@gostai.com>

	A for loop
	* src/ucommand.cc (UCommand_ASSIGN_VALUE::execute_): Use a for
	loop instead of a while loop.
	Rename the "target" variable as "rhs" for readability.

2007-04-02  Akim Demaille  <demaille@gostai.com>

	Factoring
	* src/ucommand.cc (has_sinusoidal_modifier): New.
	Use it.
	Reduce a couple of variable scopes.
	* tests-local.mk: New.

2007-04-02  Akim Demaille  <demaille@gostai.com>

	if < switch
	* src/ucommand.cc (UCommand_ASSIGN_VALUE::execute_): Use switch
	to switch, not if.

2007-04-02  Akim Demaille  <demaille@gostai.com>

	Use mhas
	* src/ucommand.cc (UCommand_ASSIGN_VALUE::execute_): here.

2007-04-02  Akim Demaille  <demaille@gostai.com>

	svn merge -r 1011:1038 https://svn.gostai.com/svn/kernel1/branches/1.0
	2007-04-01  Benoit Sigoure  <tsuna@lrde.epita.fr>
	Forevermore solve bug #146 (compilation on ARM/memory alignment).
	* src/network/bsdnet/network.cc: Use memcpy to preserve the byte
	order.

	2007-03-30  SIGOURE Benoit  <tsuna@lrde.epita.fr>
	Fix bug #146 (compilation on ARM): memory alignment.
	* src/network/bsdnet/network.cc (TCPServerPipe::init): Fix dangerous
	usage of the struct hostent returned by gethostbyname.  The code
	expected that sizeof (int) == 4 and wasn't friendly with processors
	subject to alignment issues (ARM, SPARC, among others).
	* src/uvalue.cc (UValue::operator urbi::USound): Declare the local
	`struct wavheader' as __attribute__ __packed__.  A raw buffer of bytes
	is casted in a pointer to struct wavheader, this requires that the
	compiler does not align the members of the structure on word
	boundaries.

	2007-03-29  Akim Demaille  <demaille@gostai.com>
	Fix int/size_t usage
	It's quite to PITA to still be working on the branch.
	Much of this was already done in the trunk.  We're wasting our
	time on this crap of branch 1.0.
	* src/memorymanager/blockmemorymanager.hh,
	* src/memorymanager/memorymanager.cc,
	* src/memorymanager/memorymanager.hh:
	Use appropriate types: size_t and ptrdiff_t, not int.
	This fixes warnings on VC++.

	2007-03-29  Akim Demaille  <demaille@gostai.com>
	Determinize long-identifiers.chk
	It passes on MingW for weird reasons documented in the code.
	* src/uvariablename.cc (buildFullname): Beware of snprintf.

	2007-03-26  POTHIER Benoit  <pothier@gostai.com>
	Revert the 3 previous changes, waiting for a working fix.
	* src/network/bsdnet/network.cc,
	* src/uvalue.cc: Here.

	2007-03-26  SIGOURE Benoit  <tsuna@lrde.epita.fr>
	Fix portability on Win32.
	* src/network/bsdnet/network.cc: Don't use in_addr_t, use uint32_t
	instead.

	2007-03-26  SIGOURE Benoit  <tsuna@lrde.epita.fr>
	Fix a bug introduced in r1014.
	* src/network/bsdnet/network.cc (TCPServerPipe::init): Properly
	transform the IP address returned by gethostbyname into a in_addr_t.

	2007-03-24  SIGOURE Benoit  <tsuna@lrde.epita.fr>
	Fix bug #146 (compilation on ARM): memory alignment and bad code.
	* src/network/bsdnet/network.cc (TCPServerPipe::init): Fix wrong usage
	of the struct hostent returned by gethostbyname: the code was
	converting a char* representing an IP address (eg: "127.0.0.1") in
	int* and then dereferencing this int in hope to get the numerical IP
	address. oO
	* src/uvalue.cc (UValue::operator urbi::USound): Declare the local
	`struct wavheader' as __attribute__ __packed__.  A raw buffer of bytes
	is casted in a pointer to struct wavheader, this requires that the
	compiler does not align the members of the structure on word
	boundaries.

2007-03-23  Akim Demaille  <demaille@gostai.com>

	svn merge -r 1007:1011 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-03-23  Akim Demaille  <demaille@gostai.com>
	Fix #114 and #141
	* src/ucommand.hh, src/ucommand.cc (UCommand_NOOP::kind)
	(UCommand_NOOP::kind_): New.
	Adjust dependencies.
	* src/parser/bison/ugrammar.y (spontaneous, warn, warn_spontaneous):
	New.
	Use the latter to warn about suspicious empty instructions instead
	of making them hard error.
	No longer create an instruction equal to 0, rather make it a
	spontaneous noop.

2007-03-23  Akim Demaille  <demaille@gostai.com>

	svn merge -r 996:1007 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-03-23  Akim Demaille  <demaille@gostai.com>
	Fix #144
	* src/parser/uparser.cc: Debug trace changes.
	* src/ucommandqueue.hh, src/ucommandqueue.cc (bracketlevel_)
	(sbracketlevel_, parenlevel_): Remove.  Replaced by...
	(closers_): this new member.
	Let the members be private, not protected.
	(popCommand): When a closing mismatch happens, return the sentence
	to the parser which will report the error.

	* src/userver.cc: Reoder two instructions.

	2007-03-23  Akim Demaille  <demaille@gostai.com>
	More debugging traces
	* src/parser/uparser.cc: Insert debugging traces.
	* src/ucommand.cc: Likewise.
	* src/uexpression.cc: Ditto.
	* src/userver.cc (file_readable): New.
	(find_file): New.
	Report an error when the file is not found.
	(tab): Use a bigger buffer, as I triggered the assertion for
	its previous size...

	2007-03-21  Akim Demaille  <akim.demaille@free.fr>
	* Makefile.am (CLEANFILES): Remove what's handled by init.mk.

	2007-03-21  Akim Demaille  <akim.demaille@free.fr>
	Catch up with the trunk
	No longer make uobject an external of src, let src/uobject be
	an external of ".".
	No longer subscribe to sdk, useless.
	* Makefile.am: Adjust.
	(check-html): Import from the trunk.

	2007-03-21  Akim Demaille  <akim.demaille@free.fr>
	Update externals.
	* configure.ac: Use URBI_TESTS.

2007-03-23  Akim Demaille  <demaille@gostai.com>

	Fix tests invocation
	* configure.ac (URBI_TESTS): Call it.

2007-03-13  Akim Demaille  <akim.demaille@free.fr>

	* src/uobject.cc (algorithm): Include it.

2007-03-13  Akim Demaille  <akim.demaille@free.fr>

	svn merge -r 970:996 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-03-12  POTHIER Benoit  <pothier@gostai.com>
	Remove space in the banner.
	* src/ubanner.cc: Here.

	2007-03-12  POTHIER Benoit  <pothier@gostai.com>
	Update banner copyright date.
	* src/ubanner.cc: Here.

2007-03-13  Akim Demaille  <akim.demaille@free.fr>

	Change the handling of externals (experimental)
	No longer subscribe to uobject in ./src, subscribe to src/uobject
	in ".".  Several issues seems easier to deal with this way.  If
	it works well, I'll lift the other externals.
	* Makefile.am: src/uobject is now a local external.

2007-03-08  Akim Demaille  <akim.demaille@free.fr>

	This seems to totally confuse cccl, which loses the arguments
	and even produces /I-I.
	* src/Makefile.am: No space bw -I and its arg.

2007-03-08  Akim Demaille  <akim.demaille@free.fr>

	Fix member function declaration
	* include/kernel/uconnection.hh: Remove spurious qualifier.

2007-03-08  Akim Demaille  <akim.demaille@free.fr>

	Install uasyncregister.hh, uvariable.hh and uvalue.hh
	* src/uasyncregister.hh, src/uvariable.hh, src/uvalue.hh:
	Move to...
	* include/kernel/uasyncregister.hh, include/kernel/uvariable.hh,
	* include/kernel/uvalue.hh: here.

	* Makefile.am, src/Makefile.am, src/uasynccommand.cc,
	* src/uasyncregister.cc, src/uatcandidate.cc, src/ubinder.cc,
	* src/ucallid.cc, src/ucommand.cc, src/uconnection.cc,
	* src/ueventcompound.cc, src/ueventhandler.cc, src/ueventhandler.hh,
	* src/ueventinstance.cc, src/ueventmatch.cc, src/uexpression.cc,
	* src/ugroup.cc, src/uobj.cc, src/uobject.cc, src/userver.cc,
	* src/uvalue.cc, src/uvar.cc, src/uvariable.cc, src/uvariablename.cc:
	Adjust.

2007-03-08  Akim Demaille  <demaille@gostai.com>

	Hide UGhostConnection
	So that cores only need uconnection.hh, but not ughostconnection.hh.
	* include/kernel/userver.hh (getGhostConnection): Return a
	UConnection instead of a UGhostConnection, so that we don't need
	the type UGhostConnection (and its header).
	(ghost): Rename as...
	(ghost_): this.
	* src/console.cc, src/uobject.cc, src/userver.cc: Adjust.

2007-03-08  Akim Demaille  <demaille@gostai.com>

	cores need uconnection.hh
	* src/ucomplaints.hh, src/uconnection.hh: Move to...
	* include/kernel/ucomplaints.hh, include/kernel/uconnection.hh: here.

	* Makefile.am, src/Makefile.am,
	* src/network/bsdnet/connection.hh, src/parser/bison/ugrammar.y,
	* src/uasynccommand.cc, src/ucommand.cc, src/ucomplaints.cc,
	* src/uconnection.cc, src/uexpression.cc, src/ughostconnection.hh,
	* src/uobj.cc, src/uobject.cc, src/userver.cc, src/usystem.cc,
	* src/uvalue.cc, src/uvariable.cc, src/uvariablename.cc:
	Adjust.
	And remove the #define private protected trick...

2007-03-08  Akim Demaille  <demaille@gostai.com>

	Kill a few static consts
	* src/uconnection.hh: here.
	* src/ughostconnection.hh: And here.
	Move them...
	* src/ughostconnection.cc: here.

2007-03-08  Akim Demaille  <demaille@gostai.com>

	Move installed headers in include/kernel
	* src/fwd.hh, src/mem-track.hh,
	* src/memorymanager/blockmemorymanager.hh,
	* src/memorymanager/memorymanager.hh,
	* src/tag-info.hh, src/userver.hh, src/ustring.hh,
	* src/utypes.hh:
	Move to...
	* include/kernel/blockmemorymanager.hh,
	* include/kernel/fwd.hh,
	* include/kernel/mem-track.hh,
	* include/kernel/memorymanager.hh,
	* include/kernel/tag-info.hh,
	* include/kernel/userver.hh,
	* include/kernel/ustring.hh,
	* include/kernel/utypes.hh:
	Here.

	* Makefile.am,
	* src/Makefile.am,
	* src/console.cc,
	* src/memorymanager/memorymanager.cc,
	* src/network/bsdnet/connection.cc,
	* src/network/bsdnet/connection.hh,
	* src/network/bsdnet/network.cc,
	* src/parser/bison/ugrammar.y,
	* src/parser/uparser.hh,
	* src/tag-info.cc,
	* src/uasynccommand.cc,
	* src/uasynccommand.hh,
	* src/uasyncregister.hh,
	* src/uatcandidate.hh,
	* src/ubinary.cc,
	* src/ubinary.hh,
	* src/ubinder.cc,
	* src/ubinder.hh,
	* src/ucallid.cc,
	* src/ucallid.hh,
	* src/ucommand.cc,
	* src/ucommand.hh,
	* src/ucommandqueue.cc,
	* src/ucommandqueue.hh,
	* src/uconnection.cc,
	* src/uconnection.hh,
	* src/ueventcompound.cc,
	* src/ueventcompound.hh,
	* src/ueventhandler.cc,
	* src/ueventhandler.hh,
	* src/ueventinstance.cc,
	* src/ueventinstance.hh,
	* src/ueventmatch.cc,
	* src/ueventmatch.hh,
	* src/uexpression.cc,
	* src/uexpression.hh,
	* src/ufunction.cc,
	* src/ufunction.hh,
	* src/ughostconnection.cc,
	* src/ughostconnection.hh,
	* src/ugroup.cc,
	* src/ugroup.hh,
	* src/unamedparameters.cc,
	* src/unamedparameters.hh,
	* src/uobj.cc,
	* src/uobj.hh,
	* src/uobject.cc,
	* src/uproperty.cc,
	* src/uproperty.hh,
	* src/uqueue.cc,
	* src/uqueue.hh,
	* src/userver.cc,
	* src/ustring.cc,
	* src/usystem.cc,
	* src/uvalue.cc,
	* src/uvalue.hh,
	* src/uvar.cc,
	* src/uvariable.cc,
	* src/uvariable.hh,
	* src/uvariablelist.cc,
	* src/uvariablelist.hh,
	* src/uvariablename.cc,
	* src/uvariablename.hh:
	Adjust.
	And beware of some useless inclusions.

2007-03-08  Akim Demaille  <demaille@gostai.com>

	svn merge -r 970:979 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-03-06  Jean-Christophe Baillie  <baillie@gostai.com>

	This flag enforces the business decision described here:
	https://core.gostai.com/projects/business/wiki/ProductOfferStrategy

	It allows to build an URBI Engine that will reject any remote UObject
	'external' request, effectively disabling UNotifyChange,
	UBindFunction, etc, which makes this remote UObject useless.

	A simple -DREMOTE_UOBJECT_DISABLED flag in configure will build this
	crippled version.

	add the REMOTE_UOBJECT_DISABLED flag for the 'free' version
	* src/ucommand.cc: exit from UCommand_BINDER if the
	REMOTE_UOBJECT_DISABLED flag is on.

2007-03-01  Akim Demaille  <demaille@gostai.com>

	Use UString for UCallid
	* src/ucallid.hh, src/ucallid.cc: Append _ to private members.
	* src/ucommand.cc, src/uconnection.cc: Adjust.
	* src/uvariablename.hh, src/uvariablename.cc: Ditto.
	(updateName): Add more flavors.

2007-03-01  Akim Demaille  <demaille@gostai.com>

	* src/uvariablename.cc (resolve_aliases): Add missing const.

2007-03-01  Akim Demaille  <demaille@gostai.com>

	svn merge -r 941:970 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-02-22  Matthieu Nottale  <nottale@gostai.com>
	Add a parameter to createTCPServer to specify address to bind to
	* src/network/bsdnet/network.cc: Here, propagate in  TCPServerPipe::init.
	* src/network/bsdnet/network.hh: Also here.

	2007-02-22  Akim Demaille  <akim.demaille@free.fr>
	Fix #133
	We focused on the fact that the current code is boggus and
	missed the fact that my proposal was addressing one issue, but
	introducing another one.  We were trading one bug for another,
	the latter having a much bigger impact.

	I suggested to replace

	# define ADDMEM(x)   {usedMemory += ((int)(x*1.15));}
	# define FREEMEM(x)  {usedMemory -= ((int)(x*1.15));}

	which duplicates the computation and fails to parens x
	properly (and there are indeed places where it mattered since
	x was something like a + b), by

	# define ADDMEM(X)   usedMemory += (int) ((X) * 1.15)
	# define FREEMEM(X)  ADDMEM (-(X))

	Unfortunately that fails when X is unsigned (which is the case
	when ADDOBJ and FREEOBJ pass it a sizeof result): FREEMEM
	then negates a size_t, which results in a huge positive size_t.
	But this huge size_t is immediately added to usedMemory, so
	it should nevertheless yield the correct result!

	Enter 1.15 that screws it all, as the following program
	demonstrates

	#include <iostream>
	#include <string>

	#define ECHO(C) std::cout << #C " = " << C << std::endl;

	int main ()
	{
	  char tab[18];
	  ECHO (sizeof tab);
	  ECHO (- (int) (sizeof tab));

	  ECHO ((- sizeof tab));
	  ECHO (+ (- (int) (sizeof tab)));

	  ECHO (1.15 * sizeof tab);
	  ECHO (- (int) (1.15 * sizeof tab));

	  ECHO (1.15 * (- sizeof tab));
	  ECHO (+ (int) (1.15 * (- sizeof tab)));
	}

	which results in:

	sizeof tab = 18
	- (int) (sizeof tab) = -18
	(- sizeof tab) = 4294967278      <== overflow
	+ (- (int) (sizeof tab)) = -18   <== but ok
	1.15 * sizeof tab = 20.7
	- (int) (1.15 * sizeof tab) = -20
	1.15 * (- sizeof tab) = 4.93921e+09     <=== overflow
	+ (int) (1.15 * (- sizeof tab)) = 2147483647  <=== deadly

	* src/utypes.hh (FREEMEM): Avoid negating a posibly unsigned value.

2007-03-01  Akim Demaille  <demaille@gostai.com>

	Less const char*
	* src/uvariablename.cc (resolve_aliases): Work string -> string.

2007-03-01  Akim Demaille  <demaille@gostai.com>

	* configure.ac: Use URBI_PACKAGE_KIND.

2007-03-01  Akim Demaille  <demaille@gostai.com>

	Update externals
	* Makefile.am: sdk no longer exists.

2007-03-01  Akim Demaille  <demaille@gostai.com>

	Use more std::string
	Valgrind finds fishy things around here.  Let's clean and then
	track the problems.
	* src/ustring.hh, src/ustring.cc (prefix, suffix): Work only on
	std::string.
	Add convenient UString alternatives.
	* src/uvariablename.cc: Adjust.

2007-03-01  Akim Demaille  <demaille@gostai.com>

	Don't define TRUE & FALSE
	There are conflicts on Windows.
	* src/parser/bison/ugrammar.y: Inline the uses of TRUE and FALSE.

2007-03-01  Akim Demaille  <akim.demaille@free.fr>

	tagequal
	* src/uvariablename.cc (prefix, suffix): Move to...
	* src/ustring.hh, src/ustring.cc: here.
	(tagequal): Remove, unused.

2007-02-27  Jean-Christophe Baillie  <baillie@gostai.com>

	The .automerge file has been added, with proper initialization.
	Automerge is now usable, it will keep conflicts on ChangeLog, to be
	resolved by hand until some smart trick is found.
	Please, use automerge now to handle merging in a nice and automatic
	way.
	NB: the automerge script is located in common/automerge

	add automerge support.
	* .automerge: New.

2007-02-24  Akim Demaille  <akim.demaille@free.fr>

	Let UString use std::string
	* src/ustring.hh, src/ustring.cc (len_): Remove.
	Adjust ctors to refuse construction from 0.
	(len_): Now a std::string.
	Adjust all the code
	* src/uexpression.cc, src/uvariablename.cc: Adjust.

2007-02-24  Akim Demaille  <akim.demaille@free.fr>

	mem-track.hh
	This is needed because ustring.hh needs to include utypes.hh,
	and conversely.  Of course, it does not work.  And huge *.hh
	files are bad.
	* src/mem-track.hh: New.
	Extracted from...
	* src/utypes.hh: here.
	* src/Makefile.am: Adjust.

2007-02-24  Akim Demaille  <akim.demaille@free.fr>

	Fix uninitialized variable warning
	* src/userver.hh, src/userver.cc (memory): here.
	While we're at it, give this function a proper prototype,
	and useful variable names.

2007-02-24  Akim Demaille  <akim.demaille@free.fr>

	Scope reduction
	* src/userver.cc (memory): Here.

2007-02-24  Akim Demaille  <akim.demaille@free.fr>

	Morph slowly UString into std::string
	* src/ustring.hh, src/ustring.cc (str, len): Rename as...
	(c_str, size): these.
	(setLen): Remove, unused, and frankly, should never have existed.

	* src/parser/bison/ugrammar.y,
	* src/parser/bison/utoken.l,
	* src/parser/uparser.cc,
	* src/ucallid.cc,
	* src/ucallid.hh,
	* src/ucommand.cc,
	* src/uconnection.cc,
	* src/ueventhandler.cc,
	* src/ueventinstance.cc,
	* src/ueventmatch.cc,
	* src/uexpression.cc,
	* src/ufunction.cc,
	* src/ugroup.cc,
	* src/unamedparameters.cc,
	* src/uobj.cc,
	* src/uobject.cc,
	* src/userver.cc,
	* src/uvalue.cc,
	* src/uvar.cc,
	* src/uvariable.cc,
	* src/uvariablename.cc:
	Adjust.
	Also, name ostringstreams as o.

2007-02-22  Akim Demaille  <demaille@gostai.com>

	svn merge -r 860:941 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-02-21  Akim Demaille  <demaille@gostai.com>
	Do not use -relax-branch
	This option was used to enable long branches in the parser
	generated code.  This was needed because the rules used to use
	long macros which resulted in a huge switch statement.  Passing
	-O0 sufficed to address the issue.  In addition, I changed the
	macros into functions, which made -O0 useless.  Nevertheless
	the use -relax-branch was introduced, hoping that it would
	relieve us.  It actually made GCC produce incorrect code on
	the Aibo, with mysterious crashes.
	Removing the use of this option (and of -O0) solves this.
	Aibo works again.
	* src/parser/bison/bison.mk: Remove the use of PARSER_CXXFLAGS.

2007-02-22  Akim Demaille  <demaille@gostai.com>

	Use libport::mhas
	* src/userver.cc (UServer::work): Here.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	eval_FUNCTION_<arity>
	* src/uexpression.hh, src/uexpression.cc (eval_FUNCTION_0)
	(eval_FUNCTION_1, eval_FUNCTION_2): New.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Expect no conflicts
	* src/parser/bison/ugrammar.y: here.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Regen bison++
	* src/parser/bison/bison.mk: Add the missing dependency rules.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Scope reduction
	* src/uexpression.cc (UExpression::asyncScan): Here.
	Also, spread a few pings.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Use find0
	* src/ucommand.cc: Here.
	Also, instrument for debugging.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	vecho_key
	* src/userver.hh, src/userver.cc (vecho_key): New.
	(echoKey, error, echo): Use it.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	More UValue ctors
	* src/uvalue.hh, src/uvalue.cc
	(UValue::UValue (dataType, const char*)): New.
	Use it.
	Use other ctors.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Add spurious .
	* src/uvalue.cc (UValue::add): Remove a spurious dot I introduced
	in [764].

2007-02-20  Akim Demaille  <demaille@gostai.com>

	2007-02-20  Matthieu Nottale  <nottale@gostai.com>
	Fix a double-free problem caused by a missing copy.
	* src/uatcandidate.cc: Copy the UValue passed to UExpression ctor.

	2007-02-20  Matthieu Nottale  <nottale@gostai.com>
	Increase max receive buffer size to 1M on bsd and ghost connections
	* src/network/bsdnet/connection.hh: Here,
	* src/ughostconnection.hh: and here.

	2007-02-20  Akim Demaille  <demaille@gostai.com>
	Missing parens
	* src/uqueue.cc (UQueue::pop): Restore a pair of parens that
	I removed in [501].
	Thanks to MN (and apologies).

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Simplification
	* src/ucommandqueue.hh, src/ucommandqueue.cc (popCommand): Here.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Tidy uobj.cc
	* src/uobj.cc (remove): New.
	(~UObj): Use it.
	(UWaitCounter): Move its methods...
	* src/utypes.hh: here.
	(UWaitCounter::id): Now an UString.
	(~UWaitCounter): Remove, now useless.
	* src/ucommand.cc: Adjust.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Racfor buildfullname
	* src/uvariablename.cc: This code is really really hard to
	understand.  There seems to be a call the resolve_aliases
	hidden right afterward these bits, but I'm not sure...

2007-02-20  Akim Demaille  <demaille@gostai.com>

	UCommand::tmp_*
	* src/ucommand.hh, src/ucommand.cc (tmp_phase, tmp_time): remove.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Use find0
	* src/ucommand.cc (UCommand::scanGroups)
	(UCommand_ASSIGN_VALUE::execute_function_call): here.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Use find0
	* src/uvariablename.cc (UVariableName::getVariable)
	(UVariableName::getFunction, UVariableName::buildFullname): Here.

2007-02-20  Akim Demaille  <demaille@gostai.com>

	Add missing consts
	Oh my God!  There is so much duplication here :(
	* src/uobj.hh, src/uobj.cc (searchFunction, searchVariable)
	(searchEvent): Here.
	Also, use const_iterators.

2007-02-19  Akim Demaille  <akim.demaille@free.fr>

	Get rid of buffers
	* src/uvariablename.hh (set_fullname): Move to...
	* src/uvariablename.cc: here.
	(resolve_aliases): New.
	This simple function was really hard to extract from the code
	and its lack of documentation...  I hope I have it right.
	Use it.
	Use std::strings instead of buffers.

2007-02-19  Akim Demaille  <akim.demaille@free.fr>

	More UString operators
	* src/ustring.hh (operator!=): New.

2007-02-19  Akim Demaille  <akim.demaille@free.fr>

	Get rid of buffers
	* src/uvariablename.hh, src/uvariablename.cc (build_from_str): New.
	(buildFullname): Use it.
	Don't use static buffers.
	Factor and try to be readable.

2007-02-19  Akim Demaille  <akim.demaille@free.fr>

	Factor a bit UVariableName
	This code is really hard to follow, and Aibo crashes somewhere here
	(apparently, but it is hard to track).
	* src/uvariablename.hh, src/uvariablename.cc (set_fullname): New.
	(prefix, suffix): New.
	Use it.
	Prefer strlcpy to strncpy (I'll worry about portability later).
	Instrument for ECHO etc. but do not activate.
	Shorten some scopes.

2007-02-19  Akim Demaille  <akim.demaille@free.fr>

	update UString
	* src/ustring.hh (update): New.
	Hopefully, should disapear in the future, together with UStrings.

2007-02-19  Akim Demaille  <akim.demaille@free.fr>

	Use libport::m?has
	* src/ucommand.cc, src/uvariablename.cc: Here.

2007-02-18  Akim Demaille  <akim.demaille@free.fr>

	Fix signature
	* src/uvariable.hh: Add missing inline.
	* src/uvariable.cc (UVariable::print): here.

2007-02-18  Akim Demaille  <akim.demaille@free.fr>

	UVariable::print
	* src/uvariable.hh, src/uvariable.cc (UVariable::print)
	(operator<< (ostream, UVariable): New.

2007-02-18  Akim Demaille  <akim.demaille@free.fr>

	unic("PREFIX")
	* src/userver.hh, src/userver.cc (URBI_unicID): Now a static
	variable of...
	(uniq()): this.
	(unic(const char*)): New.
	* src/ucommand.cc: Use it instead of unic().
	(copy): Get rid of the ret temp var when we can.

2007-02-18  Akim Demaille  <akim.demaille@free.fr>

	Factor loops
	* src/uexpression.cc (UExpression::eval_FUNCTION): Factor two
	while loops ending both branches of an if.

2007-02-17  Akim Demaille  <akim.demaille@free.fr>

	* src/uexpression.cc (to_string): New, for UExpression::Type.

2007-02-17  Akim Demaille  <akim.demaille@free.fr>

	Adjust to *maps becoming SingletonPtr
	* src/ucommand.cc, src/uobj.cc, src/userver.cc, src/uvar.cc,
	* src/uvariablename.cc: Catch up with changes in liburbi-cpp
	[426].

2007-02-17  Akim Demaille  <akim.demaille@free.fr>

	uobject-hub-common.cc
	* src/uobject.cc: Remove factored functions.

2007-02-17  Akim Demaille  <akim.demaille@free.fr>

	Update uobject/
	* src/uobject.cc: Remove parts now factored in uobject-common.cc.

2007-02-15  Akim Demaille  <akim@lrde.epita.fr>

	Restore missing parens
	* src/uqueue.cc: Fix a bug reported by MN, introduced by myself
	in 501: the removal of important parens.

2007-02-15  Akim Demaille  <akim.demaille@free.fr>

	UCommand_ASSIGN_VALUE::execute_function_call
	* src/ucommand.hh, src/ucommand.cc (UFALLTHRU): New.
	(UCommand_ASSIGN_VALUE::execute_function_call): New.
	(UCommand_ASSIGN_VALUE::execute_): Use it.

2007-02-14  Akim Demaille  <akim.demaille@free.fr>

	Use &, not *
	* src/uobject.cc: to alias the ghost connection.

2007-02-14  Akim Demaille  <akim.demaille@free.fr>

	Cleaning
	* src/uobject.cc: Spaces, identifiers, scopes.

2007-02-14  Akim Demaille  <akim.demaille@free.fr>

	Respect the tradition
	* src/uobject.cc: For iterator names.

2007-02-14  Akim Demaille  <akim.demaille@free.fr>

	Process doc last
	* Makefile.am (SUBDIRS): here.

2007-02-14  Akim Demaille  <demaille@gostai.com>

	Query replace regexp:
	STREQ *(\(.*?\)->str(), *\([^)]*\)) -> *\1 == \2

2007-02-13  Akim Demaille  <akim.demaille@free.fr>

	Bug fix
	* src/uexpression.cc (UExpression::UExpression): Use t, not type,
	which is not yet defined.

2007-02-13  Akim Demaille  <akim.demaille@free.fr>

	Use operator== for UString
	* src/ucommand.cc: here.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	Let UGroup own their memory
	* src/ugroup.hh, src/ugroup.cc (name): Now an UString.
	Remove the ctor taking char*.
	* src/ucommand.cc, src/uobject.cc:
	Adjust.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	Pretend C++ support assignment operators
	* src/ustring.hh, src/ustring.cc (update): Remove.
	(operator=): New.
	* src/ucommand.cc, src/uconnection.cc, src/uexpression.cc,
	* src/userver.cc, src/uvariable.cc, src/uvariablename.cc:
	Use them.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	/! Dangerous checkin
	* src/memorymanager/blockmemorymanager.hh: Add a placement new
	to please mipsel-linux-g++-3.3.2.
	I'm not used to write placement new operators, and I'm really
	afraid of what is needed for the delete operator...
	I'm have to study books to ensure this is not completely
	fucked up.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	Pretend we program in C++ and use operators
	* src/ustring.hh, src/ustring.cc (equal): Remove, replaced by...
	(operator==): these two.
	* src/ubinder.cc, src/ucommand.cc, src/uconnection.cc,
	* src/ueventhandler.cc, src/uexpression.cc, src/uobj.cc,
	* src/uvariablename.cc: Use them.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	Less new (but not older)
	* src/ubinder.hh, src/ubinder.cc (Monitor::objects): Let it
	be a list of UString, not of UString*.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	Address a bit of the UString mess
	* src/ustring.hh, src/ustring.cc: Start to spread some more &
	instead of *.
	* src/parser/bison/ugrammar.y, src/ubinder.cc, src/ucommand.cc,
	* src/uconnection.cc, src/ueventhandler.cc, src/ugroup.cc,
	* src/uobj.cc, src/userver.cc, src/userver.hh, src/uvalue.cc,
	* src/uvariable.cc: Adjust in the most stupid way: add a *
	to arguments.
	Later passes will improve the code.
	Let's do that bit after bit.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	An iterator has to be named i
	* src/uasyncregister.cc: Unless you have a good reason :).
	Remove useless includes.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	Use LIBPORT_FD_ISSET
	* src/network/bsdnet/network.cc: here.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	Remove UString::(un_)?armor
	* src/ustring.hh, src/ustring.cc (un_armor, armor): Remove.
	* src/uvalue.cc: Just call libport::escape here.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	svn merge -r 857:860 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-02-13  Akim Demaille  <demaille@gostai.com>
	Handle escapes in the scanner itself
	* src/parser/bison/utoken.l: Do that.
	* src/parser/bison/ugrammar.y: Add a std::string field to %union.
	* src/ustring.cc (armor): Use hex escapes.

	2007-02-13  Akim Demaille  <demaille@gostai.com>
	Rename ugrammar's str as ustr
	* src/parser/bison/ugrammar.y,
	* src/parser/bison/utoken.l: Adjust all uses.

2007-02-13  Akim Demaille  <demaille@gostai.com>
	svn merge -r 832:857 https://svn.gostai.com/svn/kernel1/branches/1.0
	2007-02-13  Akim Demaille  <demaille@gostai.com>

	Remove fast_armor support
	It is way too buggy: the flag is sometimes incorrectly preserved,
	and it focused on too few case: \ and ", while there are many more.
	Besides it had an impact on *all* the UStrings, instead of addressing
	only those that need to.
	* src/ustring.hh, src/ustring.cc: here.

2007-02-13  Akim Demaille  <demaille@gostai.com>

	* src/network/bsdnet/connection.cc: Document MSG_NOSIGNAL.
	* src/network/bsdnet/network.cc: Don't rely on SO_NOSIGPIPE
	being defined.

2007-02-13  Akim Demaille  <akim.demaille@free.fr>

	Add debugging traces to network handling
	* src/network/bsdnet/network.hh
	* src/network/bsdnet/network.cc (Pipe::Pipe): Be useful.
	(Pipe::print, operator<<(ostream, Pipe)): New.
	* src/network/bsdnet/connection.hh,
	* src/network/bsdnet/connection.cc (~Connection): Don't test
	for a null fd: we actually use -1 to this end.
	(Connection::print): New.
	(closeConnection): Do nothing if the fd is -1.
	(doRead, effectiveSend): Use perror.
	Can someone tell me why notifyRead calls doRead instead of
	being doRead?
	(TCPServerPipe::print): New.
	(TCPServerPipe::init): Ask for errno instead of a signal for
	broken pipes.

2007-02-12  Akim Demaille  <akim.demaille@free.fr>

	Debugging traces
	* src/utypes.hh: For UErrorValue.

2007-02-12  Akim Demaille  <akim.demaille@free.fr>

	Pretend C++ is a scoped language
	* src/uconnection.cc: And reuse the identifiers.

2007-02-12  Akim Demaille  <akim.demaille@free.fr>

	Revert debug traces
	I checked in bits I didn't mean to check in, for I forgot -N.
	The following describes the previous patch, not what it
	reverses.
	* src/network/bsdnet/network.cc: Add even more perror calls
	on failures.

2007-02-10  Akim Demaille  <akim.demaille@free.fr>

	Use libport::escape
	* src/ustring.cc (armor): here.
	* src/Makefile.am: Compile the libport_sources.

2007-02-10  Akim Demaille  <akim.demaille@free.fr>

	* src/flavorable.hh (libport/assert.hh): Include it.

2007-02-10  Akim Demaille  <akim.demaille@free.fr>

	svn merge -r 826:832 https://svn.gostai.com/svn/kernel1/branches/1.0
	2007-02-09  Matthieu Nottale  <nottale@gostai.com>

	Fix armor/unarmor.
	* src/ustring.cc: Armor \n, \t and character not in 32-127
	range. Unarmor \n \t \<anychar> and \number.
			 More efficient unarmor implementation.

	2007-02-07  Matthieu Nottale  <nottale@gostai.com>

	Add the 'functions' keyword, send the list of functions (as 'vars').
	* src/parser/bison/utoken.l: Here,
	* src/ucommand.cc: and here.

2007-02-06  Akim Demaille  <demaille@gostai.com>

	Fix include
	* src/ucomplaints.cc (libport/assert.hh): Include it.

2007-02-06  Akim Demaille  <demaille@gostai.com>

	svn merge -r 800:825 https://svn.gostai.com/svn/kernel1/branches/1.0
	Also, use more pabort than abort.

	2007-02-06  Matthieu Nottale  <nottale@gostai.com>

	Fix a bug when copying a binary with no header. Replace aborts
	with asserts to differenciate between them should they trigger.
	* src/uexpression.cc: Here.

	2007-02-02  Akim Demaille  <akim@lrde.epita.fr>

	* configure.ac: Let URBI_PROG_CXX do it.

	2007-02-02  Akim Demaille  <akim@lrde.epita.fr>

	* src/utypes.hh (TagInfo::TagInfo): New copy ctor..

2007-02-06  Akim Demaille  <demaille@gostai.com>

	Restore weird loop
	Reported by MN.
	* src/network/bsdnet/network.cc (notify): Use two iterators
	to walk that list.
	(pipes_type): New.
	Use it.

2007-02-01  Akim Demaille  <akim@lrde.epita.fr>

	Bug fix: copy-ctor for TagInfo.
	* src/tag-info.hh, src/tag-info.cc: Add a copy constructor.
	Rewrite the code to make it a bit clearer.

2007-02-01  Akim Demaille  <akim@lrde.epita.fr>

	Fix the previous checkin.
	* src/Makefile.am: Add tag-info.* where needed.
	* src/tag-info.hh, src/tag-info.cc: Add missing includes.
	Remove implementations from the header.

2007-02-01  Akim Demaille  <akim@lrde.epita.fr>

	tag-info.*.
	* src/tag-info.hh, src/tag-info.cc: New.
	Built by taking pieces from...
	* src/utypes.hh, src/ucommand.cc, src/userver.hh: these files.

2007-02-01  Akim Demaille  <akim.demaille@free.fr>

	Get rid of casts
	* src/ucommand.hh, src/ucommand.cc (UCommand_BINDER): Use UBindType,
	instead of a stupid int.
	Remove many casts.
	Convert others to C++ style.
	* src/parser/bison/ugrammar.y: Adjust.

2007-02-01  Akim Demaille  <akim.demaille@free.fr>

	Remove some casts using tmp vars
	* src/ucommand.cc: here.
	* src/uobject/: Update.

2007-02-01  Akim Demaille  <akim.demaille@free.fr>

	C++ casts, enums
	* uqueue.hh: here, as usual.
	The declaration of enums could be done by style.

2007-02-01  Akim Demaille  <akim.demaille@free.fr>

	C++ Casts
	* utypes.hh: here.

2007-02-01  Akim Demaille  <akim.demaille@free.fr>

	C cast
	* src/ughostconnection.cc: Make it C++.

2007-02-01  Akim Demaille  <akim.demaille@free.fr>

	Remove C casts
	* src/memorymanager/memorymanager.cc: here.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	Add missing include
	* src/uvariable.cc: here.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	Use passert, not assert
	* src/uvariable.cc: here.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	svn merge -r 737:799 https://svn.gostai.com/svn/kernel1/branches/1.0

	2007-01-27  Jean-Christophe Baillie  <baillie@gostai.com>

	revert email that fails in mailto property.

	2007-01-27  Jean-Christophe Baillie  <baillie@gostai.com>

	change mailto.

	2007-01-27  Jean-Christophe Baillie  <baillie@gostai.com>

	fix BIN problem in grammar.y
	* src/parser/bison/ugrammar.y: replace "BIN" by TOK_BIN.

	2007-01-27  SIGOURE Benoit  <tsuna@lrde.epita.fr>

	Catch up with recent stuff in common.
	* src/console.cc: utime is now in the libport namespace.
	* src/parser/bison/utoken.l: Handle conflicting CPP defines.
	* src/uexpression.cc (ECHO, PING): Now provided by libport.

	2007-01-26  POTHIER Benoit  <pothier@gostai.com>

	Dummy change to test buildfarm.
	* AUTHORS: Change Copyright date.

	2007-01-25  Matthieu Nottale  <nottale@gostai.com>

	Remove unjustified abort, replace abort by assert
	* src/uvariable.cc: Add missing break in the data_void
	case. Remove abort for data_void case in 2nd switch.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	DEBUG
	* src/userver.cc (DEBUG): Move to...
	* src/userver.hh: here.
	* src/network/bsdnet/connection.cc (UError): Rename as...
	(uerror_): this.
	* src/uconnection.cc, src/uconnection.hh, src/uexpression.cc,
	* src/ughostconnection.cc: Adjust.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	Don't hard code values, use sizeof
	* src/ughostconnection.cc (UGhostConnection::effectiveSend): here.
	Add "tmp" is about the most useless word to include in an
	identifier.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	check-html
	* Makefile.am (check-html): New.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	Add DEBUG traces in the server start up
	* src/userver.cc: here.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	No static definitions in headers
	* src/userver.hh: Use enums.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	Routine permutation
	* src/userver.cc: here.
	No real change.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	Remove C casts
	* src/userver.cc: Remove some useless C casts.
	Indentation changes.
	Add scopes.
	* src/userver.hh: White space changes.
	* src/userver.hh, src/userver.cc, src/console.cc (initialization):
	Rename as...
	(initialize): this.

2007-01-30  Akim Demaille  <demaille@gostai.com>

	Use libport/unistd.h
	* src/network/bsdnet/network.cc: here.

2007-01-29  SIGOURE Benoit  <tsuna@lrde.epita.fr>

	Fix includes.
	* src/network/bsdnet/network.cc: Include unistd.h to get the
	  definition of close(2).

2007-01-28  Akim Demaille  <akim@lrde.epita.fr>

	One less UString pointer
	* src/userver.hh, src/userver.cc (mainName): Remove the indirection,
	and rename as...
	(mainName_): this, private.
	Adjust uses.
	Put the documentation in the header.

2007-01-28  Akim Demaille  <akim@lrde.epita.fr>

	Simplifications
	* src/network/bsdnet/network.cc (notify): Simplify the for loop,
	which had complications whose purpose I do not understand.
	(selectAndProcess): Reorder the if's, and use else if.
	(trigger): Remove useless this->.

2007-01-27  Jean-Christophe Baillie  <baillie@gostai.com>

	revert email that fails in mailto property.

2007-01-27  Jean-Christophe Baillie  <baillie@gostai.com>

	fix mailto property.

2007-01-26  Akim Demaille  <akim@lrde.epita.fr>

	fwd.hh
	* src/utypes.hh (TagInfo): move to.
	* src/fwd.hh: here.

2007-01-26  Akim Demaille  <akim.demaille@free.fr>

	Coding style
	* src/uproperty.hh, src/uproperty.cc: Use C++ ctors.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Alpha conversion
	* src/ucommand.cc: here.
	Mostly to flush the mails from my laptop.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Less buffer
	* src/uconnection.cc, src/uobj.cc: And more ostringstream, you
	know the drill now.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	I can't do any better
	* src/uvariablename.cc: Shorten some scopes.
	But I give up, this file is a nightmare.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	More ostringstream
	* src/uvariablename.cc: Here.
	This file has tricky uses of a buffer on thousands of lines
	of distance.  It sucks.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Less buffers
	* src/uconnection.cc, src/uobj.cc, src/uvalue.cc: More ostringstreams.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Less buffers
	* src/uconnection.cc: More ostringstream.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Less static buffers
	* src/userver.cc: Use ostringstreams.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Use ostringstream
	* src/uexpression.cc: here. Kill C.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	More std::ostringstream
	* src/ucommand.cc: Stop using static buffers.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Stop using large buffers to please the Aibo (and C++ programmers)
	* src/ucallid.hh, src/ucallid.cc: Now its ctor takes std::strings
	instead of const char*.
	* src/ucommand.cc (buffer_t, NOT_ON_AIBO): Remove.
	Replace all their uses with ostringstreams.
	Also, from time to time, make better use of the dynamic casted
	variables to avoid yet another cast.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Fix include
	* src/uexpression.cc (libport/assert.hh): include it for most
	recent libport.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Coding style changes
	* src/userver.cc: here.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Handle URBI_PATH
	* src/console.cc: in the constructor rather than in the main.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	More passert
	* src/uexpression.cc: here.
	Also, remove debugging code.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Factor the parsing of "at"
	* src/ucommand.hh, src/ucommand.cc: Rename AT_FLAVOR as AT.
	* src/parser/bison/ugrammar.y (and.opt): New.
	Use it to factor the parsing of at.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	UCommand_AT is Flavorable
	* src/uasynccommand.hh (UCommand_AT): Derive from flavorable.
	* src/ucommand.cc: Adjust its implementation.
	* src/ucommand.hh (AT, AT_AND): Remove.
	(AT_FLAVOR): New, temporary.
	* src/parser/bison/ugrammar.y: Adjust.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	* src/ucommand.cc, src/uconnection.cc, src/uexpression.cc,
	* src/userver.cc: Use passert.
	Fix two incorrect assertions of dynamic_cast.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Use passert
	* src/parser/bison/bison.mk: Pass -s to flex so that it does not
	generate a default rule using its own ECHO which does not have the
	same signature as ours.
	* src/uexpression.cc: Use passert for fun.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Factoring
	* src/uvariablename.hh, src/uvariablename.cc (update_array_mangling):
	New.
	Use it.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Simplifications
	* src/parser/bison/ugrammar.y: Use ? :.
	* src/uvariablename.cc (UVariableName::buildFullname): Shorten
	scopes.

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Fix "bin" parsing
	* src/parser/bison/ugrammar.y: The alias is "bin", not "BIN".

2007-01-25  Akim Demaille  <demaille@gostai.com>

	Merge 697:736 from the branch "1.0".
	2007-01-24  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #73 (illegal void operations)
	* src/uexpression.cc: done.

	2007-01-24  Jean-Christophe Baillie  <baillie@gostai.com>

	remove spaces.
	* src/uvariable.hh: done.

	2007-01-24  Jean-Christophe Baillie  <baillie@gostai.com>

	Since the major event mechanism rewriting in r265, test lazzy
	evaluation had been broken on purpose, because we wanted the following
	code to ping twice:

	(1):

	at (a || b) ping;
	emit a & emit b;

	So we had to eval the right side of || even if the left side was
	already true (same thing with &&).
	This led to a series of serious problems where programmers commonly
	took for granted that things like that should work:

	if (!isdef(x) || x...) // trigger a runtime error on x when unknown!

	It also impacted the autogenerated code of 'new', which made the
	command fail in some cases.

	So I have reestablished the lazzy test evaluation for the moment.
	There is a serious question on how to mix events and expressions eval in
	tests and this will be tackled later. Bearclaw suggests that the
	simple | bitwise operator could be used to have the same effect as ||
	but without lazzy evaluation, giving a convenient way to programmers
	to enforce the behavior of (1).

	Note: | for tests will obviously conflict with | for commands, I see no
	workaround.

	rehabilitate test lazzy evaluation.
	* src/uexpression.cc: add test lazzy evaluation.

	2007-01-24  Jean-Christophe Baillie  <baillie@gostai.com>

	update NEWS file.
	* NEWS: add UOwned and function redefinition.

	2007-01-23  Matthieu Nottale  <nottale@gostai.com>

	Do not put big buffers on the stack for aibo
	* src/ucommand.cc: Use a global buffer instead of on the stack
	ones for aibo.

	2007-01-23  Jean-Christophe Baillie  <baillie@gostai.com>

	This FIXME was relative to an old comment that made no sense, because
	it was copy-pasted from somewhere else a long time ago. Just ignore
	the whole thing.

	remove unecessary comments.
	* src/uvariable.cc: done.

	2007-01-23  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug on 'random', ticket #100.
	* src/uexpression.cc: check if arg is non zero.

	2007-01-23  Jean-Christophe Baillie  <baillie@gostai.com>

	update externals for tests.

	2007-01-22  Jean-Christophe Baillie  <baillie@gostai.com>

	The fact that functions could not be redefined without first deleting
	them was a design flaw leading to tons of "delete myfun" at the
	beginning of any .u file. This is fixed now, but function redefinition
	can still trigger a warning in strict mode.

	Note: what strict mode does or does not do should be "selectable", like
	Warning flags in gcc. This calls for a bit of brainstorming on how to
	best do it in URBI.

	allow redefinition of functions, warning in strict mode.
	* src/ucommand.cc: delete function def upon redefinition.

	2007-01-22  Jean-Christophe Baillie  <baillie@gostai.com>

	update to match latest urbi-sdk uobject.hh (with automatic USync)
	* src/uobject.cc: support dummy UObject constructor and remove
	unecessary USync method content.

	2007-01-22  Jean-Christophe Baillie  <baillie@gostai.com>

	add support for 'remote' attribute and fix uninitialized attributes
	* src/uobject.cc: done.

	2007-01-20  Jean-Christophe Baillie  <baillie@gostai.com>

	change mailto property to kernel1@gostai.com

	2007-01-19  Matthieu Nottale  <nottale@gostai.com>

	branch 1.0: fix a segv when deleting a variable with function scope
	* src/ucallid.cc: Implement:
	* src/ucallid.hh: Add a remove function to remove uvariables from list. This function does nothing as soon as dtor has been called.
	* src/uvariable.hh: Hold a ucallid* , non null if var is of function scope. call its remove function when deleted.

	2007-01-19  Matthieu Nottale  <nottale@gostai.com>

	branch 1.0: Add missing mutex lock in custom memory manager
	* src/memorymanager/blockmemorymanager.hh,
	* src/memorymanager/memorymanager.cc: Do it.

2007-01-24  Akim Demaille  <demaille@gostai.com>

	alpha conversion
	* src/userver.cc (UServer::initialization): Rename some vars.

2007-01-23  Akim Demaille  <demaille@gostai.com>

	Factor the flavors in the parser.
	* src/parser/bison/ugrammar.y (TOK_SEMICOLON, TOK_COMMA, TOK_AND)
	(TOK_PIPE): They now have the flavor type.
	Adjust uses.
	(flavor.opt, pipe.opt): New.
	Use them to factor family of constructs (e.g., while and while|).
	* src/parser/bison/utoken.l (RETURN_FLAVOR): New.
	Use it for these four tokens.
	* src/parser/uparser.hh: Include flavorable.hh.

2007-01-23  Akim Demaille  <demaille@gostai.com>

	Use more literals in the parser.
	* src/parser/bison/ugrammar.y: Replace uses of TOK_OBJECT, TOK_POINT,
	and TOK_COPY.

2007-01-23  Jean-Christophe Baillie  <baillie@gostai.com>

	fix mailto property.

2007-01-23  Akim Demaille  <demaille@gostai.com>

	Network clean up
	* src/network/bsdnet/connection.hh: Remove useless includes.
	* src/network/bsdnet/connection.cc: Shorten scopes.
	* src/network/bsdnet/network.hh: Remove useless includes.
	Use a more recent libport.
	* src/network/bsdnet/network.cc (TCPServerPipe::~TCPServerPipe):
	Call shutdown before close.
	(TCPServerPipe::notifyRead): Shorten scopes.
	Remove the client_info variable, unused.

2007-01-23  Akim Demaille  <demaille@gostai.com>

	Dead cpp code
	* src/network/bsdnet/network.hh (YYTOKENTYPE): Remove this pseudo
	definition.

2007-01-23  Akim Demaille  <demaille@gostai.com>

	|
	* src/uexpression.cc: Use ||, not |, for Booleans.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Coding style
	* src/network/bsdnet/network.cc: Use a more tradional reading
	of error values.
	(TCPServerPipe::~TCPServerPipe): close the fd when exiting to
	free the port asap.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Use perror
	* src/network/bsdnet/network.cc: Use perror where there are syscall
	failures.
	Shorten scopes.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Update libport
	* src/console.cc: .

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Fix UValue constructions
	* src/uexpression.cc: here.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	More UValue ctor uses
	* src/uexpression.cc: here.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Use ctors
	* src/uvalue.hh: Comment changes.
	* src/uexpression.cc (UExpression::eval): Use the ctors instead
	of constructing by hand, and without telling the object...

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Scope shortening
	* src/uexpression.cc: here.
	Use ?:.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	No longer alias urbi::UBlendType, just use it
	* src/utypes.hh: No longer alias it and its members.
	* src/ucommand.cc, src/userver.cc, src/uvariable.cc,
	* src/uvariable.hh: Adjust.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Coding style
	* src/uexpression.cc: Use shorten argument names that don't
	conflict with the member names.
	Simplify accordingly.
	Translate comments into asserts.
	Simplify the logic of the bin expression case.

2007-01-19  Akim Demaille  <demaille@gostai.com>

	-Werror
	* configure.ac: Now handled by URBI_PROG_CXX.

2007-01-19  Matthieu Nottale  <nottale@gostai.com>

	Add missing lock in block memory manager. Fix a double delete when a variable with function scope is deleted. Replace some ustring by std::string
	* src/memorymanager/blockmemorymanager.hh: BlockMemoryManager now inherits lockable.
	* src/memorymanager/memorymanager.cc: Lock all calls.
	* src/ucallid.cc: Register the ucallid to the variables in his list. Add a remove call
	* src/ucallid.hh: Idem.
	* src/ucommand.cc: Fix for uvariable/uvariablename modifications.
	* src/uconnection.cc: Fix for uvariable/uvariablename modifications.
	* src/uexpression.cc: Fix for uvariable/uvariablename modifications.
	* src/uobj.cc: Fix for uvariable/uvariablename modifications.
	* src/ustring.hh: Add a ctor taking a std::string.
	* src/uvalue.cc: Move some fields to private scope, add accessors.
	* src/uvalue.hh: Idem.
	* src/uvariable.cc: Move some fields to private scope, add accessors. Call remove of the owner ucallid in dtor.
	* src/uvariable.hh: Idem.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Change a cast for portability
	* src/network/bsdnet/connection.cc: Fix a warning.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Fix a load bug
	* src/ucommand.cc: Add the same exception to load as to exec.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/ucommand.hh: here.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Clean up
	* src/parser/bison/ugrammar.y: Remove a cast.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Add debugging help
	* src/uexpression.cc: here.
	Should be in libport/compiler eventually.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Use string literals in the parser
	* src/parser/bison/ugrammar.y: here.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	to_string for Status
	* src/ucommand.hh, src/ucommand.cc (KIND): Rename as...
	(CASE): this.
	(to_string): New.
	(UCommand::print): Use it to display the status.
	(UCommand_NOOP::print): No longer display the status.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Use std::string for file names
	* src/parser/uparser.hh, src/parser/uparser.cc
	(UParser::process): Take a string.
	* src/uexpression.cc: Adjust.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	White space changes
	* src/ucommand.hh: here.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	eval_FUNCTION_EXEC_OR_LOAD
	* src/uexpression.hh, src/uexpression.cc
	(UExpression::eval_FUNCTION_EXEC_OR_LOAD): New.
	Use it.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Scope reduction
	* src/uexpression.cc (UExpression::eval_FUNCTION): here.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Fix vdebug use
	* src/ucommand.hh, src/ucommand.cc (send_error): Rename the va_list
	one as...
	(vsend_error): this.
	Call va_end.
	(tab, debug, vdebug): Move to...
	* src/userver.hh, src/userver.cc: here.
	Fix a genuine bug: be sure to call UServer::vdebug, not debug.
	Use where appropriate.
	* src/uexpression.hh, src/uexpression.cc (UExpression::print): Now
	takes an indentation level.
	* src/unamedparameters.cc: Adjust.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Sanitize casts
	They trigger warnings.
	* src/parser/uparser.cc, src/parser/uparser.hh (process): Take
	a const ubyte*, not a ubyte*.
	* src/uexpression.cc: Adjust.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Address cast warning
	* src/uvalue.cc: Use a reinterpret_cast, not a C cast.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Fix creation of groups
	Fixes groups.chk.
	* src/uexpression.cc: Weaken preconditions in ctors.
	Avoid identifier collisions between members and variables.

2007-01-18  Type Your Name Here  <your.mail.here@FIXME.com>

	More format checking
	* src/uexpression.cc (send_error): here.

2007-01-18  Type Your Name Here  <your.mail.here@FIXME.com>

	Fix warning
	* src/ucommand.cc: Remove casts that drop constness.
	Rather, preserve constness.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	More warnings
	* configure.ac: Activate more G++ warnings.
	Don't pass -Werror to VC++.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Handle FD_SET portability issues
	* src/network/bsdnet/network.cc (LIBPORT_FD_SET): New.
	Use it to address a warning on Windows.

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	update externals

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	small restyling (spaces)
	* src/ubinder.cc: done.
	* src/ubinder.hh: done.
	* src/uvar.cc: done.

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	This should go into the 'unstable' branch
	fix backward compatibility issue.
	* src/uobject.cc: revert.
	* src/uvalue.cc: revert.
	* src/uvar.cc: revert.

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	update externals.

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	Doing a simple obj.x=7; command was triggering UNotifyAccess on x. In
	the more general case of controlled assignment, like "obj.x=7
	time:1s", this call to UVariable::get is necessary to know where to
	start from. In the case of a simple instantaneous assignment, the call
	must be avoided for optimization purposes.

	fix a bug in assignment triggering a non necessary call to UVariable::get()
	* src/ucommand.cc: set controlled and use it in processModifiers as
	well.
	* src/ucommand.hh: moves 'controlled' from local to the call to object
	attribute (to be seen by all subsequent method calls).

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	UOwned UVar which are UNotifyAccess'd and UNotifyChange'd in the same
	UObject should not trigger a loop of calls to UNotifyAccess.

	fix loop UNotifyChange/Access on UOwned UVar inside the same UObject
	* src/userver.cc: use special call to get for the
	notify_access_and_change loop.
	* src/uvariable.cc: add support for autoloop in get.
	* src/uvariable.hh: add new prototype of get.

2007-01-17  Akim Demaille  <demaille@gostai.com>

	Check printf-like functions
	* src/ucommand.cc, src/ucommand.hh, src/ucommandqueue.cc,
	* src/uconnection.cc, src/uexpression.cc, src/userver.hh:
	Use GCC's features to check them.

2007-01-17  Jean-Christophe Baillie  <baillie@gostai.com>

	There was several flaw in the way UNotifyChange was working on
	USensor-tagged UVar. Also, the interaction between UNotifyChange and
	UNotifyAccess was not working properly in remote mode (you could have
	a UNotifyChange remote and a UNotifyAccess plugged without any effect,
	while this should loop the Access).

	I have fixed these problems and will clarify the rationale behind
	USensor in a wiki page. By the way, USensor will be renamed in the
	next commit (*with backward compatibility of course*).

	fix ticket #112 (UNotifyChange with USensor)
	* NEWS: Explain the above and the inherits name change.
	* src/ucommand.cc: add access_and_change_varlist support for remote
	UVar doing a UNotifyChange on a variable that is already
	UNotifyAccess'ed from a plugged object.
	* src/uvar.cc: force update in any case, with a specific flag for the
	case of an update coming from a UVar operator= assignement (done in a
	UObject, vs done in the language).
	* src/uvariable.cc: do not trigger UNotifyChange on a USensor plugged
	Var when the change comes from UVar operator=.
	* src/uvariable.hh: add new prototype of updated.

2007-01-17  Akim Demaille  <demaille@gostai.com>

	Warning fixes.
	* src/network/bsdnet/network.cc: Don't use static, use the
	anonymous namespace.
	Use enum to define constants.
	(controlPipe): Don't define on windows, as it is not used there.

2007-01-17  Akim Demaille  <demaille@gostai.com>

	More location initialization.
	* src/parser/uparser.cc (UParser::UParser): here.

2007-01-17  Akim Demaille  <demaille@gostai.com>

	First column is column 1.
	This code can be simplified when Bison 2.4 is out.
	* src/parser/uparser.cc (process): Enforce this.
	* src/parser/bison/utoken.l (LINES): New.
	Use it.

2007-01-17  Matthieu Nottale  <nottale@gostai.com>

	Fix a bug when printing strings containing % in the ghostconnection and a potential send bug in userver
	* src/ughostconnection.cc: Do not pass string to print in the format field. pass ("%s", str) instead.
	* src/userver.cc: Add missing call to va_end.
	* src/userver.hh: Rename overloaded send(va_args) to vsend as the wrong one might be called.

2007-01-16  Akim Demaille  <demaille@gostai.com>

	Add missing ;.
	* src/parser/bison/ugrammar.y: here.
	Newer Bisons no longer add this default semicolon.

2007-01-16  Jean-Christophe Baillie  <baillie@gostai.com>

	The bug was an uninitialized attribute of UParser in the constructor.

	fix ticket #113
	* src/parser/uparser.cc: add init of commandTree to 0.
	* src/uconnection.cc: remove Tsuna temporary fix.

2007-01-14  Jean-Christophe Baillie  <baillie@gostai.com>

	update externals

2007-01-14  Akim Demaille  <demaille@gostai.com>

	Catch up with UValue::Type.
	* src/uobject.cc, src/uvalue.cc, src/uvar.cc: Prepend UValue::
	where needed.

2007-01-14  Jean-Christophe Baillie  <baillie@gostai.com>

	Kernel side of the API Change made to UObject had to be fixed.

	revert UObject API change.
	* src/uvalue.cc: done.

2007-01-14  Jean-Christophe Baillie  <baillie@gostai.com>

	update uobject externals to r363

2007-01-12  Akim Demaille  <demaille@gostai.com>

	Update uobject
	To get Matthieu's fix on scanf use.

2007-01-12  Akim Demaille  <demaille@gostai.com>

	cpp fix
	* src/ucommand.cc: Fix an #undef.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	-Werror
	* configure.ac: Pass it.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	Shorten scopes, fix warnings
	* src/uvalue.cc (UValue::copy): Make it clear which missing
	cases are valid (e.g., DATA_VOID), and which are to reject.
	Possibly some cases are missing, and will have to be added,
	but the test suite passes.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	renaming
	(This is to split the following patch.)
	* src/uvalue.cc: ret -> res.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	Fix warnings
	* src/uvariable.cc: Die on impossible switch cases.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	Update uobject
	* src/uvalue.cc: Adjust.

2007-01-11  Matthieu Nottale  <nottale@gostai.com>

	Add missing variable initialisation
	* src/parser/uparser.cc: Initialise filename_ in ctor.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	Coding style
	* src/ueventmatch.cc, src/ueventmatch.hh: Improve the coding
	style: scopes, ctors, for loops, useless braces and parens.
	The usual stuff.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	UEventCompoundType
	* src/utypes.hh (UEventCompoundType): Move to.
	* src/ueventcompound.hh (UEventCompound::Type): here.
	* src/ueventcompound.cc: Adjust.
	Also, use switch when that's more appropriate.
	And SHORTEN THE SCOPES!
	* src/uexpression.cc: Adjust.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	simplify (UCommand_TREE)
	* src/uconnection.cc (simplify): New.
	(UConnection::execute): Use it.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	Coding style
	* src/ucommandqueue.cc: Shorten scopes.
	Use switch where appropriate.
	Use array notations where more appropriate than pointers.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	libport up
	* src/uconnection.cc, src/uconnection.hh,
	* src/userver.cc, src/userver.hh: Adjust.

2006-12-29  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix includes.
	* src/ucommand.hh: include cstdarg.

2006-12-29  Akim Demaille  <demaille@gostai.com>

	Nuke two warnings
	* src/uexpression.cc: Provide defaults to two switches.

2006-12-29  Akim Demaille  <demaille@gostai.com>

	Use abort to please gcc
	* src/ucomplaints.cc: instead of continuing the execution.

2006-12-29  Akim Demaille  <demaille@gostai.com>

	More send_error
	None of these are exercised by the test suite...
	* src/ucommand.hh (send_error): Now exported.
	* src/ucommand.cc: Adjust.
	* src/uvariablename.cc: Use it.

2006-12-29  Akim Demaille  <demaille@gostai.com>

	UVariableName::UDeriveType
	* src/utypes.hh (UDeriveType): Move to...
	* src/uvariablename.hh: here.
	Adjust all uses.
	* src/parser/bison/ugrammar.y (TOK_NORM): Use the same
	string in the parser as it is in the scanner.
	Use more string reprensentation for symbols.

2006-12-29  Akim Demaille  <demaille@gostai.com>

	Display the expression locations in errors
	* src/uexpression.hh, src/uexpression.cc (eval_LIST, eval_GROUP):
	New, extracted from...
	(eval): here.
	(send_error): New.
	Use it instead of snprintf + send dark incantations.

2006-12-29  Akim Demaille  <demaille@gostai.com>

	Put UDefType in its class
	* src/utypes.hh (UDefType): Move to...
	* src/ucommand.hh (UCommand_DEF::UDefType): here.
	Adjust all uses.
	* src/uvariablename.hh (id_type): Remove, unused.
	Adjust all "uses" (that were useless).

2006-12-29  Akim Demaille  <demaille@gostai.com>

	Attach locations to UExpressions
	* src/uexpression.hh, src/uexpression.cc (UExpression): Derive
	from UAst.
	Adjust all uses.

2006-12-29  Akim Demaille  <demaille@gostai.com>

	Remove useless prefix
	* src/ucommand.hh: No need to specify UCommand:: where we're in it.
	Besides, it actually comes from UAst.

2006-12-29  Akim Demaille  <demaille@gostai.com>

	Fix location tracking
	When load is executed, we must preserve the current location.
	* src/parser/uparser.cc (UParser::process_): When loading a file
	backup the current location and restore it to keep track of
	the location in the input.

2006-12-27  Akim Demaille  <demaille@gostai.com>

	Add location to command errors
	* src/uast.hh (loc): New.
	* src/ucommand.cc (send_error): Also report the location of
	the broken command.

2006-12-27  Akim Demaille  <demaille@gostai.com>

	On second thought, pass the command to send_error
	* src/ucommand.cc (send_error): Instead of taking a tag,
	take a command and use its tag.
	And use an string stream for the format.

2006-12-27  Akim Demaille  <demaille@gostai.com>

	send_error
	* src/ucommand.cc (send_error): New.
	Use it instead of open coded error strings.
	It could be part of UCommand, I'm not sure.

2006-12-27  Akim Demaille  <demaille@gostai.com>

	execute_
	* src/utypes.hh (UCommandStatus): Move to...
	* src/ucommand.hh (UCommand::Status): here.
	(execute): Be = 0!!!
	(execute_): New.
	Let all the heirs implement it instead of execute.
	Simplify a bazillion of "return status =".
	Adjust all dependencies.

2006-12-27  Akim Demaille  <demaille@gostai.com>

	Style changes
	* src/ucommand.cc: Use if where switch was not so appropriate.

2006-12-27  Akim Demaille  <demaille@gostai.com>

	Factor print, and add consts
	* src/uasynccommand.cc, src/uasynccommand.hh, src/ubinary.cc,
	* src/ubinary.hh, src/ucommand.cc, src/ucommand.hh,
	* src/uconnection.cc, src/ucopy.hh, src/uexpression.cc,
	* src/uexpression.hh, src/unamedparameters.cc,
	* src/unamedparameters.hh, src/uvalue.hh, src/uvariablelist.cc,
	* src/uvariablelist.hh, src/uvariablename.cc, src/uvariablename.hh:
	(print, copy): these are const methods.
	Adjust all uses.
	Also, remove some useless includes.
	* src/ucommand.cc, src/ucommand.hh (UCommand::copy): This is
	= 0 for God sakes!
	(UCommand::print_): New.
	(UCommand::print): Adjust to using it.
	* src/uvalue.cc: Stop using ucopy here, more care is needed.

2006-12-27  Akim Demaille  <demaille@gostai.com>

	More DEBUG_ATTR
	* src/ucommand.cc: here.

2006-12-27  Akim Demaille  <demaille@gostai.com>

	Shorten scopes
	* src/uconnection.cc: here.

2006-12-27  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Restyle.
	* src/memorymanager/memorymanager.cc,
	* src/network/bsdnet/network.cc,
	* src/parser/bison/flex-lexer.hh,
	* src/uasynccommand.cc,
	* src/uasyncregister.cc,
	* src/ucommand.cc,
	* src/ueventcompound.cc,
	* src/ueventhandler.cc,
	* src/ueventinstance.cc,
	* src/ueventmatch.cc,
	* src/uexpression.cc,
	* src/userver.cc,
	* src/ustring.cc,
	* src/utypes.hh,
	* src/uvalue.cc,
	* src/uvar.cc: Formatting changes.

2006-12-26  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Restyle.
	* src/memorymanager/memorymanager.cc,
	* src/network/bsdnet/network.cc,
	* src/ucommand.cc,
	* src/uconnection.cc,
	* src/uexpression.cc: Here.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	Comment changes
	* src/uvariablename.hh: here.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	s/_FLAVORS//
	* src/ucommand.hh (WHILE_FLAVORS, LOOPN_FLAVORS, FOREACH_FLAVORS)
	(FOR_FLAVORS, TREE_FLAVORS): Rename as...
	(WHILE, LOOPN, FOREACH, FOR, TREE): these.
	These names were just to ease the transition of semantics of
	these symbols.
	Adjust all uses.

	* src/uconnection.cc: Use a brand new C++ instruction: for.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	Factor the command flavors
	* src/utypes.hh (UNodeType): Move to...
	* src/flavorable.hh (Flavorable::UNodeType): this new class.
	* src/ucommand.hh, src/ucommand.cc (U
	(to_string, kind, nodetype): Remove, now useless.
	(WHILE, WHILE_AND, WHILE_PIPE): Remove, replaced with...
	(WHILE_FLAVORS): this.
	(LOOPN, LOOPN_AND, LOOPN_PIPE): Remove, replaced with...
	(LOOPN_FLAVORS): this.
	(FOREACH, FOREACH_AND, FOREACH_PIPE): Remove, replaced with...
	(FOREACH_FLAVORS): this.
	(FOR, FOR_AND, FOR_PIPE): Remove, replaced with...
	(FOR_FLAVORS): this.
	(TREE): Rename as...
	(TREE_FLAVORS): this.
	(UCommand_TREE, UCommand_WHILE, UCommand_LOOPN, UCommand_FOREACH)
	(UCommand_FOR): Inherit from Flavorable.
	Adjust ctors and copy.
	(UCommand_TREE::node): Remove, duplicate flavor_.
	Adjust all uses.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	Restyling
	* src/uvariablename.cc: Shorten scopes.
	Use Boolean expressions instead of statements.
	Use less useless variables.

2006-12-26  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Restyle.
	* src/uasynccommand.cc,
	* src/uasyncregister.cc,
	* src/ubinder.cc,
	* src/ucommand.cc,
	* src/ucommand.hh,
	* src/ucommandqueue.cc,
	* src/uconnection.cc,
	* src/ueventcompound.cc,
	* src/ueventhandler.cc,
	* src/ueventinstance.cc,
	* src/ueventmatch.cc,
	* src/uexpression.cc,
	* src/ugroup.cc,
	* src/uobj.cc,
	* src/uobject.cc,
	* src/uqueue.cc,
	* src/userver.cc,
	* src/userver.hh,
	* src/ustring.cc,
	* src/uvalue.cc,
	* src/uvar.cc,
	* src/uvariable.cc,
	* src/uvariablename.hh: Formatting changes.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	More DEBUG_ATTR
	* src/ucommand.cc (DEBUG_ATTR_I): New.
	Use it, and use DEBUG_ATTR also more widely.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	Shorten scopes
	* src/ucommand.cc (UCommand_AT::execute): here.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	Pass tags as std::string
	* src/ucommand.cc, src/uvariablename.cc: here.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	Move the doc where it belongs: the header file.
	* src/uconnection.hh, src/uconnection.cc: here.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	Local restyling
	* src/uvariablename.cc: here.
	Shorten and cut var scopes.
	Compute booleans as expressions instead of using statements.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	if for -> for
	* src/uvariable.cc: Iterate over empty structures just as on
	non-empty ones.
	And use useful identifiers.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	Use #if 0 to comment out code
	* src/ugroup.cc: here.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	UVariable::UVarSet
	* src/utypes.hh (UVarSet): Move to...
	* src/uvariable.hh (UVariable::UVarSet): here.
	Adjust all uses.
	Remove tautologic (and incorrect) documentation.
	(setName): Move the implementations into the *.cc file.
	(uvalue.hh, ustring.hh): Remove the includes.
	Adjust all users that did not properly include uvalue.hh.
	* src/userver.cc (UServer::work): Remove the useless variable
	selfError. That frees us from additional includes.

2006-12-26  Akim Demaille  <demaille@gostai.com>

	s/CMD_//
	* src/ucommand.hh (Type): Remove the CMD_ prefix.
	Adjust all uses.

	* src/parser/bison/ugrammar.y: More "tag" uses.

2006-12-26  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	More restyling.
	* src/ucommand.cc,
	* src/ucommandqueue.cc,
	* src/uexpression.cc,
	* src/uobj.cc,
	* src/uvalue.cc,
	* src/uvar.cc,
	* src/uvariablename.cc: Restyle. Formatting changes. Some potentially
	  dangerous default cases were removed. If they were intended, rewrite
	  them as:
	  default: /* skip */
	    break;
	  Meanwhile we have more compiler warnings about cases not handled in
	  switch.

2006-12-25  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Restyle.
	* src/ucommand.cc,
	* src/ucommandqueue.cc,
	* src/uconnection.cc,
	* src/ueventhandler.cc,
	* src/ueventmatch.cc,
	* src/uexpression.cc,
	* src/ugroup.cc,
	* src/uobj.cc,
	* src/uobject.cc,
	* src/uqueue.cc,
	* src/uvalue.cc,
	* src/uvar.cc,
	* src/uvariable.cc,
	* src/uvariablename.cc,
	* src/uvariablename.hh: Here. Formating changes.

2006-12-25  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	This should have been done much sooner...
	change 'inherit' to 'inherits'
	* src/parser/bison/ugrammar.y: done.
	* src/parser/bison/utoken.l: done.

2006-12-25  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	change email notification to kernel1@gostai.com
	* vcs/local.rb: done.

2006-12-25  Akim Demaille  <demaille@gostai.com>

	Factor handling of tags in the grammar
	* src/parser/bison/ugrammar.y (tag): New.

2006-12-25  Akim Demaille  <demaille@gostai.com>

	Factor the handling of flags
	I'd really appreciate if someone could add tests on the use
	of flags...
	* src/parser/bison/ugrammar.y (flags, flags.0.1): Remove.
	(flag, flags.0, flags.1): New.

2006-12-25  Akim Demaille  <demaille@gostai.com>

	Rule permutation
	* src/parser/bison/ugrammar.y: Highlight the similarity bw rules
	using flags.

2006-12-25  Akim Demaille  <demaille@gostai.com>

	Simplifications
	* src/uexpression.hh (UExpression::Type): Remove the EXPR_ prefix.
	Adjust all uses.
	(UExpression::UExpression): Remove the ctor that takes an ufloat*,
	since any it takes a copy.
	Use assert instead of claiming some belief in comments.

	* src/parser/bison/ugrammar.y (take): New.
	Use it to free leaking ufloats.
	There are many more, but the rest of the code must first take
	ufloats by value, not pointer.
	(flags.0.1): New.
	(flags): Use it.
	* src/uatcandidate.cc (trigger): Simplify the control flow logic.

2006-12-24  Akim Demaille  <demaille@gostai.com>

	Reduce code bloat in the parser
	The assembly flags are no longer needed on MIPS to compile
	the parser.  Maybe we can also leave -O2.
	* src/parser/bison/ugrammar.y (NEW_EXP, NEW_BIN, MEMCHECK): Remove
	all these macros, replaced by...
	(new_exp, new_bin, memcheck): these.
	(uparser): Rename as...
	(up): this.
	(TOK_UECHO): Rename as...
	(TOK_ECHO): this.
	Use string instead of token names when possible.
	* src/parser/bison/utoken.l: Adjust.
	* src/parser/uparser.hh, src/parser/uparser.cc (UFlexer):
	Remove, useless.

2006-12-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Revert former change.
	* src/uexpression.cc: const_cast strstr's return value. It is needed
	  on Windows/VC++ where strstr is overloaded: when one of its
	  arguments is const, both are const and the return value is also
	  const.

2006-12-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	UASyncCommand is an UCommand.
	In my quest to remove evil old-style C casts from the code, I noticed
	that sometimes, an UASyncCommand* gets casted in an UCommand*. This is
	plain wrong since UASyncCommand doesn't inherit UCommand. Worse: the
	resulting UCommand* could be used to call getTag method and this
	method doesn't exist in UASyncCommand. Since only UCommand_AT and
	UCommand_WHENEVER use UASyncCommand and since they used to inherit
	both UCommand and UASyncCommand, I fixed this by making UASyncCommand
	inherit UCommand and by making UCommand_{WHENEVER,AT} inherit only
	UASyncCommand. Now it is safe to use an UASyncCommand in the context
	of an UCommand.

	* src/ucommand.hh: Don't include uasynccommand.hh.
	  (UCommand_AT, UCommand_WHENEVER): Move to...
	* src/uasynccommand.hh: Here.
	  (UASyncCommand): Inherit from UCommand.
	  (UCommand_AT, UCommand_WHENEVER): Inherit from UASyncCommand.

	* src/ucommand.cc,
	* src/uasynccommand.cc: Fix initialization lists accordingly.

	* src/uatcandidate.cc,
	* src/uvariablelist.cc,
	* src/parser/bison/ugrammar.y,
	* src/ufunction.cc,
	* src/uobject.cc,
	* src/uvariable.cc,
	* src/uvariablename.cc: Fix includes.
	* src/uexpression.cc: Ditto + remove formerly invalid (now useless)
	  casts.

	* src/ustring.cc: Remove useless casts.
	* src/uconnection.cc: Ditto + rewrite unsafe upward casts using
	  dynamic_cast and assert when dynamic_cast fails.

	* src/uvariablename.hh,
	* src/ughostconnection.cc: Aesthetic change.

2006-12-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	More restyling.
	* src/ubinary.cc,
	* src/ucommand.cc,
	* src/ughostconnection.cc,
	* src/uqueue.cc,
	* src/ustring.cc,
	* src/usystem.cc,
	* src/uvalue.cc: Use static_cast where possible. static_cast is ugly
	  and makes the code harder to read, but it's safer and it's the price
	  to pay when you deal with unsafe C functions when you should be
	  using high level C++ abstractions.

2006-12-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Restyle.
	* src/Makefile.am,
	* src/uast.hh,
	* src/ucommand.hh,
	* src/uexpression.cc,
	* src/uvariable.cc,
	* src/ustring.hh: Remove trailing whitespaces.

	* src/ueventinstance.cc,
	* src/uasyncregister.cc,
	* src/uvalue.cc,
	* src/ueventcompound.cc,
	* src/uasynccommand.cc,
	* src/ueventmatch.cc: Use libport/cstdio.

	* src/uvar.cc: Remove unecessary parenthesis.

2006-12-23  Akim Demaille  <demaille@gostai.com>

	Update tests
	* src/uexpression.cc: Simplify error message.

2006-12-23  Akim Demaille  <demaille@gostai.com>

	More specific errors
	* src/uexpression.cc: For "load" and "exec".

2006-12-23  Akim Demaille  <demaille@gostai.com>

	More sendf
	* src/ucommand.cc: Use more sendf than send.

2006-12-23  Akim Demaille  <demaille@gostai.com>

	Fix multiple definitions
	* src/uast.hh (UAst::UAst): inline the implementation.

2006-12-23  Akim Demaille  <demaille@gostai.com>

	Simplify UCommand uses
	* src/ucommand.cc: Don't qualify when used by the definer.
	* src/uconnection.cc: Fix C++ -> C of strings.

2006-12-23  Akim Demaille  <demaille@gostai.com>

	Update UConnection::sendf
	* src/uconnection.hh, src/uconnection.cc (sendf): Take a string, not
	a char*.
	Add one for va_list.
	* src/ucommand.hh, src/ucommand.cc: Adjust.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Add location to UCommands
	* src/uast.hh: New.
	* src/Makefile.am: Adjust.
	* src/ucommand.hh (UCommand): Derive from UAst.
	Adjust all dependencies.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Update test framework
	* configure.ac: Adjust.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Store all the parsed file names
	* src/parser/uparser.hh, src/parser/uparser.cc (files, files_):
	New.
	(filename_): Now a pointer.
	* src/parser/bison/ugrammar.y: Let the locations' file names be
	const.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Coding style changes
	* src/ucommand.cc: here.
	(kind): New.
	Use it.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Less headers
	* src/userver.hh: Do not include ubinder.hh to lighten the
	dependencies.
	* src/ucommand.cc, src/uconnection.cc, src/uobj.cc,
	* src/uvariable.cc: do it.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Update tests
	* Makefile.am: Fix.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Missing include
	* src/uvariable.cc (ubinary.hh): Include it.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Prepare for new tests/
	This checkin probably does not work, but is needed to serialize
	complex svn directory changes.
	* tests: Remove.
	Will be replaced by an svn:externals onto urbivalid.
	* configure.ac: tests/ is now a package, not a simple subdir.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Less includes in headers
	* src/uobj.hh, src/ucommand.hh: Remove several includes.
	* src/parser/bison/ugrammar.y, src/ucommand.cc, src/uconnection.cc,
	* src/uexpression.cc, src/uobj.cc, src/uvalue.cc:
	Add the missing includes.
	Rename iterators.
	Formatting changes.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Simplifications
	* src/ucommand.hh: Make private most attributes.
	(copybase): Return the modified argument to please the call sites.
	The previous return value was *never* used.
	(nbval): Remove, unused.
	* src/ucommand.cc: Adjust.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Let variables be variables
	not attributes...
	* src/ucommand.hh, src/ucommand.cc (tmpeval): Remove.
	(v): New local variable in several places.
	Also, factor common code.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Minor changes
	* src/ucommand.cc, src/uconnection.cc, src/uconnection.hh: here.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Restyle
	* src/ucommand.cc: here.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Refactor
	* src/ucommand.cc: A lot of simple by very effective
	simplifications.
	Some are really absurd, reading the patch is encouraged if
	you need a laugh.

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Add some workarounds for bug #114.
	* src/parser/bison/ugrammar.y: Work around the fact that a
	  taggedcommand can be a command, a command can be an instruction, and
	  instruction can be empty (and a NULL pointer). Some NULL pointers
	  in the AST happen to be fatal for the kernel. Report a parse error
	  for those.

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Remove an unsafe cast.
	* src/parser/bison/ugrammar.y: Remove an unsafe cast from UCommand* to
	  UCommand_TREE*. Use dynamic_cast instead.

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Formatting changes.
	* src/parser/bison/ugrammar.y: Clean coding-style. Remove useless C
	 casts excepted where they are necessary to pick up an overload (in
	 this case: Use static_cast instead).

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Leak less memory when adding an alias.
	* src/userver.cc (UServer::addAlias): Leak only a string (char*, not
	  std::string) instead of leaking that string plus an UString.

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix initialization order and code cleanup.
	* src/userver.cc (ctor): Fix initialization order.
	  Some code cleanup (including using ++iterator instead of iterator++
	  where possible).

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix includes.
	* src/ucommand.hh: Move cstdarg to.
	* src/ucommand.cc: ... Here.
	* src/userver.hh: Include cstdarg.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Clean up
	* src/ucommand.cc (debug, DEBUG_ATTR, to_string): New.
	(nodeType_foreach, nodeType_for, nodeType_loopn): Merge into...
	(nodetype): this.
	Extend for WHILE.
	Use them all.
	Remove useless parens.
	Rename iterators.
	Shorten scopes.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Clean up
	* src/ubinder.hh, src/ubinder.cc: Here.
	Use simple iterator names.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	debug (va_list)
	* src/userver.hh, src/userver.cc (debug): One more version,
	taking a va_list.

2006-12-21  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Add a dirty workaround for bug #113.
	* src/uconnection.cc (UConnection::received): Here.

2006-12-21  Akim Demaille  <demaille@gostai.com>

	buffer_t
	* src/ucommand.cc (buffer_t): New.
	Use it.
	(tmpbuffer): Rename as...
	(buf): this.
	Let's keep the names short.
	* src/ucommand.hh (MAXSIZE_TMPMESSAGE): Remove.
	Let's keep the headers simple.

2006-12-21  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix CLEANFILES.
	* Makefile.am,
	* src/Makefile.am (CLEANFILES): Add vc80.pdb (VC++ puts the equivalent
	  of the debug stuff generated by -g in this file).

2006-12-20  Jean-Christophe Baillie  <baillie@gostai.com>

	urbivalid-up.

2006-12-20  Jean-Christophe Baillie  <baillie@gostai.com>

	fix small bug in speed:0 modified assignment.
	* src/ucommand.cc: fix behavior. No more 0=0.0001 ugly stuff.

2006-12-20  Jean-Christophe Baillie  <baillie@gostai.com>

	Fix ticket [111].
	fix synchronous assignment problem with add mode.
	* src/ucommand.cc: use previous value as startvalue to insure that it
	will remain unchanged between several assignments during the same
	cycle.

2006-12-20  Jean-Christophe Baillie  <baillie@gostai.com>

	formatting change
	* src/ucommand.cc: done.

2006-12-20  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Use libport/cstdio.
	* src/ucommand.cc,
	* src/uconnection.cc,
	* src/uexpression.cc,
	* src/uobj.cc,
	* src/uobject.cc,
	* src/userver.cc,
	* src/usystem.cc,
	* src/uvariable.cc,
	* src/uvariablename.cc: Here.

2006-12-20  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix include.
	* src/uvalue.hh: Fix typo.

2006-12-20  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Add missing include.
	* src/uvalue.hh: include ref-pt.hh from libport.

2006-12-20  Akim Demaille  <demaille@gostai.com>

	Include cstdarg
	* src/uconnection.cc: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	UConnection::sendf
	* src/uconnection.hh, src/uconnection.cc (UConnection::sendf): New.
	* src/ucommand.cc, src/userver.cc, src/uvariablename.cc:
	perl -0 -pi -e 's/char (\w+)\[([^\]]+)\];
	\s*snprintf\s*\(\1,\s*\2,\s* (.*?)\);
	(\s*connection->send)\(\1,\s*(.*?)\);/$4f ($5, $3);/gms' src/*c
	Plus fixes by hand when it matched too well.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Simplifications
	* src/userver.cc: Use C++ like ctors.
	Someone will have to clean the warnings.
	And maybe continue to improve this ctor.
	Also, use simple iterator variable names (e.g., i).

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Use an impossible name for removeFunction
	* src/userver.cc (UServer::UServer): here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Put back the old definition of FREEMEM
	* src/utypes.hh: here.
	The test timed out on Windows.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Restore the newest definition of FREEMEM
	* src/utypes.hh: Here.
	Up till now we had 13/22 errors on Windows.  I suspect we
	still do after this patch.  Then we'll have to study the uses
	of ADDMEM, that will be the only remaining culprit.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Functions own their name
	* src/ufunction.cc, src/ufunction.hh (funname): Now an UString.
	Private.
	* src/ucommand.cc, src/userver.cc: Adjust.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Formatting and parens changes
	* src/ufunction.hh, src/userver.cc: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Restore the newest LIBERATE/ADDOBJ/FREEOBJ
	* src/utypes.hh: here.
	The problem (early failures on Aibo and Windows) is probably
	with the definition of ADDMEM and FREEMEM, not these.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Remove old GCC 2 hacks
	* src/ucommand.cc, src/uvalue.cc: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uqueue.cc: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Use libport/ref-pt.hh
	* src/fwd.hh: Complete.
	* src/parser/bison/ugrammar.y: Adjust.
	* src/ucallid.cc,
	* src/ucallid.hh,
	* src/ucommand.cc,
	* src/ucommand.hh,
	* src/uconnection.cc,
	* src/ueventcompound.hh,
	* src/uexpression.cc,
	* src/unamedparameters.cc,
	* src/uobj.cc,
	* src/uobject.cc,
	* src/userver.cc,
	* src/utypes.hh,
	* src/uvalue.cc,
	* src/uvalue.hh,
	* src/uvariable.cc,
	* src/uvariablelist.cc:
	Ditto.
	Remove includes from the hh files, sort those in cc files.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Restore old ADDMEM macros
	* src/utypes.hh: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	ucomplaints.*
	* src/ucomplaints.cc, src/ucomplaints.hh: New.
	* src/ucommand.cc, src/uconnection.cc, src/uconnection.hh,
	* src/utypes.hh, src/Makefile.am: Adjust.

2006-12-19  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Code clean-up.
	* src/ucommand.cc: Remove useless casts. Replace unsafe casts by
	  dynamic_cast.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Don't define tmpbuffer globally
	* src/ucommand.hh, src/ucommand.cc: Define it where used.
	* src/uvariablename.cc: Adjust.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Update uobject

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Shorten scopes
	* src/ucommand.cc (UCommand_ASSIGN_VALUE::execute): here.

2006-12-19  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Don't fail if valgrind was requested but can't be found.
	* tests/check-file: .

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Warn about memory instead of corruptions
	* src/uconnection.cc (received): Use a more appropriate warning here.

2006-12-19  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix test suite.
	* tests/check-file: Add missing `eval's.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Remove THESERVER
	* src/network/bsdnet/connection.cc,
	* src/network/bsdnet/network.cc: Use ::urbiserver.

2006-12-19  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Add support for Valgrind.
	* Makefile.am (maintainer-check, valgrind-check): New.
	* tests/check-file: Run valgrind if USE_VALGRIND or WITH_VALGRIND is a
	  non empty environment variable.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Adjust to libport::hash_map_type
	* src/utypes.hh: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Remove Wno-effc++
	* configure.ac: here.

2006-12-19  Jean-Christophe Baillie  <baillie@gostai.com>

	update uobject externals

2006-12-19  Jean-Christophe Baillie  <baillie@gostai.com>

	strMorph(s) will morph the UCommand into the command written
	in s, using 'exec' as an intermediary to handle s.

	code factoring
	* src/ucommand.cc: use strMorph to factor string->command code.

2006-12-19  Jean-Christophe Baillie  <baillie@gostai.com>

	Support for kernel system messages has been added through the USystem
	class that uobjects can inherit. This USystem class is a generic proxy
	to kernel informatio and kernel messages, only usable in pluggin mode.

	Read the documentation in usystem.hh for application on the
	NEW_CHANNEL kernel message channel and usage in UCommand_NEW to catch
	failed 'new' attempts (modif added for mefyl).

	Add support for kernel system messages with USystem, application to
	* src/Makefile.am: add usystem to the build process.
	* src/fwd.hh: declare USystem.
	* src/ucommand.cc: add support for NEW_CHANNEL messages and add
	factoring code with 'strMorph'.
	* src/ucommand.hh: add strMoprh and sysCall flag.
	* src/userver.cc: init 'systemObjects', vector of registered USystem
	objects lists. The vector index is the message channel.
	* src/userver.hh: add systemObjects.
	* src/usystem.cc: New.

2006-12-15  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Remove extra qualification.
	* src/uexpression.hh (eval_EXPR_FUNCTION): Don't declare with the
	 'UExpression::' qualification because it chokes on g++ 4.1.

2006-12-15  Akim Demaille  <demaille@gostai.com>

	eval_EXPR_FUNCTION
	* src/uexpression.hh, src/uexpression.cc (eval): Extract
	the handling of EXPR_FUNCTIONs to...
	(eval_EXPR_FUNCTION): here.
	No other changes (in spite of what the diff may look like).

2006-12-15  Akim Demaille  <demaille@gostai.com>

	EVAL_EXPR_BIN_BOOLEAN
	* src/uexpression.cc: New.
	Use it

2006-12-15  Akim Demaille  <demaille@gostai.com>

	More scope reduction
	* src/uexpression.cc: Here.

2006-12-15  Akim Demaille  <demaille@gostai.com>

	Shorten scopes
	* src/uexpression.cc: Here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Shorten scopes
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Shorten scopes
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	reuse name from UBlendType
	* src/uexpression.cc: here.
	* src/ucommand.cc: Formatting changes.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Put UCommandType in UCommand
	* src/utypes.hh (UCommandType): Rename as...
	* src/ucommand.hh (UCommand::Type): this.
	Adjust all callers.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Shorten scopes
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Shorten scopes
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Factor binaries
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Do not allow string order-comparison
	* src/uexpression.cc: Here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Upgrade ENSURE_COMPARISON
	* src/uexpression.cc (ENSURE_COMPARISON): Be given e1 and e2.
	Adjust callers.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	EVAL_EXPR_COMPARISON
	* src/uexpression.cc: New.
	Use it.
	Shorten scopes.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	eval_EXPR_VARIABLE
	* src/uexpression.hh, src/uexpression.cc (eval_EXPR_VARIABLE): New.
	(eval): Extracted from here.
	(devicename, methodname): Remove, unused.
	(errSize): Remove, used, but useless.
	(errorString): Use a tighter scope.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Shrink the scope of ret
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Add braces
	* src/uexpression.cc: in this monster.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/parser/bison/ugrammar.y: here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	windows.hh
	* src/console.cc: Adjust.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Clean UExpressions
	* src/utypes.hh (UExpressionType): Move to...
	* src/uexpression.hh, src/uexpression.cc (UExpression::Type): Here.
	Adjust all dependencies.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/ucommandqueue.cc: here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Update uobject

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Include cassert
	* src/parser/uparser.cc: here.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Fix location tracking
	* src/parser/uparser.cc, src/parser/uparser.hh (UParser::loc_):
	New.
	* src/parser/bison/ugrammar.y: Use it.
	Formatting changes.
	Remove useles includes.
	* tests/Makefile.am: One less expected failure.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Match EOF one by one
	* src/parser/bison/utoken.l: To avoid counting two eol on \n\r for
	instance.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Update uobject
	* src/Makefile.am: Adjust.
	* src/utypes.hh: Include utypes-common.hh.
	Import UBlendType definitions.
	* src/uvariable.hh: UBlend -> UBlendType.
	* src/uvar.cc: Remove what is done elsewhere.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Don't declare static const int in declarations
	* src/network/bsdnet/connection.hh: Use enums.

2006-12-14  Akim Demaille  <demaille@gostai.com>

	Remove version.hh.in
	* src/version.hh.in: Remove.
	We use the one in build-aux.

2006-12-13  Akim Demaille  <demaille@gostai.com>

	Report file names in parse errors
	* src/parser/uparser.cc, src/parser/uparser.hh (filename_): New.
	* src/parser/bison/ugrammar.y: Use it to initialize @$.
	* tests/check-file: Normalize the path of included files
	to avoid difference due to builddir, srcdir etc.

2006-12-13  Akim Demaille  <demaille@gostai.com>

	Nuke a few useless includes
	I have a small computer, and I'm tired of wasted cycles.
	* src/fwd.hh: Complete and sort.
	* src/parser/bison/ugrammar.y, src/ucommand.cc, src/uconnection.hh,
	* src/ueventhandler.cc, src/uexpression.cc, src/ughostconnection.cc,
	* src/uobj.cc, src/userver.cc, src/userver.hh:
	Remove a few includes from userver.hh, since it's included by
	virtually all the files.
	Adjust the missing dependencies in *.cc files.

2006-12-13  Akim Demaille  <demaille@gostai.com>

	Minor parser cleanups
	* src/parser/uparser.cc, src/parser/uparser.hh (parser_type): New.
	Use it.
	(uflexer_): Rename as...
	(scanner_): this.
	(scan): Remove.
	* src/parser/bison/ugrammar.y: Adjust: directly use the UParser's
	scanner.

2006-12-13  Akim Demaille  <demaille@gostai.com>

	More %printer
	* src/parser/bison/ugrammar.y: For <val>.

2006-12-13  Akim Demaille  <demaille@gostai.com>

	More concrete tokens
	* src/parser/bison/ugrammar.y: here.

2006-12-13  Akim Demaille  <demaille@gostai.com>

	Add tests for load
	* src/console.cc: Support URBI_PATH.
	* src/userver.cc (loadFile): Reduce scopes.
	* tests/Makefile.am (TEST_ENVIRONMENT): New.
	* tests/check-file: Also accept XXXXXXX "prompts".
	Pass URBI_PATH to find files to load.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Remove UCommand_LOAD
	* src/ucommand.cc, src/ucommand.hh: It has been obsoleted by the
	previous patch.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Merge load into exec
	* src/uexpression.cc: Merge the handling of load into that of exec.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	UServer::path
	* src/userver.cc, src/userver.hh (path_type, path, find_file):
	New.
	(loadFile): No longer pure virtual, provide an effective default
	version.
	* src/console.cc (loadFile): Remove, this version is now in the
	kernel.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	include fstream
	* src/parser/uparser.cc: here.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Add file parsing
	* src/parser/uparser.cc, src/parser/uparser.hh (parse_): New.
	(process): Use it.
	Add an overloaded version meant to parse file, not a loaded buffer.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	UParsers know their UConnection
	* src/parser/uparser.cc, src/parser/uparser.hh (UParser::connection):
	New.
	(UParser::UParser, UParser::process): Adjust.
	* src/ucommand.cc, src/uexpression.cc, src/userver.cc: Adjust.
	* src/uconnection.cc, src/uconnection.hh: Pass the connection
	to the parser ctor.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/ucommand.hh, src/userver.cc: here.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	White space changes
	* src/ucommand.cc: here.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	UDEBUG_EXPR
	* src/uexpression.cc: New.
	(UExpression::print): Use it.
	Should be used more widely.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	One parser per connection
	* src/userver.cc, src/userver.hh: No longer aggregate a parser.
	* src/uconnection.cc, src/uconnection.hh (parser_, parser): New.
	(lastloc): Move to...
	* src/parser/uparser.hh: here.
	* src/parser/bison/ugrammar.y: Adjust.
	* src/ucommand.cc, src/uexpression.cc: Adjust to find the connection's
	parser, not the server's.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Add printers for strings in the parser
	* src/ustring.hh (operator<< (ostream, UString)): New.
	* src/parser/bison/ugrammar.y: Add %printer for UString value.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uconnection.cc: here.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Return access to members by reference, not pointers
	* src/uconnection.hh (recvQueue): Return a reference, to make
	it clear the ownership is not given away.
	* src/console.cc, src/userver.cc: Adjust.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Fix the previous checkin
	* src/uconnection.cc: Propagate the fact that queues are no
	longer pointers.
	* src/uvalue.cc: Ditto.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Aggregate UQueues in UConnection
	* src/uconnection.cc, src/uconnection.hh: Here.
	Adjust ctor and dtor.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	message for warnings
	* src/uconnection.cc (error_message): Rename as...
	(message): this.
	(message): New overloaded version for warnings.
	(UConnection::warning): Use it.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	error_message
	* src/uconnection.cc (error_message): New.
	Handle UERROR_MEMORY_WARNING.
	(UConnection::error): Use it, it was extracted from here.
	Simplify.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uconnection.cc, src/uobject.cc: Here.

2006-12-12  Razik Yousfi  <yousfi@gostai.com>

	Remove useless attributes.
	* src/uvariablename.hh: Remove useless attributes.
	* src/uvariablename.cc: Use local variables.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Don't be afraid to pass static strings to send
	* src/uexpression.cc: here, instead of first saving them
	in errorString.
	Remove one definition of errorString that is now useless.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uexpression.cc: Also, reduce some scopes.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Remove unused attribute
	* src/ucommand.hh (hmi): Remove.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Simplify the logic of UCommand_LOAD::execute
	* src/ucommand.cc: here.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	UParser::*_type
	* src/parser/uparser.hh (token_type, semantic_type)
	(location_type): New.
	Use them.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Prefix (some of) the tokens
	The token "in" was mapped to IN which is used somewhere on
	Windows.  Rather than fighting against this, use names that
	are less dangerous by prefixing then with TOK_.
	More should be needed, but at least that fixes the portability
	issue for now.
	* src/parser/bison/ugrammar.y: here.
	Use concrete names rather than abstract token names.
	More propagation is needed.
	* src/parser/bison/utoken.l: Adjust.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Simplify some piece of crap
	I thought I had seen it all checking student code at EPITA...
	* src/uvariablename.cc, src/uvariablename.hh (hmi2): Don't
	make it a class member, since it's only used as a local variable.
	(getVariable): Simplify.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Simplify scanGroups
	* src/ucommand.cc: here, using variable aliases.
	It should be noted that the test suite does not seem to
	exercise this part.  Someone should write some tests for it.
	* src/uvariablename.cc: Reduce variable scope.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Sort tokens
	* src/parser/bison/utoken.l, src/parser/bison/ugrammar.y:
	Sort tokens.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	UParser::result
	* src/parser/uparser.cc, src/parser/uparser.hh: Remove, unused.
	(IN): Remove this #undef coming out of the blue.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	UParser::errorMessage
	* src/parser/uparser.cc, src/parser/uparser.hh,
	* src/ucommand.cc, src/uconnection.cc,
	* src/uconnection.hh, src/uexpression.cc:
	(errorMessage): Move to...
	(UParser::errorMessage): here.
	(UParser::process): Simplify.
	Don't use new when there is no reason to.
	Remove initialization perfomed both by process and its callers.
	Using "private" might help in the future...
	Introduce variable shortcuts to improve the readability.

2006-12-08  Razik Yousfi  <yousfi@gostai.com>

	Remove dead code.
	* src/uasynccommand.hh: Remove dead code.
	* src/uasyncregister.hh: Idem.

2006-12-07  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Only MS VC++ doesn't have snprintf.
	But MinGW has it.
	* src/ucommand.cc: Fix accordingly.

2006-12-07  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	snprintf doesn't seem to exist on Win32.
	* src/ucommand.cc: But there is a _snprintf... so use it instead.

2006-12-07  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fixes for Windows.
	* src/network/bsdnet/connection.cc: Use libport's windows.h.
	* src/console.cc: Ditto.
	* src/network/bsdnet/connection.hh: Aesthetic change.
	* src/network/bsdnet/network.hh: Use libport's network.h.
	* src/network/bsdnet/network.cc: Fix includes.
	* src/uconnection.cc: Fix initialization order.

2006-12-07  Razik Yousfi  <yousfi@gostai.com>

	Use ucopy in copy methods.
	* src/uexpression.hh: Add new constructor.
	* src/uexpression.cc,
	* src/uvalue.cc,
	* src/uvariablelist.cc: Use ucopy.
	* vcs/local.rb: Add yousfi@gostai.com.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Some cleanup
	This code is truly depressing, as soon as one wants to improve
	something, the impedance is so high that everything either falls
	apart, or require immediate care.  Believe it or not, I was
	working on error messages from the parser!
	* src/ucommand.cc, src/ucommand.hh, src/uconnection.cc,
	* src/uexpression.cc, src/ughostconnection.hh: Several
	changes I no longer feel like documenting, which is bad.
	Just as the code.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	uvar-common.cc
	* src/uvar.cc: Remove the code now in uvar-common.cc.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Clean the scanner
	Now the scanner is tracking location accurately when
	there are C comments.
	* src/parser/bison/utoken.l (SET_VALP_STR, RETURN_STR_TOKEN)
	(RETURN_VAL_TOKEN, RETURN_NUM, RETURN_FLAG, RETURN_FLAGTIME)
	(RETURN_TIMEVALUE): New.
	Use them to factor and improve the code.
	(SC_C_COMMENT): New, use it to handle C comments.
	(EOL, BLANKS): New abbrev, use them.
	Put quotes around patterns, to improve readability and
	pretty-printing.
	As usual, remove useless braces and parens.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	UVar::invariant
	* src/uvar.cc: Implement it, and use it.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Formatting
	* src/uvalue.cc: here.
	And use case instead of if.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Kill more useless parens
	* src/console.cc,
	* src/ubinder.cc,
	* src/ucommand.cc,
	* src/ufunction.cc,
	* src/uobject.cc,
	* src/uqueue.cc,
	* src/ustring.cc,
	* src/ustring.hh,
	* src/uvalue.cc,
	* src/uvariable.cc: Remove useless parens.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	update externals
	* Makefile.am (ACLOCAL_AMFLAGS, SVN_EXTERNALS): Add sdk.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Simplify UBinder
	* src/ubinder.hh, src/ubinder.cc: Use C++ style ctors.
	(id): A UString, not a pointer.
	(monitors_type): New, use it.
	Change almost all signatures to pass const UString& instead of
	UString*.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/parser/bison/ugrammar.y: here.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Fix LIBERATE
	* src/utypes.hh: Restore the original test.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Fix deep_clear issues
	* src/ucallid.cc: Swap mem initializers to silent a warning.
	* src/ueventcompound.cc, src/ueventhandler.cc: Fix/clean the
	uses of deep_clear.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	use libport::deep_clear
	* src/ubinder.cc, src/ubinder.hh, src/ucommand.cc,
	* src/uconnection.cc, src/ueventcompound.cc, src/ueventhandler.cc,
	* src/ueventinstance.cc, src/ueventmatch.cc, src/uobj.cc,
	* src/uobject.cc, src/userver.cc:
	here.
	And run restyle.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uatcandidate.cc: here.
	Shorten scopes.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Clean UCallid
	* src/ucallid.hh, src/ucallid.cc (fun_id, self_id): Be real
	UString instead of pointers.
	(stack, fun_id, self_id, root): Private.
	Formatting changes.
	Use libport::deep_clear.
	Modernize ctor.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/ucommand.cc: Here.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/utypes.hh: Make it cuter and more factored.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Cleanup UStrings
	A *lot* more is needed.  For instance it is still unclear
	whether str_ can be equal to 0 or not.
	* src/ustring.hh, src/ustring.cc: Add const where appropriate.
	Add more construtors, including from std::string and copy ctor.
	Simplify the code.
	(unArmor, fastArmor): Rename as...
	(un_armor, fast_armor): these.
	Declare the private functions are private.
	* src/parser/bison/utoken.l: Adjust.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Fix distcheck for Windows
	* src/parser/bison/bison.mk: Remove the unexpected back up copy.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Simplifications
	* src/uatcandidate.cc,
	* src/ucommand.cc,
	* src/uexpression.cc,
	* src/ufunction.hh,
	* src/userver.cc,
	* src/utypes.hh,
	* src/uvariablelist.cc,
	* src/uvariablename.cc:
	Formatting changes.
	No need to cast 0, it has all the pointer types.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	ucopy.hh, formatting changes.
	* src/ucopy.hh: New.
	* src/Makefile.am: Adjust.
	* src/ucommand.cc, src/uvariablename.cc: Ditto.

	* src/uatcandidate.cc, src/ucommand.hh, src/uconnection.cc,
	* src/uexpression.cc, src/ufunction.hh, src/unamedparameters.cc,
	* src/unamedparameters.hh, src/uobject.cc, src/uqueue.cc:
	Formatting changes.

	* src/uobject.cc: Fix a warning by not naming useless arguments.

2006-11-28  Matthieu Nottale  <nottale@gostai.com>

	uobject up

2006-11-27  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fixes for win32/MSVC++.
	* src/network/bsdnet/network.hh,
	* src/network/bsdnet/network.cc,
	* src/network/bsdnet/connection.cc: Include config.h. Define
	  _WIN32_WINNT before including winsock2.h.

	* src/parser/bison/bison.mk: Fix the output generated by flex: Do not
	  include unistd.h if WIN32 is defined. This requires to include
	  config.h but we can't do it from utoken.l since config.h must be
	  included before we attempt to include unistd.h and this occurs
	  at the very beginning of the file, where we don't have control.

2006-11-27  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #77
	* src/ucommand.cc: add missing event deletion in UCommand_EMIT
	destructor + code refactoring.
	* src/ucommand.hh: add removeEvent method.
	* src/utypes.hh: nothing.

2006-11-25  Matthieu Nottale  <nottale@gostai.com>

	Bugfix <TITLE> uobject up
	* src/ucommand.cc: Fix a bug in ucommand_assign::execute.
	* src/uobject.cc: Implement new "cast" overload to const char *.

2006-11-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix CLEANFILES.
	* tests/Makefile.am: Use '+=' because it's already initialized.

2006-11-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix distcheck.
	* Makefile.am (dist-hook): New: remove remaining .svn files.
	* tests/Makefile.am (check-TESTS): Fix the case where srcdir ==
	  buildir.
	  (EXTRA_DIST, CLEANFILES): New.

2006-11-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	List the tests that fail in XFAIL_TESTS.
	* tests/Makefile.am: Here.

2006-11-23  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix bug #84.
	* src/parser/bison/ugrammar.y: Raise parse errors in cases where the
	  then-part of an if-else or the at-part of an at-onleave is empty.
	  eg: if (true) else whatever;
	      at (true) onleave whatever;
	* vcs/local.rb: Add myself.

2006-11-23  Matthieu Nottale  <nottale@gostai.com>

	Fix timeout command behavior.
	* src/ucommand.cc: Fix timeout command morphing: command can last less than timeout.

2006-11-23  Matthieu Nottale  <nottale@gostai.com>

	Fix incorrect bin header conversion
	* src/uvalue.cc: Fix empty stream check.

2006-11-23  Matthieu Nottale  <nottale@gostai.com>

	Fix a segfault(assert fail) in uconnection.cc
	* src/ucommand.cc: Add missing initialisation of runlevel1 in UCOMMAND_TREE ctor.

2006-11-23  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix calls to usleep for Windows.
	* src/console.cc: Because 1/1000 = 0 and Sleep(0) might not work.

2006-11-23  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Install version.hh.
	This will be extremely helpful in order to know which version is
	installed (especially for the buildfarm so that it knows which version
	of the kernel it's using when compiling an engine/core/sdk/you name
	it).
	* src/Makefile.am: Here.

2006-11-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Use Sleep on Windows.
	* src/console.cc: Here.

2006-11-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix includes.
	* src/console.cc: include unistd.h for usleep.

2006-11-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix initialization orders in ctors.
	* src/ucommand.cc,
	* src/uvalue.cc,
	* src/uvariablename.cc: Here.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Simplify
	* src/uvalue.cc (echo): The code for void.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Restyle pointers
	* src/uatcandidate.cc,
	* src/ucommand.cc,
	* src/ueventhandler.cc,
	* src/uexpression.cc,
	* src/uobject.cc,
	* src/uvalue.cc:
	Use build-aux/reindent.
	* src/uvalue.cc (echo): Deeper overhaul: use switch, for God
	sake!

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Return style.
	* src/uqueue.hh, src/utypes.hh, src/uvariablename.hh: here.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Normalize returns
	* src/ubinder.cc,
	* src/ucommand.cc,
	* src/ucommandqueue.cc,
	* src/uexpression.cc,
	* src/ufunction.cc,
	* src/ughostconnection.cc,
	* src/unamedparameters.cc,
	* src/uvalue.cc,
	* src/uvar.cc,
	* src/uvariable.cc,
	* src/uvariablelist.cc,
	* src/uvariablename.cc: Run build-aux/reindent.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Coding style
	* src/ucommand.cc, src/uconnection.cc, src/uexpression.cc: here.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	:) :) :)
	* src/console.cc: This is C++, not Perl or sh.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Let uconsole accept args
	* src/console.cc: Use argv[1] if given.
	* tests/check-file: Feed uconsole directly, not via stdin,
	since it behaves weirdly on Tsuna's machine.

2006-11-21  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Add a sanity check.
	* src/uconnection.cc: Make sure that stack isn't empty before popping
	  it. Some code cleanup.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Update libport

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/memorymanager/memorymanager.cc: here.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Coding style changes
	* src/network/bsdnet/connection.cc,
	* src/network/bsdnet/network.cc: Run reindent.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Update externals
	* Makefile.am: Include init.mk.
	* tests/Makefile.am: Use SVN_EXTERNALS_PROXY.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	More code formatting changes
	* src/ucommand.cc, src/uconnection.cc, src/uexpression.cc,
	* src/userver.cc, src/uvalue.cc, src/uvariable.cc: Here.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Run reindent
	* src/ucommand.cc, src/uexpression.cc, src/unamedparameters.cc,
	* src/uqueue.cc, src/uqueue.hh, src/uvalue.cc: Formatting changes.

2006-11-20  Akim Demaille  <akim.demaille@gmail.com>

	Use svn-externals.mk
	* Makefile.am, src/Makefile.am, tests/Makefile.am: here.

2006-11-20  Akim Demaille  <akim.demaille@gmail.com>

	Formatting changes
	* src/ubinary.hh, src/ucommand.hh: here.

2006-11-20  Akim Demaille  <akim.demaille@gmail.com>

	Coding style changes
	* src/ubinary.cc, src/ucommand.cc, src/ucommandqueue.cc,
	* src/uconnection.cc, src/ufunction.cc,
	* src/ughostconnection.cc, src/unamedparameters.cc,
	* src/uobj.cc, src/uqueue.cc, src/userver.cc, src/uvalue.cc,
	* src/uvariable.cc, src/uvariablelist.cc,
	* src/uvariablename.cc:
	White space changes.
	Initialize members a la C++.

2006-11-18  Jean-Christophe Baillie  <baillie@gostai.com>
	rewrite UConnection sending mechanism.

	UConnection::flush is introduced to be able to delay the effective
	sending of the buffer into the connection. Functions like 'sendc' do not
	flush the buffer, whereas 'send' does.

	'sendPrefix" now puts a marker in the circular buffer before the
	prefix and if anything goes wrong in the subsequent sending, the
	circular buffer queue can "revert" to this marker. This will allow now
	to have atomic message sending, preventing partial sending of a
	header and then failure of the body (large binary for example). The
	body failure will trigger a call to 'revert' and cancel the whole
	message out of the circular buffer (and also lock the queue with
	locked_ so that next attempts will also fail, until we cross another
	'sendPrefix'). Since the above flush-based mecanism ensures than nothing
	has been sent through the network yet, this cancelation is valid. Both
	flushing and marker+reverting features fix the bugs reported in
	ticket #25 and #47.

	Proper testing on Aibo should be done to make sure the tickets are
	closed (not possible for the moment due to compile pbs)

	* src/network/bsdnet/connection.cc: remove the call to block(). It is
	not clear why this call was made and why it did not impact the
	performances of the previous versions.
	* src/ucommand.cc: support for the flushing mecanism.
	* src/uconnection.cc: add sendc and flush.
	* src/uconnection.hh: define sendc and flush.
	* src/uqueue.cc: add revert/mark.
	* src/uqueue.hh: define revert and mark + mark_ and locked_.
	* src/uvalue.cc: fix proper usage of sendc vs send.
	* src/uvariable.cc: idem.

2006-11-18  Jean-Christophe Baillie  <baillie@gostai.com>

	rename system.arg into system.args.
	* src/userver.cc: done.

2006-11-18  Jean-Christophe Baillie  <baillie@gostai.com>
	The system variable 'system.arg' now gives access to a list
	corresponding to the argv[] list of the server execution command line.
	This feature is necessary for webots.

	add support for system.arg (ticket #69).
	* src/userver.cc: add UServer::main.
	* src/userver.hh: declare UServer::main.

2006-11-18  Jean-Christophe Baillie  <baillie@gostai.com>

	add support for var-prefixed args in function prototypes (#74).
	* src/parser/bison/ugrammar.y: done.

2006-11-18  Jean-Christophe Baillie  <baillie@gostai.com>

	cleanup of unnecessary parenthesis.
	* src/ucommand.cc: done.
	* src/uexpression.cc: done.
	* src/uobj.cc: done.
	* src/userver.cc: done.
	* src/uvariable.cc: done.
	* src/uvariablename.cc: done.

2006-11-17  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix typos.
	* ChangeLog: Here.
	* configure.ac: And here.

2006-11-16  Akim Demaille  <demaille@gostai.com>

	Use banners in the tests.
	* tests/check-file: here.

2006-11-16  Akim Demaille  <akim.demaille@gmail.com>

	Formatting changes
	* src/ucommand.cc: Also, prefer for to while when advisable.
	Remove spurious parens.

2006-11-15  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #70 on nameresolution with remote uobjects methods.
	* src/ucommand.cc: fix code backward compat.
	* src/ufunction.cc: define kernel::remoteFunction.
	* src/ufunction.hh: declare kernel::remoteFunction.
	* src/uobj.cc: fix searchFunction.
	* src/userver.cc: init remoteFunction.

2006-11-15  Jean-Christophe Baillie  <baillie@gostai.com>

	remove unnecessary parenthesis in tests.
	* src/uvariable.cc: done.

2006-11-15  Jean-Christophe Baillie  <baillie@gostai.com>

	fix unnecessary high level scoping in variables
	* src/uobj.cc: fix scoping.

2006-11-15  Akim Demaille  <akim.demaille@gmail.com>

	*.h -> *.hh
	* src/memorymanager/blockmemorymanager.h: Rename as...
	* src/memorymanager/blockmemorymanager.hh: this.
	* src/memorymanager/memorymanager.h: Rename as...
	* src/memorymanager/memorymanager.hh: this.
	* src/parser/uparser.h: Rename as...
	* src/parser/uparser.hh: this.
	* src/uasynccommand.h: Rename as...
	* src/uasynccommand.hh: this.
	* src/uasyncregister.h: Rename as...
	* src/uasyncregister.hh: this.
	* src/uatcandidate.h: Rename as...
	* src/uatcandidate.hh: this.
	* src/ubinary.h: Rename as...
	* src/ubinary.hh: this.
	* src/ubinder.h: Rename as...
	* src/ubinder.hh: this.
	* src/ucallid.h: Rename as...
	* src/ucallid.hh: this.
	* src/ucommand.h: Rename as...
	* src/ucommand.hh: this.
	* src/ucommandqueue.h: Rename as...
	* src/ucommandqueue.hh: this.
	* src/uconnection.h: Rename as...
	* src/uconnection.hh: this.
	* src/ueventcompound.h: Rename as...
	* src/ueventcompound.hh: this.
	* src/ueventhandler.h: Rename as...
	* src/ueventhandler.hh: this.
	* src/ueventinstance.h: Rename as...
	* src/ueventinstance.hh: this.
	* src/ueventmatch.h: Rename as...
	* src/ueventmatch.hh: this.
	* src/uexpression.h: Rename as...
	* src/uexpression.hh: this.
	* src/ufunction.h: Rename as...
	* src/ufunction.hh: this.
	* src/ughostconnection.h: Rename as...
	* src/ughostconnection.hh: this.
	* src/ugroup.h: Rename as...
	* src/ugroup.hh: this.
	* src/unamedparameters.h: Rename as...
	* src/unamedparameters.hh: this.
	* src/uobj.h: Rename as...
	* src/uobj.hh: this.
	* src/uproperty.h: Rename as...
	* src/uproperty.hh: this.
	* src/uqueue.h: Rename as...
	* src/uqueue.hh: this.
	* src/userver.h: Rename as...
	* src/userver.hh: this.
	* src/ustring.h: Rename as...
	* src/ustring.hh: this.
	* src/utypes.h: Rename as...
	* src/utypes.hh: this.
	* src/uvalue.h: Rename as...
	* src/uvalue.hh: this.
	* src/uvariable.h: Rename as...
	* src/uvariable.hh: this.
	* src/uvariablelist.h: Rename as...
	* src/uvariablelist.hh: this.
	* src/uvariablename.h: Rename as...
	* src/uvariablename.hh: this.

	* src/Makefile.am, src/parser/bison/bison.mk,
	* src/parser/bison/flex-lexer.hh, src/parser/bison/ugrammar.y: Adjust.

	* src/console.cc, src/memorymanager/memorymanager.cc,
	* src/parser/uparser.cc, src/uasynccommand.cc,
	* src/uasyncregister.cc, src/uatcandidate.cc, src/ubanner.cc,
	* src/ubinary.cc, src/ubinder.cc, src/ucallid.cc,
	* src/ucommand.cc, src/ucommandqueue.cc, src/uconnection.cc,
	* src/ueventcompound.cc, src/ueventhandler.cc,
	* src/ueventinstance.cc, src/ueventmatch.cc,
	* src/uexpression.cc, src/ufunction.cc,
	* src/ughostconnection.cc, src/ugroup.cc,
	* src/unamedparameters.cc, src/uobj.cc, src/uobject.cc,
	* src/uproperty.cc, src/uqueue.cc, src/userver.cc,
	* src/ustring.cc, src/uvalue.cc, src/uvar.cc,
	* src/uvariable.cc, src/uvariablelist.cc, src/uvariablename.cc:
	Adjust.

2006-11-15  Akim Demaille  <akim.demaille@gmail.com>

	Use reindent
	* src/uasynccommand.cc, src/uasynccommand.h,
	* src/uasyncregister.cc, src/uatcandidate.cc,
	* src/uatcandidate.h, src/ubinary.cc, src/ubinary.h,
	* src/ucommand.cc, src/ucommand.h, src/ucommandqueue.cc,
	* src/uconnection.cc, src/ueventcompound.cc,
	* src/ueventcompound.h, src/ueventhandler.cc,
	* src/ueventhandler.h, src/ueventinstance.cc,
	* src/ueventinstance.h, src/ueventmatch.cc, src/ueventmatch.h,
	* src/uexpression.cc, src/ufunction.cc, src/ufunction.h,
	* src/ughostconnection.cc, src/ugroup.cc,
	* src/unamedparameters.cc, src/uobj.cc, src/uobject.cc,
	* src/uproperty.h, src/uqueue.cc, src/uqueue.h,
	* src/userver.cc, src/userver.h, src/ustring.cc, src/utypes.h,
	* src/uvalue.cc, src/uvalue.h, src/uvar.cc, src/uvariable.cc,
	* src/uvariablelist.cc, src/uvariablename.cc,
	* src/uvariablename.h:
	Use reindent: space changes, use STREQ, use libport/cstring.

2006-11-15  Akim Demaille  <akim.demaille@gmail.com>

	Small uexpression.cc cleansing
	* src/uexpression.cc: Use reindent.
	Remove some useless parens.
	* src/ustring.h: Use appropriate C++ headers.

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Use uconsole to check the kernel
	To run the test, run "make check" (-j accepted).
	To read the logs, see _build/linux/tests/test-suite.log.
	* tests/Makefile.am, tests/check-file: New.
	* Makefile.am, README, configure.ac: Adjust.

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Use istream::read
	* src/console.cc: Use read.

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Factoring
	* src/uexpression.cc (ENSURE_TYPES_1, ENSURE_TYPES_2)
	(ENSURE_TYPES_3, ENSURE_COMPARISON): New.
	Use them.
	Various formatting changes.

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Proprify console.cc
	* src/console.cc: Finish the partial rewriting into C++.
	Unfortunately that does not make it interactive.

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Update externals

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Start reworking console.cc
	* src/console.cc: Unfinished work.

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/parser/uparser.cc, src/parser/bison/ugrammar.y,
	* src/uconnection.cc: Here.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #62 (wrong tags in 'if' command)
	* src/ucommand.cc: done.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #41, not accesschange on object attributes
	* src/uvariable.cc: add a call to UVariable::get for each attribute of
	the object.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

It is now possible to redefine a remote or plugged C++ method from within URBI
itself, while still accessing the old definition. Example:

myobj = new remoteobj;
function myobj.foo(x)
{
  remoteobj::foo(x);
  ...
};

Since local redefinitions of functions override remote/plugged definitions, the
local 'myobj.foo' will always be called, bypassing the remote version (only
accessible now via the :: construct).

	extend support of :: to uobjects
	* src/ucommand.cc: add support for :: with remote/plugged uobjects.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

Native local functions must override plugins and remote functions definition
when a name conflict occurs.
This means that it is possible to redefine a remote function written in C++
by redefining the method in URBI (and possibly redirect it to another C++
method).

	change functions evaluation priority to: native, plugged, remote
	* src/ucommand.cc: swap order of evaluation for possible function name
	match.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	add support for :: in assignments
	* src/ucommand.cc: add same support of :: for UCommand_ASSIGN_VALUE.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

The idea is to be able to call parent methods inside redefined children
methods (see NEWS and ticket #65).

	add support for :: construct (ticket #65)
	* NEWS: add description of recent changes.
	* src/parser/bison/ugrammar.y: add parsing of :: construct.
	* src/parser/bison/utoken.l: add :: token.
	* src/ucommand.cc: add support for simple method call (no uobject, no
	function. Will be done in next commit).
	* src/uvariablename.cc: add doublecolon.
	* src/uvariablename.h: add doublecolon.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	fix string armor problem (related to ticket #63
	* src/ustring.cc: add armor() function, with optimization (fastArmor).
	* src/ustring.h: add armor, fastArmor.
	* src/uvalue.cc: use armor in UValue::echo.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

A big change in this commit. The use of 'return' in a function will return and
destroy all commands still in progress in the function. The proper way to exit
a function which should keep running commands (like 'at') is to avoid using
'return' (in fact, the function does not return, since it's still running.
Logical).

This is new because in C++ this distinction wouldn't make any sense: there is
no such things as "still running background instructions" and when the end of
the function is reached, it is guaranteed that all instructions within the
function body are terminated, so putting 'return' or not doesn't change anything.
Not in URBI.

The difference is visible only in functions containing 'at' commands for
example:

function f()
{
  at (test) ping;
};

function f2()
{
  at (test) ping;
  return;
}

f2() will kill the 'at', f() will not. This is indeed very useful if the
'return' instruction is conditioned by some test. It has the same effect as a
kind of 'stop function_tag'.

	rewrite return mechanism for functions.
	* src/parser/bison/ugrammar.y: remove automatic return.
	* src/ucallid.cc: add returnVar to store the return container.
	* src/ucallid.h: add returnVar and accessor.
	* src/ucommand.cc: fix return mechanism.
	* src/uconnection.cc: fix return mechanism.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	Formatting changes.
	* src/unamedparameters.cc: done.
	* src/unamedparameters.h: done.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	indent
	* src/uconnection.cc: done.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	add disinherit
	* src/parser/bison/ugrammar.y: fix bug in call to UCommand_INHERIT
	constructor with disinherit, should send the 'true' flag for
	'eraseit'.
	* src/ucommand.cc: add eraseit==true case.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug in multiple inheritance
	* src/uobj.cc: done.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	add 'inherit'/'disinherit' keyword, implement inherit
	* src/parser/bison/ugrammar.y: add syntax.
	* src/parser/bison/utoken.l: add keywords.
	* src/ucommand.cc: add class UCommand_INHERIT.
	* src/ucommand.h: add class UCommand_INHERIT.
	* src/utypes.h: add CMD_INHERIT.

2006-11-11  Jean-Christophe Baillie  <baillie@gostai.com>

access_and_change_varlist in UServer keeps track of variable that have both a
notifyChange and notifyAccess record. The destructor of UVariable cleans it,
UServer::work calls UVariable::get for each of the listed variables.

	add *untested* resolution for ticket #40. Cannot test as long as
	* src/uobject.cc: done.
	* src/userver.cc: done.
	* src/userver.h: done.
	* src/uvariable.cc: done.
	* src/uvariable.h: done.

2006-11-11  Jean-Christophe Baillie  <baillie@gostai.com>

	Formatting changes.
	* src/uobject.cc: done.
	* src/userver.h: done.

2006-11-11  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #61: $() behavior
	* src/ucommand.cc: resolve name before testing it.
	* src/uvariablename.cc: simplify $(s) construct and fix bug.

2006-11-11  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #54 and bugs in name resolution
	* src/uobj.cc: fix a bug in iterator value.
	* src/uvariablename.cc: check now for all possible name spaces all the
	time, not only according to id_type.

2006-11-11  Jean-Christophe Baillie  <baillie@gostai.com>

Remote uobjects couldn't be newed anymore because a test was double checking
the object existence, triggering an error of "object already existing".

	fix remote uobject new
	* src/ucommand.cc: fixed.

2006-11-07  Akim Demaille  <demaille@gostai.com>

	urbi/uobject.hh
	* src/ucommand.cc, src/uobject.cc, src/uvalue.cc, src/uvariable.cc,
	* src/uvar.cc, src/userver.cc, src/uobj.cc, src/uvariablename.cc:
	Adjust the path to uobject.hh.
	* src/Makefile.am: Don't ship uobject files, uobject.mk does it.
	Use $(uobject_hh).

2006-11-07  Akim Demaille  <demaille@gostai.com>

	install libport
	As discussed with Matthieu.
	* Makefile.am: Include libport.mk.

2006-11-07  Akim Demaille  <demaille@gostai.com>

	Upgrade dependencies
	* src/console.cc: Include config.h.
	* configure.ac (URBI_BUILD_AUX): Use it.
	Use nostdinc.
	* src/Makefile.am (AM_CPPFLAGS): Adjust.
	(uobj-help, uobj-ci, uobj-up): Remove, now in uobject.mk.

2006-11-07  Matthieu Nottale  <nottale@gostai.com>

	Fix ticket #60: Bug in hierarchical tags
	* src/ucommand.cc: Fix incorrect substr use.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug in assignment that fails and put void in the assigned variable.
	* src/ucommand.cc: remove useless comments.
	* src/uexpression.cc: in case of error eval returns 0, not DATA_VOID.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix typo in one error message.
	* src/ucommand.cc: done.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

class toto { var x; };
tata = new toto;
at (tata.x) ping;
[00007013:notag] !!! Pure virtual variables not allowed in asynchronous tests.
[00007013:notag] !!! Invalid name resolution in test. Did you define all events and variables?

=> tata.x must exist for 'at' to be able to put a hook on it for caching
purposes.

	forbid usage of virtual attributes in asynchronous test expressions
	* src/uexpression.cc: done.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix error statement: must start with an upper case
	* src/ucommand.cc: change 'invalid' to 'Invalid'.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix 'vars' command
	* src/ucommand.cc: add support for VOID, LIST and OBJ types.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

Calling 'new' several times for the same object will now fail:

class x;
class y;
a = new x; // OK
a = new y; // FAIL

The proper way of doing it will be in the future:

a = new x;
a inherits y; // from this point on, any call to init would fail because it
	      // would be ambiguous between x.init and y.init
	      // Conflicts should be notified in warning and generate errors
	      // only if effective usage is attempted.

	Temporarily prohibits multiple inheritance.
	* src/ucommand.cc: done.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

Trying to put objects in lists or have functions that return objects now
triggers an error message.

	add proper error messages for common objects misusages in kernel 1
	* src/ucommand.cc: dito.
	* src/uexpression.cc: dito.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix indentation
	* src/uexpression.cc: dito.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #52
	* src/ucommand.cc: fix bug in name eval checking inside NEW.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug on 'at' tests containing core functions
	* src/uexpression.cc: fix bug.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	Indentation reformatting.
	* src/utypes.h: doit.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

The grammar has been hacked again to support tags of the form <id>(.<id>)*
In 1.5, when name resolution will be set properly, we will submit tags to the
same resolution algorithm, giving immediate benefits like "programmable tags":

a="hello";
$(a): ping;
[00012123:hello] pong

	fix bug in parsing hierarchical tags with more than 2 levels of
	* src/parser/bison/utoken.l: add the TAG token.
	* src/parser/bison/ugrammar.y: extend parsing of tags to include the
	TAG token.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug in hash+list name resolution
	* src/uexpression.cc: fix.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

For many critical applications where URBI has to handle "lists" of objects
created at runtime (like bots in a video game), it is necessary to be able to
have objects referred to by names containing variable parts. This feature is
added via the hash map mechanism already existing:

class x;
obj[1] = new x;
obj["myname"] = new x;
obj[45]["hello"] = new x;

The way it is done is again via a hack in the nameresolution function and the
parser. In k1.5, this will be fixed with a generic nameresolution algorithm.

NB: obj[1] is not referring to an underlying ulist of objects, and evaluating
obj alone without the array index will fail.

	add support for objects hash table
	* src/parser/bison/utoken.l: add POINT token ('.').
	* src/parser/bison/ugrammar.y: add support for prefix[...].suffix[...]
	constructs in grammar (should be generalized in 1.5).
	* src/uvariablename.cc: extend buildFullname function and fix bugs in
	name resolution algorithm.
	* src/uvariablename.h: add index_obj array.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #35: notifyaccess when list elements are viewed
	* src/uexpression.cc: add a call to UVariable::get().

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug accessing array of array in lists
	* src/uexpression.cc: a quick hack. This *must* be fixed in k1.5.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	update NEWS
	* NEWS: update.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

The simple code "event b" was creating both an event b[0] and a variable b.
This is now fixed.

	fix bug in declaration of events without parameters
	* src/ucommand.cc: add the "events" keyword that can be used to list
	declared events (like vars for variables).
	* src/parser/bison/utoken.l: add events keyword.
	* src/ueventhandler.h: add a nbarg accessor.
	* src/ueventhandler.cc: idem.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	fix speedmax bug
	* src/ucommand.cc: enforce speedmax on instantaneous assignments like
	x=<value> and display a warning message when the +error flag is set.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	change 'modificator' to 'modifier'
	* src/ucommand.cc: change error messages to display 'modifier' instead
	of 'modificator'.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	fix string unarmor bug
	* src/parser/bison/utoken.l: STRING token now calls UString::unArmor().
	* src/ustring.cc: add unArmor/armor (armor not implemented yet).
	* src/ustring.h: add defs.
	* src/uvalue.cc: change UValue::echo for DATA_STRING; no processing
	required anymore.

2006-11-04  Akim Demaille  <demaille@gostai.com>

	Automake 1.10 compatibility
	* src/Makefile.am: Use init.mk.
	Use newer svn-externals.
	* configure.ac: Automake 1.10 includes $(SHELL) in $(install_sh),
	so do not add another.

2006-11-03  Jean-Christophe Baillie  <baillie@gostai.com>

	whenever support add, fix bug in at (forgot to call normalForm)

	* src/ucommand.cc: add support for whenever.
	* src/ucommand.h: add support for whenever.
	* src/userver.cc: remove unecessary debug ouput.

2006-11-01  Akim Demaille  <demaille@gostai.com>

	Use URBI_LIBPORT
	* configure.ac: Here.

2006-11-01  Jean-Christophe Baillie  <baillie@gostai.com>

	fix "exec" bug

	* src/parser/bison/utoken.l: fix UString lenght with STRING
	token.
	* src/uexpression.cc: nothing.
	* src/ustring.cc: formating changes.
	* src/ustring.h: add setLen, used by utoken.l to adjust the
	length of the UString.

2006-11-01  Jean-Christophe Baillie  <baillie@gostai.com>

	Formatting changes.

	* src/ucommand.cc: indent.
	* src/parser/bison/ugrammar.y: remove comments.

2006-11-01  Jean-Christophe Baillie  <baillie@gostai.com>

	Remove obsolete 'eventid' attribute in UValue

	* src/uvalue.cc: do it.

2006-11-01  Jean-Christophe Baillie  <baillie@gostai.com>

	Code reindent and force coding style

	* src/ucommand.cc: do it.
	* src/uvalue.h: do it.
	* src/ucommand.h: do it.
	* src/parser/bison/ugrammar.y: do it.
	* src/uexpression.cc: do it.
	* src/uvalue.cc: do it.
	* src/uvariable.cc: do it.
	* src/userver.cc: do it.
	* src/uobj.cc: do it.
	* src/uvariablename.cc: do it.
	* src/uvariable.h: do it.
	* src/uvariablename.h: do it.
	* src/uconnection.cc: do it.

2006-10-31  Matthieu Nottale  <nottale@gostai.com>

	Rename Connection* to connection*

	* src/network/bsdnet/Connection.cc: Remove.
	* src/network/bsdnet/connection.cc: New.
	* src/network/bsdnet/Connection.h: Remove.
	* src/network/bsdnet/bsdnet.mk: .
	* src/network/bsdnet/network.cc: .
	* src/network/bsdnet/connection.hh: New.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Depend on uobject/ not liburbi
	* src/ucommand.cc, src/uexpression.h, src/uexpression.cc,
	* src/uobject.cc, src/uvalue.cc, src/network/bsdnet/Connection.cc,
	* src/uvariable.cc, src/uvar.cc, src/userver.cc, src/uobj.cc,
	* src/uvariablename.cc: Adjust: use uobject/uobject.hh.

	* src/Makefile.am, configure.ac, Makefile.am: Adjust.

2006-10-31  Jean-Christophe Baillie  <baillie@gostai.com>

	Add multievent support (whenever still not working)
	* src/ucommand.cc: adjust UCommand_EMIT and UCommand_AT.
	* src/ucommand.h: add inheritance from UASyncCommand.
	* src/uatcandidate.cc: New.
	* src/uexpression.h: change UExpression::eval prototype.
	* src/utypes.h: add UEventCompoundType.
	* src/ueventinstance.cc: New.
	* src/ueventinstance.h: New.
	* src/uasynccommand.h: New.
	* src/uasyncregister.cc: New.
	* src/uasyncregister.h: New.
	* src/uexpression.cc: change UExpression::eval and add
	UExpression::asyncScan.
	* src/uatcandidate.h: New.
	* src/ueventhandler.h: New.
	* src/uvariable.cc: add support for UAsyncRegister.
	* src/ueventcompound.cc: New.
	* src/ueventcompound.h: New.
	* src/userver.cc: replace eventtab by emittab.
	* src/userver.h: replace eventtab by emittab.
	* src/uobj.cc: update searchEvent function.
	* src/uasynccommand.cc: New.
	* src/uobj.h: update searchEvent prototype.
	* src/ueventhandler.cc: New.
	* src/uvariablename.cc: fixed name resolution for events
	with new UEventHandler approach.
	* src/uvariable.h: add support for UASyncRegister.
	* src/ueventmatch.cc: New.
	* src/ueventmatch.h: New.
	* src/Makefile.am: add new files.
	* src/fwd.hh: add new classes.

2006-10-31  Jean-Christophe Baillie  <baillie@gostai.com>

	Formatting changes
	* uvalue.h: here.

2006-10-31  Jean-Christophe Baillie  <baillie@gostai.com>

	Remove commented code
	* src/parser/bison/ugrammar.y: here.

2006-10-31  Jean-Christophe Baillie  <baillie@gostai.com>

	Fix UString copy ctor
	* src/ustring.cc: Do it.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Adjust to the changes in liburbi
	* src/Makefile.am: Adjust file names.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Dead line
	* src/Makefile.am: No longer pass -DFLOAT_DOUBLE, this is
	driven by configure now.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Update dependencies
	* Makefile.am: Tidy.
	More aliases for JCB.
	* scheduler: Remove.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/ustring.cc: here.
	* src/memorymanager/blockmemorymanager.h: here.
	* src/memorymanager/memorymanager.cc: here.
	* src/ubinder.cc: and here.
	* src/Makefile.am: Formatting change.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/parser/bison/ugrammar.y (NEW_BIN_1): New.
	Use it.

2006-10-25  Matthieu Nottale  <nottale@gostai.com>

	r256: Fix a parse error (gcc 4.1.2) and missing pthread flags

	* src/parser/uparser.h: Remove extra UFlexer:: in in-class method declaration.
	* src/Makefile.am: Add pthread-related flags to uconsole build.

2006-10-24  Akim Demaille  <demaille@gostai.com>

	Use libport/ufloat.h
	* src/ufloat.h: Remove.
	* src/uvalue.h, src/utypes.h: Adjust.

2006-10-24  Akim Demaille  <demaille@gostai.com>

	Use libport's ufloat.hh.
	* src/ufloat.h: Wrap libport/ufloat.hh.
	To be removed eventually (or moved into libport under some
	form).
	* src/ufloat.cc: Remove.
	* src/utypes.h: Adjust.

2006-10-24  Akim Demaille  <demaille@gostai.com>

	Remove AIBO connection code
	* src/network/OPENR: Remove.
	* src/network/OPENR/aiboconnection.h: Remove.
	* src/network/OPENR/openr.mk: Remove.
	* src/network/OPENR/aiboconnection.cc: Remove.

2006-10-24  Akim Demaille  <demaille@gostai.com>

	Adjust to libport installation
	* src/Makefile.am: No longer install libport bits.
	(AM_CXXFLAGS): Point to uobject/.

2006-10-24  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uvar.cc: Make it more alike its peer.

2006-10-22  Akim Demaille  <demaille@gostai.com>

	Stop using symlinks, Matthieu dislikes them
	* src/uobject/uobject.cc, src/uobject/uvar.cc: Move to...
	* src/uobject.cc, src/uvar.cc: here.
	* src/uobject/uobject.h, src/uobject/uext.h,
	* src/uobject/common_uvalue.cc: Remove.
	* src/Makefile.am (liburbi_srcdir, uobject_srcdir): New.
	Use them to use the copies shipped by the enbedded liburbi.

2006-10-22  Akim Demaille  <demaille@gostai.com>

	Fix parser compilation under Aibo
	* src/parser/bison/bison.mk: Include an explicit compilation
	rule for ugrammar.cc which uses PARSER_CXXFLAGS.
	This rule was copied from Automake 1.9.6's output.
	* src/Makefile.am: Don't compile console for aibo.
	(libkernel_la_CPPFLAGS): Don't define it, it makes the object
	file names longer for no good reason.
	Just let AM_CPPFLAGS do its job.
	* configure.ac: Don't define NETWORK_OPENR, OPENR suffices.

2006-10-21  Akim Demaille  <demaille@gostai.com>

	Prepare aibo
	* src/console.cc: Use libport/utime.hh.
	* src/parser/bison/bison.mk: Compile the parser in a separate
	library, in a failed attempt to avoid -O2.
	* src/Makefile.am: Do not compile the Aibo connection kit.
	Will probably be removed later.

2006-10-21  Akim Demaille  <demaille@gostai.com>

	ChangeLog issues

2006-10-20  Matthieu Nottale  <nottale@gostai.com>

	Upped libport and liburbi, small fix as a consequence

	* src/uvalue.cc: cast char*->unsigned char*.

2006-10-18  Akim Demaille  <demaille@gostai.com>

	Fix distdir issue
	* src/network/OPENR/aiboconnection.h,
	* src/network/OPENR/aiboconnection.cc: Formatting changes.
	* src/utypes.h: Use libport.hh.
	* src/Makefile.am: Move some EXTRA_DISTs to...
	* Makefile.am: here.
	* configure.ac: Use tar-ustar.

2006-10-17  Matthieu Nottale  <nottale@gostai.com>

	Replace install-sh, fix header path

	* src/parser/uparser.cc: Fix ugrammar.hh inclusion path.
	* configure.ac: Fix install-sh.

2006-10-17  Akim Demaille  <demaille@gostai.com>

	Look for pthread.h, install parts of libport.
	* src/Makefile.am: install bit of libport, since userver.h includes
	it, and is installed.  That sucks.
	* configure.ac: Use URBI_PTHREAD.

2006-10-17  Akim Demaille  <demaille@gostai.com>

	Fix path.
	* src/parser/bison/FlexLexer.h: Rename as...
	* src/parser/bison/flex-lexer.hh: this to avoid being caught
	by the installed one.
	* src/parser/uparser.h: Adjust.
	* src/parser/bison/bison.mk: Adjust.
	* src/Makefile.am: Adjust.
	lockable.h -> lockable.hh.

2006-10-17  Akim Demaille  <demaille@gostai.com>

	Update libport use.
	* src/uconnection.h: Use the new files.
	* src/userver.h: Ditto.
	* src/parser/uparser.h: Fix include path.
	Reported by Matthieu.
	* src/uconnection.cc: idem.
	* src/Makefile.am: Adjust.

2006-10-17  Akim Demaille  <demaille@gostai.com>

	Use libport/lockable.hh.
	* src/lockable.h: Remove.
	* src/uconnection.h, src/userver.cc, src/userver.h,
	* src/uconnection.cc: Adjust.
	* src/Makefile.am: Ditto.

2006-10-17  Akim Demaille  <demaille@gostai.com>

	Formatting changes.
	* src/lockable.h: Do that.
	* src/userver.cc: Idem.

2006-10-16  Akim Demaille  <demaille@gostai.com>

	Use install-sh -C for headers.
	* configure.ac (INSTALL_HEADER): Define.
	This fixes the symptoms of a weird issue: when running
	"make install" in the kernel, when install goes into
	liburbi the headers are installed with fresh timestamps, and
	therefore, when install arrives back in the kernel's
	directory, it recompiles again.
	Now the timestamps are no longer updated.
	But in the first place, when should not depend on
	installed headers, but on our shipped headers.

2006-10-16  Akim Demaille  <demaille@gostai.com>

	Tidy.
	Move all the sources into src.
	Use the latest liburbi-c++.
	* configure.ac: Create config.h.
	* Makefile.am: Put bits into...
	* src/Makefile.am: this new file.
	* src/parser/bison/bison.mk: Adjust.
	* src/uvalue.cc, src/network/bsdnet/network.cc,
	* src/userver.cc, src/uobject/uobject.cc,
	* src/uobject/uobject.h, src/uobject/uext.h,
	* src/uobject/common_uvalue.cc: Don't name unused arguments.

	* src/ubanner.cc: Include config.h.

2006-10-15  Akim Demaille  <demaille@gostai.com>

	Fix some warnings.
	* ucommand.cc: No longer name unused arguments.
	* ucommand.h: Idem.
	* ueventhandler.h: Idem.
	* uconnection.h: Idem.
	* ueventhandler.cc: Idem.
	* uconnection.cc: Idem.

2006-10-15  Akim Demaille  <demaille@gostai.com>

	Upgrade build-aux.
	* configure.ac: Don't use -Weffc++ yet.
	* ustring.cc: Use C++ headers.
	Formatting changes.
	* ustring.h: Formatting changes.
	* memorymanager/blockmemorymanager.h: Idem.
	(BlockPool::BlockPool): New.
	* memorymanager/memorymanager.cc: Implement it.
	And use it.
	* ucommand.h: Formatting changes.
	* console.cc: Idem.
	* liburbi-c++/src/liburbi/uabstractclient.cpp: Idem.

2006-10-15  Matthieu Nottale  <nottale@gostai.com>

	FIX: ugrammar was unsaved in my IDE. Sorry

	* parser/bison/ugrammar.y: Fix conflict.

2006-10-15  Matthieu Nottale  <nottale@gostai.com>

	Optimization: tag subsystem rewrite, memory manager rewrite

	* ucommand.cc: .
	* ucommand.h: .
	* utypes.h: .
	* parser/bison/ugrammar.y: .
	* ufunction.cc: .
	* uexpression.cc: .
	* ufunction.h: .
	* userver.cc: .
	* userver.h: .
	* uvariablename.cc: .
	* memorymanager/blockmemorymanager.h: .
	* memorymanager/memorymanager.cc: .
	* memorymanager/memorymanager.h: .
	* uconnection.cc: .

2006-10-15  BAILLIE Jean-Christophe  <baillie@gostai.com>

	Fix indentation problems

	Indentation problems fixed in some files (using Akim's convention:
	to be debated)
	NB: vi option to add =>  :set tabstop=8

	* ucommand.cc: .
	* parser/bison/ugrammar.y: .
	* uexpression.cc: .
	* userver.cc: .
	* uvariablename.cc: .

2006-10-13  Matthieu Nottale  <nottale@gostai.com>

	Optimisation.

	* utypes.h: Remove eqStr (leftover).
	* uconnection.cc: Remove 4(half) useless hash map searches in execute.
	* liburbi-c++/src/liburbi/uobject/uext.h: Tsuna:BUG: this is an
	external item.

2006-10-12  matthieu nottale  <nottale@gostai.com>

	Fix invalid iterator use.

	* network/bsdnet/network.cc: Fixed for good.

2006-10-12  matthieu nottale  <nottale@gostai.com>

	Lock fix.

	* parser/uparser.cc: Remove unnecessary &*.
	* lockable.h: Lock is now a recursive mutex.
	* userver.cc: Lock server in work.
	* userver.h: UServer inherits Lockable .
	* console.cc: Add missing headers.
	* uconnection.cc: Lock server in parse.

2006-10-12  Matthieu Nottale  <nottale@gostai.com>

	Add a much needed try/catch

	* network/bsdnet/network.cc: Add a try/catch, so that when a
	connection is destroyed in its notifyread, the call to notifyWrite
	on the deleted object does not bring the ship down.
	* lockable.h: Add a temporary #error in the aibo case to ensure
	locks are enabled.
	* console.cc: Add missing includes time.h and sys/time.h in
	!windows case.

2006-10-10  matthieu nottale  <nottale@gostai.com>

	Env defaults to engine. Add build dependency on bison.mk

	* configure.ac: Default env is engine.
	* parser/bison/bison.mk: Add dependency on bison.mk.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	More robustness against flex 2.5.4.

	* parser/bison/bison.mk: std::ostream.
	Include iostream, not istream, since ostreams are used.
	* liburbi-c++/src/liburbi/uabstractclient.cpp: Instantiate
	in the same order as the declaration.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	Formatting changes.
	* userver.cc: Do it.
	* console.cc: Idem.
	* ughostconnection.cc: Idem.
	* liburbi-c++/src/liburbi/uabstractclient.cpp: Idem.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	console.
	* console.cc: New.
	* Makefile.am: Compile it.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	Hook liburbi to SUBDIRS.
	* Makefile.am (liburbi-ci): New .

2006-10-10  Akim Demaille  <demaille@gostai.com>

	Install fwd.hh.
	* Makefile.am: Do it.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	Use liburbi as an svn:externals.
	* configure.ac: Configure the subpackage liburbi-c++.
	* uobject/uobject.h, uobject/uext.h, uobject/common_uvalue.cc:
	Point to the local version of liburbi-c++.
	* Makefile.am (liburbi-up): New.
	To be used to upgrade the version of liburbi used.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	fwd.hh.
	* fwd.hh: New.
	* unamedparameters.h, uvalue.h, ucommand.h, uexpression.h,
	* utypes.h, ucommandqueue.h, ugroup.h, ughostconnection.h,
	* ueventhandler.h, uvariablelist.h, ufunction.h,
	* uconnection.h, ubinder.h, userver.cc, userver.h, uobj.h,
	* uvariable.h, uvariablename.h, ucallid.h:
	Use it.
	* Makefile.am: Adjust.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	uobject.cc in urbi::.
	* uobject/uobject.cc:  Define in urbi:: the entities declared in it.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	uparse.cc.
	* parser/uparser.cc: New.
	* parser/uparser.h, Makefile.am: Adjust.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	* network/bsdnet/network.h, network/bsdnet/network.cc,
	* uconnection.cc, ucommand.cc: Formatting changes.

2006-10-09  Akim Demaille  <demaille@gostai.com>

	pin baux.
	* Makefile.am: And include build-aux.mk.

2006-10-08  JC Baillie  <baillie@gostai.com>

	first stage of object arrays (can create)

	The goal is be able to do things like:

	myobj[1] = new stuff;
	myobj[1].val = 4;

	For the moment, only the first stage is possible with this commit.
	To reach the second stage (which requires a modification of the
	grammar), you can do this:

	myobj__1.val = 4; //or
	$("myobj__"+string(index)+".val") = 4;


	* ucommand.cc: tweak UCommand_NEW to support any object name.
	* ucommand.h: change constructor.
	* parser/bison/ugrammar.y: update with new UCommand_NEW constructor.

2006-10-08  JC Baillie  <baillie@gostai.com>

	Prepare for multievent handling

	Multievent handling needs a new class UEventHandler.

	* ucommand.cc: include uventhandler.h.
	* utypes.h: nothing.
	* ueventhandler.h: New.
	* ueventhandler.cc: New.
	* Makefile.am: add .cc and .h for ueventhandler.

2006-10-08  JC Baillie  <baillie@gostai.com>

	fix 'new' behavior when no init is present and no parameters are given

	When invoking new with no parameters, the default "empty"
	constructor is now called, even if the init function has not been
	explicitly declared.

	* ucommand.cc: fix UCommand_NEW behavior when new has no param and
	no init is defined.

2006-10-08  JC Baillie  <baillie@gostai.com>

	no recursive inheritance

	* ucommand.cc: fix a=new a; this is not permitted.

2006-10-08  Jean-Christophe Baillie  <baillie@gostai.com>

	Name resolution fix in object methods + akim bug in booleval reverted

	Some cleanup of warning messages during compile.
	Fix a name resolution bug in object methods when attributes are
	defined in the origin class and not in the child class.
	Akim removed a "if (freeme)" before a delete in booleval. Reverted.

	* ucommand.cc: cleanup warnings.
	* parser/bison/ugrammar.y: cleanup of unnecessary comments.
	* uexpression.cc: cleanup warnings, fix indent.
	* uvalue.cc: remove booleval bug, fix indent.
	* uvariable.cc: cleanup warnings, fix indent.
	* INSTALL: remove old install notes.
	* userver.cc: cleanup warnings.
	* uobj.cc: add searchEvent function.
	* uobj.h: add searchEvent definition.
	* uvariablename.cc: fix name resolution in object methods with
	inheritance.
	* LICENSE-URBI-LANGUAGE: Remove.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Bison and Flex output are no longer shipped.
	Therefore they are now in the build tree.
	* parser/bison/bison.mk: Implement these changes.
	* Makefile.am (CLEANFILES): Initialize.
	* configure.ac: Require exactly Flex 2.5.4.
	Require at least Bison 2.2.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Fix Perl invocation.
	* parser/bison/bison.mk: Beware that perl needs the file to
	process after the -e.
	* parser/bison/ugrammar.y: Sugar.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Sugar the parser.
	* parser/bison/ugrammar.y (NEW_EXP_2): New.
	Use it.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Fix install/uninstall issues.
	distcheck passes.
	* Makefile.am: Use DESTDIR.
	(uninstall-local): New.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Fix build != src issue.
	* parser/bison/bison.mk: Don't rely on an existing
	builddir/parser/bison.
	Reported by Matthieu.

2006-10-06  matthieu nottale  <nottale@gostai.com>

	COMMA and SEMICOLON priority changed

	* parser/bison/ugrammar.y: Fix priority between COMMA and
	SEMICOLON in grammar.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Enable debug traces in the parser.
	* parser/uparser.h: Do that.
	* parser/bison/ugrammar.y: use %debug.
	delete 0 is valid c++.

2006-10-04  Akim Demaille  <demaille@gostai.com>

	Simplify delete invocations.

	* ucommand.cc: "delete(\(.*?\))" -> "delete \1".
	"if *(\(.*?\)) *\(delete \1\)" -> "\2".
	* utypes.h: Ditto.
	* uvariablelist.cc: Ditto.
	* ufunction.cc: Ditto.
	* ucallid.cc: Ditto.
	* uexpression.cc: Ditto.
	* unamedparameters.cc: Ditto.
	* uvalue.cc: Ditto.
	* ubinary.cc: Ditto.
	* uproperty.cc: Ditto.
	* uvariable.cc: Ditto.
	* uobj.cc: Ditto.
	* ugroup.cc: Ditto.
	* uconnection.cc: Ditto.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	inline ucopy.
	* ucommand.cc: Do it.
	* uvariablename.cc: Use it.
	This should fix some memory leak: before we were making copies
	that are not always used.
	delete 0 is valid C++.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	Formatting changes.
	* uvariablename.cc, uvalue.cc: Do that.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	Clean up.
	* ucommand.cc: Lots of formatting changes.
	Don't abuse of parens, know your precedences.
	delete 0 is valid C++.
	(ucopy): New.
	Use it.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	Formatting changes.
	* uobject/uobject.cc: Do that.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	Catch up with uobject.h.
	* ucommand.cc, uobject/uobject.cc, uobject/uvar.cc:
	Various indentation fixes.
	Various warning fixes.
	Catch up with const-ref uses for std::string in uobject.h.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	Use URBI_*.
	* configure.ac: Use URBI_PROG_CXX, and URBI_DOC.
	Use AC_ENABLE_SHARED.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	* build-aux, bootstrap: Remove.
	Now replaced with svn:externals.

2006-10-03  matthieu nottale  <nottale@gostai.com>

	New nonfree banner. Fix leak.

	* ubanner.cc: New message that doesn't say urbikernel is free.
	* uobject/uvar.cc: Fix a leak: delete vardata in uvar dtor.

2006-09-29  Matthieu Nottale  <nottale@gostai.com>

	Fix bison.mk incorrect path

	* parser/bison/bison.mk: Fix utoken.cc path.

2006-09-28  matthieu nottale  <nottale@gostai.com>

	Fixes for sdk generation

	* network/OPENR/openr.mk: replaced CPPFLAGS= with CPPFLAGS +=.
	* Makefile.am: Hack libkernel.lai and install locations to pretend
	the lib is not installed.
	We have to do it in order to include libkernel in an other library.

2006-09-27  matthieu nottale  <nottale@gostai.com>

	Makefile.am fixes

	* Makefile.am: Add missing uext.h.
	Add libkernel_la_CPPFLAGS because AM_CPPFLAGS is ignored
	(libkernel_la_CPPFLAGS written in openr.mk).

2006-09-26  Akim Demaille  <demaille@gostai.com>

	White space changes.
	* uconnection.cc: White space changes.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	* uconnection.cc: Include ubanner.hh.
	* userver.cc: Remove declarations that are now in ubanner.hh.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	Update to URBI_DIRS.

	* configure.ac (NETWORK_BSDNET): No longer define it.
	* parser/bison/Makefile.defs: Rename as...
	* parser/bison/bison.mk: this.
	And adjust dir names.
	* network/bsdnet/Makefile.defs: Rename as...
	* network/bsdnet/bsdnet.mk: this.
	And adjust dir names.
	* network/OPENR/Makefile.defs: Rename as...
	* network/OPENR/openr.mk: this.
	And adjust dir names.
	* build-aux/urbi-dirs.m4: Also define kernelincludedir.
	* build-aux/urbi-openr.m4: Formatting changes.
	* README: New.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	Introduce ubanner.cc.
	* ubanner.hh, ubanner.cc: New.
	* userver.cc, userver.h: Use it.
	(UServer::display (const char **)): New.
	Use it.
	* Makefile.am: Adjust.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	Update URBI_DIRS.
	* build-aux/urbi-dirs.m4: Update from liburbi-cpp.
	* configure.ac: Use it.
	* Makefile.am (AM_CPPFLAGS): Remove useless ones, add missing ones.
	Ship uext.h.

2006-09-26  matthieu nottale  <nottale@gostai.com>

	Include path fix

	* utypes.h: Fix uobject.h include path, add uext.h include.
	* uvalue.cc: idem.
	* userver.cc: idem.
	* uobject/uext.h: New. Symlink from liburbi.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	* uobject/uobject.cc: Add missing std::.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	* uobject/uobject.cc (cleanTable): Cleanup.
	* Makefile.am: Formatting changes.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	* build-aux/urbi-openr.m4: New.
	* configure.ac: Use it.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	* parser/bison/Makefile.defs: Install the header files.
	* network/bsdnet/Makefile.defs,
	* network/OPENR/Makefile.defs,
	* network/OPENR/Makefile.defs,
	* Makefile.am: Ditto.

	* userver.h: Reorder includes.
	* memorymanager/memorymanager.h: Formatting changes.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	namespace cleanups.
	* ucommand.cc: Don't "using" things from std::.
	Catch up with liburbi being in urbi::.
	* ucommand.h: Ditto.
	* uexpression.h: Ditto.
	* ufloat.h: Ditto.
	* ucallid.cc: Ditto.
	* ugroup.h: Ditto.
	* uexpression.cc: Ditto.
	* uvariable.cc: Ditto.
	* uconnection.h: Ditto.
	* ubinder.h: Ditto.
	* userver.cc: Ditto.
	* userver.h: Ditto.
	* uobj.cc: Ditto.
	* uobj.h: Ditto.
	* uobject/uvar.cc: Ditto.
	* uvariablename.cc: Ditto.
	* uvariable.h: Ditto.
	* uvariablename.h: Ditto.
	* ucallid.h: Ditto.
	* uconnection.cc: Ditto.
	* ubinder.cc: Ditto.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Use URBI_DIRS.
	* build-aux/urbi-dirs.m4: New.
	* configure.ac: Use it.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	distcheck fixes.
	* build-aux/doxygen.mk: Update.
	* build-aux/revision.mk: Clean version..hh.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Portability fixes.
	* parser/bison/Makefile.defs: use Perl, not sed, since alternation
	is not portable (and OSX is a loser in this regard).
	Also cover cin, cout, cerr, and widen the pattern.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Prepend std:: to istream.

	* parser/bison/Makefile.defs: For Linux.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	VC++ issues.

	* ucommand.cc: .Formatting changes.
	* parser/bison/Makefile.defs (utoken.cc): Fix lack of std::.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Fixes and details.

	* ucommand.cc: Indent properly.
	* utypes.h: Comment changes.
	* parser/bison/ugrammar.y (NEW_BIN): New.
	Use it.
	Don't use parens for delete.
	"Delete 0" is valid C++.
	* parser/bison/Makefile.defs: Ship FlexLexer.h.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Fixes.

	* build-aux/move-if-change: New.
	* Makefile.am: Ship bison++.in.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Dos2unix.
	* ucommand.cc, utypes.h, uvariablelist.cc, ucallid.cc
	* unamedparameters.cc, uvalue.cc, ubinary.cc, uproperty.cc: .
	* CHANGELOG-Kernel, uobject/common_uvalue.cc, ugroup.cc: .
	* ubinder.cc: Use Unix-style end of lines.

	* uobject/uvar.cc: Namespace fixes.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Autoconfiscate.
	* ChangeLog, bootstrap: New.
	* build-aux/bison++.in, build-aux/revision.mk,
	* build-aux/urbi-var-progs.m4: New.
	* configure.ac: Use them.
	* build-aux/doxygen.mk, doc/Makefile.am, doc/Doxyfile.in: New.

	* Makefile: Rename as...
	* Makefile.am: this.

	* configure.ac (OS): New.
	* version.hh.in: New.
	* Makefile.am: Use it.

	* lockable.h: Simplify.
	* network/OPENR/Makefile.defs: Update to match Automake use.
	* network/bsdnet/Makefile.defs: Ditto.
	* parser/bison/Makefile.defs: Ditto.
	* parser/bison/FlexLexer.h: Formatting changes.
	* parser/uparser.h: Formatting changes.
	(ugrammar.hh, FlexLexer.h, location.hh): Include them.
	Use parser::token_type instead of Bison pre-2.2 names.
	Don't use using.
	Let Emacs know this file is C++.
	* parser/bison/utoken.l: Formatting changes.
	No using.
	* parser/bison/ugrammar.y: Require Bison 2.2.
	No using.
	Formatting changes.
	Don't use "../" in includes.
	* parser/bison/Makefile.defs: Use bison++ to save cycles.

	* version.h: Replace by...
	* version.hh.in: this.
	* Makefile.am: Use it.

	* userver.cc: Use C++ headers, use version.hh.
	Formatting changes.
	* userver.h: Formatting changes.
	* uobj.cc: Specify the path to uobject.h.
	* uobject/uvar.cc: Formatting changes.
	* uvariable.h: Ditto.
	* uconnection.cc: Ditto.

Local Variables:
ispell-local-dictionary: "american"
End:

$Rev$
$Id$
$Date$
