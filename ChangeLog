2007-01-23  Akim Demaille  <akim@lrde.epita.fr>

	Network clean up
	* src/network/bsdnet/connection.hh: Remove useless includes.
	* src/network/bsdnet/connection.cc: Shorten scopes.
	* src/network/bsdnet/network.hh: Remove useless includes.
	Use a more recent libport.
	* src/network/bsdnet/network.cc (TCPServerPipe::~TCPServerPipe): 
	Call shutdown before close.
	(TCPServerPipe::notifyRead): Shorten scopes.
	Remove the client_info variable, unused.

2007-01-23  Akim Demaille  <akim@lrde.epita.fr>

	Dead cpp code
	* src/network/bsdnet/network.hh (YYTOKENTYPE): Remove this pseudo
	definition.

2007-01-23  Akim Demaille  <akim@lrde.epita.fr>

	|
	* src/uexpression.cc: Use ||, not |, for Booleans.

2007-01-20  Akim Demaille  <akim.demaille@free.fr>

	Coding style
	* src/network/bsdnet/network.cc: Use a more tradional reading
	of error values.
	(TCPServerPipe::~TCPServerPipe): close the fd when exiting to
	free the port asap.

2007-01-20  Akim Demaille  <akim.demaille@free.fr>

	Use perror
	* src/network/bsdnet/network.cc: Use perror where there are syscall
	failures.
	Shorten scopes.

2007-01-20  Akim Demaille  <akim.demaille@free.fr>

	Update libport
	* src/console.cc: .

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Fix UValue constructions
	* src/uexpression.cc: here.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	More UValue ctor uses
	* src/uexpression.cc: here.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Use ctors
	* src/uvalue.hh: Comment changes.
	* src/uexpression.cc (UExpression::eval): Use the ctors instead
	of constructing by hand, and without telling the object...

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Scope shortening
	* src/uexpression.cc: here.
	Use ?:.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	No longer alias urbi::UBlendType, just use it
	* src/utypes.hh: No longer alias it and its members.
	* src/ucommand.cc, src/userver.cc, src/uvariable.cc,
	* src/uvariable.hh: Adjust.

2007-01-20  Akim Demaille  <demaille@gostai.com>

	Coding style
	* src/uexpression.cc: Use shorten argument names that don't
	conflict with the member names.
	Simplify accordingly.
	Translate comments into asserts.
	Simplify the logic of the bin expression case.

2007-01-19  Akim Demaille  <demaille@gostai.com>

	-Werror
	* configure.ac: Now handled by URBI_PROG_CXX.

2007-01-19  Matthieu Nottale  <nottale@gostai.com>

	Add missing lock in block memory manager. Fix a double delete when a variable with function scope is deleted. Replace some ustring by std::string
	* src/memorymanager/blockmemorymanager.hh: BlockMemoryManager now inherits lockable.
	* src/memorymanager/memorymanager.cc: Lock all calls.
	* src/ucallid.cc: Register the ucallid to the variables in his list. Add a remove call
	* src/ucallid.hh: Idem.
	* src/ucommand.cc: Fix for uvariable/uvariablename modifications.
	* src/uconnection.cc: Fix for uvariable/uvariablename modifications.
	* src/uexpression.cc: Fix for uvariable/uvariablename modifications.
	* src/uobj.cc: Fix for uvariable/uvariablename modifications.
	* src/ustring.hh: Add a ctor taking a std::string.
	* src/uvalue.cc: Move some fields to private scope, add accessors.
	* src/uvalue.hh: Idem.
	* src/uvariable.cc: Move some fields to private scope, add accessors. Call remove of the owner ucallid in dtor.
	* src/uvariable.hh: Idem.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Change a cast for portability
	* src/network/bsdnet/connection.cc: Fix a warning.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Fix a load bug
	* src/ucommand.cc: Add the same exception to load as to exec.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/ucommand.hh: here.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Clean up
	* src/parser/bison/ugrammar.y: Remove a cast.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Add debugging help
	* src/uexpression.cc: here.
        Should be in libport/compiler eventually.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Use string literals in the parser
	* src/parser/bison/ugrammar.y: here.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	to_string for Status
	* src/ucommand.hh, src/ucommand.cc (KIND): Rename as...
        (CASE): this.
        (to_string): New.
        (UCommand::print): Use it to display the status.
        (UCommand_NOOP::print): No longer display the status.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Use std::string for file names
	* src/parser/uparser.hh, src/parser/uparser.cc
        (UParser::process): Take a string.
	* src/uexpression.cc: Adjust.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	White space changes
	* src/ucommand.hh: here.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	eval_FUNCTION_EXEC_OR_LOAD
	* src/uexpression.hh, src/uexpression.cc
        (UExpression::eval_FUNCTION_EXEC_OR_LOAD): New.
        Use it.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Scope reduction
	* src/uexpression.cc (UExpression::eval_FUNCTION): here.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Fix vdebug use
	* src/ucommand.hh, src/ucommand.cc (send_error): Rename the va_list
	one as...
	(vsend_error): this.
	Call va_end.
	(tab, debug, vdebug): Move to...
	* src/userver.hh, src/userver.cc: here.
	Fix a genuine bug: be sure to call UServer::vdebug, not debug.
	Use where appropriate.
	* src/uexpression.hh, src/uexpression.cc (UExpression::print): Now
	takes an indentation level.
	* src/unamedparameters.cc: Adjust.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Sanitize casts
	They trigger warnings.
	* src/parser/uparser.cc, src/parser/uparser.hh (process): Take
	a const ubyte*, not a ubyte*.
	* src/uexpression.cc: Adjust.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Address cast warning
	* src/uvalue.cc: Use a reinterpret_cast, not a C cast.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Fix creation of groups
	Fixes groups.chk.
	* src/uexpression.cc: Weaken preconditions in ctors.
	Avoid identifier collisions between members and variables.

2007-01-18  Type Your Name Here  <your.mail.here@FIXME.com>

	More format checking
	* src/uexpression.cc (send_error): here.

2007-01-18  Type Your Name Here  <your.mail.here@FIXME.com>

	Fix warning
	* src/ucommand.cc: Remove casts that drop constness.
	Rather, preserve constness.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	More warnings
	* configure.ac: Activate more G++ warnings.
	Don't pass -Werror to VC++.

2007-01-18  Akim Demaille  <demaille@gostai.com>

	Handle FD_SET portability issues
	* src/network/bsdnet/network.cc (LIBPORT_FD_SET): New.
	Use it to address a warning on Windows.

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	update externals

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	small restyling (spaces)
	* src/ubinder.cc: done.
	* src/ubinder.hh: done.
	* src/uvar.cc: done.

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	This should go into the 'unstable' branch
	fix backward compatibility issue.
	* src/uobject.cc: revert.
	* src/uvalue.cc: revert.
	* src/uvar.cc: revert.

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	update externals.

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	Doing a simple obj.x=7; command was triggering UNotifyAccess on x. In
	the more general case of controlled assignment, like "obj.x=7
	time:1s", this call to UVariable::get is necessary to know where to
	start from. In the case of a simple instantaneous assignment, the call
	must be avoided for optimization purposes.

	fix a bug in assignment triggering a non necessary call to UVariable::get()
	* src/ucommand.cc: set controlled and use it in processModifiers as
	well.
	* src/ucommand.hh: moves 'controlled' from local to the call to object
	attribute (to be seen by all subsequent method calls).

2007-01-18  Jean-Christophe Baillie  <baillie@gostai.com>

	UOwned UVar which are UNotifyAccess'd and UNotifyChange'd in the same
	UObject should not trigger a loop of calls to UNotifyAccess.

	fix loop UNotifyChange/Access on UOwned UVar inside the same UObject
	* src/userver.cc: use special call to get for the
	notify_access_and_change loop.
	* src/uvariable.cc: add support for autoloop in get.
	* src/uvariable.hh: add new prototype of get.

2007-01-17  Akim Demaille  <akim.demaille@free.fr>

	Check printf-like functions
	* src/ucommand.cc, src/ucommand.hh, src/ucommandqueue.cc,
	* src/uconnection.cc, src/uexpression.cc, src/userver.hh:
	Use GCC's features to check them.

2007-01-17  Jean-Christophe Baillie  <baillie@gostai.com>

	There was several flaw in the way UNotifyChange was working on
	USensor-tagged UVar. Also, the interaction between UNotifyChange and
	UNotifyAccess was not working properly in remote mode (you could have
	a UNotifyChange remote and a UNotifyAccess plugged without any effect,
	while this should loop the Access).

	I have fixed these problems and will clarify the rationale behind
	USensor in a wiki page. By the way, USensor will be renamed in the
	next commit (*with backward compatibility of course*).

	fix ticket #112 (UNotifyChange with USensor)
	* NEWS: Explain the above and the inherits name change.
	* src/ucommand.cc: add access_and_change_varlist support for remote
	UVar doing a UNotifyChange on a variable that is already
	UNotifyAccess'ed from a plugged object.
	* src/uvar.cc: force update in any case, with a specific flag for the
	case of an update coming from a UVar operator= assignement (done in a
	UObject, vs done in the language).
	* src/uvariable.cc: do not trigger UNotifyChange on a USensor plugged
	Var when the change comes from UVar operator=.
	* src/uvariable.hh: add new prototype of updated.

2007-01-17  Akim Demaille  <akim@lrde.epita.fr>

	Warning fixes.
	* src/network/bsdnet/network.cc: Don't use static, use the
	anonymous namespace.
	Use enum to define constants.
	(controlPipe): Don't define on windows, as it is not used there.

2007-01-17  Akim Demaille  <akim@lrde.epita.fr>

	More location initialization.
	* src/parser/uparser.cc (UParser::UParser): here.

2007-01-17  Akim Demaille  <akim@lrde.epita.fr>

	First column is column 1.
	This code can be simplified when Bison 2.4 is out.
	* src/parser/uparser.cc (process): Enforce this.
	* src/parser/bison/utoken.l (LINES): New.
	Use it.

2007-01-17  Matthieu Nottale  <nottale@gostai.com>

	Fix a bug when printing strings containing % in the ghostconnection and a potential send bug in userver
	* src/ughostconnection.cc: Do not pass string to print in the format field. pass ("%s", str) instead.
	* src/userver.cc: Add missing call to va_end.
	* src/userver.hh: Rename overloaded send(va_args) to vsend as the wrong one might be called.

2007-01-16  Akim Demaille  <akim@lrde.epita.fr>

	Add missing ;.
	* src/parser/bison/ugrammar.y: here.
	Newer Bisons no longer add this default semicolon.

2007-01-16  Jean-Christophe Baillie  <baillie@gostai.com>

	The bug was an uninitialized attribute of UParser in the constructor.

	fix ticket #113
	* src/parser/uparser.cc: add init of commandTree to 0.
	* src/uconnection.cc: remove Tsuna temporary fix.

2007-01-14  Jean-Christophe Baillie  <baillie@gostai.com>

	update externals

2007-01-14  Akim Demaille  <akim.demaille@free.fr>

	Catch up with UValue::Type.
	* src/uobject.cc, src/uvalue.cc, src/uvar.cc: Prepend UValue::
	where needed.

2007-01-14  Jean-Christophe Baillie  <baillie@gostai.com>

	Kernel side of the API Change made to UObject had to be fixed.

	revert UObject API change.
	* src/uvalue.cc: done.

2007-01-14  Jean-Christophe Baillie  <baillie@gostai.com>

	update uobject externals to r363

2007-01-12  Akim Demaille  <akim@lrde.epita.fr>

	Update uobject
	To get Matthieu's fix on scanf use.

2007-01-12  Akim Demaille  <akim.demaille@free.fr>

	cpp fix
	* src/ucommand.cc: Fix an #undef.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	-Werror
	* configure.ac: Pass it.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	Shorten scopes, fix warnings
	* src/uvalue.cc (UValue::copy): Make it clear which missing
	cases are valid (e.g., DATA_VOID), and which are to reject.
	Possibly some cases are missing, and will have to be added,
	but the test suite passes.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	renaming
	(This is to split the following patch.)
	* src/uvalue.cc: ret -> res.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	Fix warnings
	* src/uvariable.cc: Die on impossible switch cases.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	Update uobject
	* src/uvalue.cc: Adjust.

2007-01-11  Matthieu Nottale  <nottale@gostai.com>

	Add missing variable initialisation
	* src/parser/uparser.cc: Initialise filename_ in ctor.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	Coding style
	* src/ueventmatch.cc, src/ueventmatch.hh: Improve the coding
	style: scopes, ctors, for loops, useless braces and parens.
	The usual stuff.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	UEventCompoundType
	* src/utypes.hh (UEventCompoundType): Move to.
	* src/ueventcompound.hh (UEventCompound::Type): here.
	* src/ueventcompound.cc: Adjust.
	Also, use switch when that's more appropriate.
	And SHORTEN THE SCOPES!
	* src/uexpression.cc: Adjust.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	simplify (UCommand_TREE)
	* src/uconnection.cc (simplify): New.
	(UConnection::execute): Use it.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	Coding style
	* src/ucommandqueue.cc: Shorten scopes.
	Use switch where appropriate.
	Use array notations where more appropriate than pointers.

2007-01-11  Akim Demaille  <demaille@gostai.com>

	libport up
	* src/uconnection.cc, src/uconnection.hh,
	* src/userver.cc, src/userver.hh: Adjust.

2006-12-29  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix includes.
	* src/ucommand.hh: include cstdarg.

2006-12-29  Akim Demaille  <akim.demaille@free.fr>

	Nuke two warnings
	* src/uexpression.cc: Provide defaults to two switches.

2006-12-29  Akim Demaille  <akim.demaille@free.fr>

	Use abort to please gcc
	* src/ucomplaints.cc: instead of continuing the execution.

2006-12-29  Akim Demaille  <akim.demaille@free.fr>

	More send_error
	None of these are exercised by the test suite...
	* src/ucommand.hh (send_error): Now exported.
	* src/ucommand.cc: Adjust.
	* src/uvariablename.cc: Use it.

2006-12-29  Akim Demaille  <akim.demaille@free.fr>

	UVariableName::UDeriveType
	* src/utypes.hh (UDeriveType): Move to...
	* src/uvariablename.hh: here.
	Adjust all uses.
	* src/parser/bison/ugrammar.y (TOK_NORM): Use the same
	string in the parser as it is in the scanner.
	Use more string reprensentation for symbols.

2006-12-29  Akim Demaille  <akim.demaille@free.fr>

	Display the expression locations in errors
	* src/uexpression.hh, src/uexpression.cc (eval_LIST, eval_GROUP):
	New, extracted from...
	(eval): here.
	(send_error): New.
	Use it instead of snprintf + send dark incantations.

2006-12-29  Akim Demaille  <akim.demaille@free.fr>

	Put UDefType in its class
	* src/utypes.hh (UDefType): Move to...
	* src/ucommand.hh (UCommand_DEF::UDefType): here.
	Adjust all uses.
	* src/uvariablename.hh (id_type): Remove, unused.
	Adjust all "uses" (that were useless).

2006-12-29  Akim Demaille  <akim.demaille@free.fr>

	Attach locations to UExpressions
	* src/uexpression.hh, src/uexpression.cc (UExpression): Derive
	from UAst.
	Adjust all uses.

2006-12-29  Akim Demaille  <akim.demaille@free.fr>

	Remove useless prefix
	* src/ucommand.hh: No need to specify UCommand:: where we're in it.
	Besides, it actually comes from UAst.

2006-12-29  Akim Demaille  <akim.demaille@free.fr>

	Fix location tracking
	When load is executed, we must preserve the current location.
	* src/parser/uparser.cc (UParser::process_): When loading a file
	backup the current location and restore it to keep track of
	the location in the input.

2006-12-27  Akim Demaille  <akim.demaille@free.fr>

	Add location to command errors
	* src/uast.hh (loc): New.
	* src/ucommand.cc (send_error): Also report the location of
	the broken command.

2006-12-27  Akim Demaille  <akim.demaille@free.fr>

	On second thought, pass the command to send_error
	* src/ucommand.cc (send_error): Instead of taking a tag,
	take a command and use its tag.
	And use an string stream for the format.

2006-12-27  Akim Demaille  <akim.demaille@free.fr>

	send_error
	* src/ucommand.cc (send_error): New.
	Use it instead of open coded error strings.
	It could be part of UCommand, I'm not sure.

2006-12-27  Akim Demaille  <akim.demaille@free.fr>

	execute_
	* src/utypes.hh (UCommandStatus): Move to...
	* src/ucommand.hh (UCommand::Status): here.
	(execute): Be = 0!!!
	(execute_): New.
	Let all the heirs implement it instead of execute.
	Simplify a bazillion of "return status =".
	Adjust all dependencies.

2006-12-27  Akim Demaille  <akim.demaille@free.fr>

	Style changes
	* src/ucommand.cc: Use if where switch was not so appropriate.

2006-12-27  Akim Demaille  <akim.demaille@free.fr>

	Factor print, and add consts
	* src/uasynccommand.cc, src/uasynccommand.hh, src/ubinary.cc,
	* src/ubinary.hh, src/ucommand.cc, src/ucommand.hh,
	* src/uconnection.cc, src/ucopy.hh, src/uexpression.cc,
	* src/uexpression.hh, src/unamedparameters.cc,
	* src/unamedparameters.hh, src/uvalue.hh, src/uvariablelist.cc,
	* src/uvariablelist.hh, src/uvariablename.cc, src/uvariablename.hh:
	(print, copy): these are const methods.
	Adjust all uses.
	Also, remove some useless includes.
	* src/ucommand.cc, src/ucommand.hh (UCommand::copy): This is
	= 0 for God sakes!
	(UCommand::print_): New.
	(UCommand::print): Adjust to using it.
	* src/uvalue.cc: Stop using ucopy here, more care is needed.

2006-12-27  Akim Demaille  <akim.demaille@free.fr>

	More DEBUG_ATTR
	* src/ucommand.cc: here.

2006-12-27  Akim Demaille  <akim.demaille@free.fr>

	Shorten scopes
	* src/uconnection.cc: here.

2006-12-27  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Restyle.
	* src/memorymanager/memorymanager.cc,
	* src/network/bsdnet/network.cc,
	* src/parser/bison/flex-lexer.hh,
	* src/uasynccommand.cc,
	* src/uasyncregister.cc,
	* src/ucommand.cc,
	* src/ueventcompound.cc,
	* src/ueventhandler.cc,
	* src/ueventinstance.cc,
	* src/ueventmatch.cc,
	* src/uexpression.cc,
	* src/userver.cc,
	* src/ustring.cc,
	* src/utypes.hh,
	* src/uvalue.cc,
	* src/uvar.cc: Formatting changes.

2006-12-26  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Restyle.
	* src/memorymanager/memorymanager.cc,
	* src/network/bsdnet/network.cc,
	* src/ucommand.cc,
	* src/uconnection.cc,
	* src/uexpression.cc: Here.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	Comment changes
	* src/uvariablename.hh: here.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	s/_FLAVORS//
	* src/ucommand.hh (WHILE_FLAVORS, LOOPN_FLAVORS, FOREACH_FLAVORS)
	(FOR_FLAVORS, TREE_FLAVORS): Rename as...
	(WHILE, LOOPN, FOREACH, FOR, TREE): these.
	These names were just to ease the transition of semantics of
	these symbols.
	Adjust all uses.

	* src/uconnection.cc: Use a brand new C++ instruction: for.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	Factor the command flavors
	* src/utypes.hh (UNodeType): Move to...
	* src/flavorable.hh (Flavorable::UNodeType): this new class.
	* src/ucommand.hh, src/ucommand.cc (U
	(to_string, kind, nodetype): Remove, now useless.
	(WHILE, WHILE_AND, WHILE_PIPE): Remove, replaced with...
	(WHILE_FLAVORS): this.
	(LOOPN, LOOPN_AND, LOOPN_PIPE): Remove, replaced with...
	(LOOPN_FLAVORS): this.
	(FOREACH, FOREACH_AND, FOREACH_PIPE): Remove, replaced with...
	(FOREACH_FLAVORS): this.
	(FOR, FOR_AND, FOR_PIPE): Remove, replaced with...
	(FOR_FLAVORS): this.
	(TREE): Rename as...
	(TREE_FLAVORS): this.
	(UCommand_TREE, UCommand_WHILE, UCommand_LOOPN, UCommand_FOREACH)
	(UCommand_FOR): Inherit from Flavorable.
	Adjust ctors and copy.
	(UCommand_TREE::node): Remove, duplicate flavor_.
	Adjust all uses.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	Restyling
	* src/uvariablename.cc: Shorten scopes.
	Use Boolean expressions instead of statements.
	Use less useless variables.

2006-12-26  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Restyle.
	* src/uasynccommand.cc,
	* src/uasyncregister.cc,
	* src/ubinder.cc,
	* src/ucommand.cc,
	* src/ucommand.hh,
	* src/ucommandqueue.cc,
	* src/uconnection.cc,
	* src/ueventcompound.cc,
	* src/ueventhandler.cc,
	* src/ueventinstance.cc,
	* src/ueventmatch.cc,
	* src/uexpression.cc,
	* src/ugroup.cc,
	* src/uobj.cc,
	* src/uobject.cc,
	* src/uqueue.cc,
	* src/userver.cc,
	* src/userver.hh,
	* src/ustring.cc,
	* src/uvalue.cc,
	* src/uvar.cc,
	* src/uvariable.cc,
	* src/uvariablename.hh: Formatting changes.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	More DEBUG_ATTR
	* src/ucommand.cc (DEBUG_ATTR_I): New.
	Use it, and use DEBUG_ATTR also more widely.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	Shorten scopes
	* src/ucommand.cc (UCommand_AT::execute): here.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	Pass tags as std::string
	* src/ucommand.cc, src/uvariablename.cc: here.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	Move the doc where it belongs: the header file.
	* src/uconnection.hh, src/uconnection.cc: here.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	Local restyling
	* src/uvariablename.cc: here.
	Shorten and cut var scopes.
	Compute booleans as expressions instead of using statements.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	if for -> for
	* src/uvariable.cc: Iterate over empty structures just as on
	non-empty ones.
	And use useful identifiers.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	Use #if 0 to comment out code
	* src/ugroup.cc: here.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	UVariable::UVarSet
	* src/utypes.hh (UVarSet): Move to...
	* src/uvariable.hh (UVariable::UVarSet): here.
	Adjust all uses.
	Remove tautologic (and incorrect) documentation.
	(setName): Move the implementations into the *.cc file.
	(uvalue.hh, ustring.hh): Remove the includes.
	Adjust all users that did not properly include uvalue.hh.
	* src/userver.cc (UServer::work): Remove the useless variable
	selfError. That frees us from additional includes.

2006-12-26  Akim Demaille  <akim.demaille@free.fr>

	s/CMD_//
	* src/ucommand.hh (Type): Remove the CMD_ prefix.
	Adjust all uses.

	* src/parser/bison/ugrammar.y: More "tag" uses.

2006-12-26  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	More restyling.
	* src/ucommand.cc,
	* src/ucommandqueue.cc,
	* src/uexpression.cc,
	* src/uobj.cc,
	* src/uvalue.cc,
	* src/uvar.cc,
	* src/uvariablename.cc: Restyle. Formatting changes. Some potentially
	  dangerous default cases were removed. If they were intended, rewrite
	  them as:
	  default: /* skip */
	    break;
	  Meanwhile we have more compiler warnings about cases not handled in
	  switch.

2006-12-25  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Restyle.
	* src/ucommand.cc,
	* src/ucommandqueue.cc,
	* src/uconnection.cc,
	* src/ueventhandler.cc,
	* src/ueventmatch.cc,
	* src/uexpression.cc,
	* src/ugroup.cc,
	* src/uobj.cc,
	* src/uobject.cc,
	* src/uqueue.cc,
	* src/uvalue.cc,
	* src/uvar.cc,
	* src/uvariable.cc,
	* src/uvariablename.cc,
	* src/uvariablename.hh: Here. Formating changes.

2006-12-25  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	This should have been done much sooner...
	change 'inherit' to 'inherits'
	* src/parser/bison/ugrammar.y: done.
	* src/parser/bison/utoken.l: done.

2006-12-25  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	change email notification to kernel1@gostai.com
	* vcs/local.rb: done.

2006-12-25  Akim Demaille  <akim.demaille@free.fr>

	Factor handling of tags in the grammar
	* src/parser/bison/ugrammar.y (tag): New.

2006-12-25  Akim Demaille  <akim.demaille@free.fr>

	Factor the handling of flags
	I'd really appreciate if someone could add tests on the use
	of flags...
	* src/parser/bison/ugrammar.y (flags, flags.0.1): Remove.
	(flag, flags.0, flags.1): New.

2006-12-25  Akim Demaille  <akim.demaille@free.fr>

	Rule permutation
	* src/parser/bison/ugrammar.y: Highlight the similarity bw rules
	using flags.

2006-12-25  Akim Demaille  <akim.demaille@free.fr>

	Simplifications
	* src/uexpression.hh (UExpression::Type): Remove the EXPR_ prefix.
	Adjust all uses.
	(UExpression::UExpression): Remove the ctor that takes an ufloat*,
	since any it takes a copy.
	Use assert instead of claiming some belief in comments.

	* src/parser/bison/ugrammar.y (take): New.
	Use it to free leaking ufloats.
	There are many more, but the rest of the code must first take
	ufloats by value, not pointer.
	(flags.0.1): New.
	(flags): Use it.
	* src/uatcandidate.cc (trigger): Simplify the control flow logic.

2006-12-24  Akim Demaille  <akim.demaille@free.fr>

	Reduce code bloat in the parser
	The assembly flags are no longer needed on MIPS to compile
	the parser.  Maybe we can also leave -O2.
	* src/parser/bison/ugrammar.y (NEW_EXP, NEW_BIN, MEMCHECK): Remove
	all these macros, replaced by...
	(new_exp, new_bin, memcheck): these.
	(uparser): Rename as...
	(up): this.
	(TOK_UECHO): Rename as...
	(TOK_ECHO): this.
	Use string instead of token names when possible.
	* src/parser/bison/utoken.l: Adjust.
	* src/parser/uparser.hh, src/parser/uparser.cc (UFlexer):
	Remove, useless.

2006-12-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Revert former change.
	* src/uexpression.cc: const_cast strstr's return value. It is needed
	  on Windows/VC++ where strstr is overloaded: when one of its
	  arguments is const, both are const and the return value is also
	  const.

2006-12-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	UASyncCommand is an UCommand.
	In my quest to remove evil old-style C casts from the code, I noticed
	that sometimes, an UASyncCommand* gets casted in an UCommand*. This is
	plain wrong since UASyncCommand doesn't inherit UCommand. Worse: the
	resulting UCommand* could be used to call getTag method and this
	method doesn't exist in UASyncCommand. Since only UCommand_AT and
	UCommand_WHENEVER use UASyncCommand and since they used to inherit
	both UCommand and UASyncCommand, I fixed this by making UASyncCommand
	inherit UCommand and by making UCommand_{WHENEVER,AT} inherit only
	UASyncCommand. Now it is safe to use an UASyncCommand in the context
	of an UCommand.

	* src/ucommand.hh: Don't include uasynccommand.hh.
	  (UCommand_AT, UCommand_WHENEVER): Move to...
	* src/uasynccommand.hh: Here.
	  (UASyncCommand): Inherit from UCommand.
	  (UCommand_AT, UCommand_WHENEVER): Inherit from UASyncCommand.

	* src/ucommand.cc,
	* src/uasynccommand.cc: Fix initialization lists accordingly.

	* src/uatcandidate.cc,
	* src/uvariablelist.cc,
	* src/parser/bison/ugrammar.y,
	* src/ufunction.cc,
	* src/uobject.cc,
	* src/uvariable.cc,
	* src/uvariablename.cc: Fix includes.
	* src/uexpression.cc: Ditto + remove formerly invalid (now useless)
	  casts.

	* src/ustring.cc: Remove useless casts.
	* src/uconnection.cc: Ditto + rewrite unsafe upward casts using
	  dynamic_cast and assert when dynamic_cast fails.

	* src/uvariablename.hh,
	* src/ughostconnection.cc: Aesthetic change.

2006-12-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	More restyling.
	* src/ubinary.cc,
	* src/ucommand.cc,
	* src/ughostconnection.cc,
	* src/uqueue.cc,
	* src/ustring.cc,
	* src/usystem.cc,
	* src/uvalue.cc: Use static_cast where possible. static_cast is ugly
	  and makes the code harder to read, but it's safer and it's the price
	  to pay when you deal with unsafe C functions when you should be
	  using high level C++ abstractions.

2006-12-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Restyle.
	* src/Makefile.am,
	* src/uast.hh,
	* src/ucommand.hh,
	* src/uexpression.cc,
	* src/uvariable.cc,
	* src/ustring.hh: Remove trailing whitespaces.

	* src/ueventinstance.cc,
	* src/uasyncregister.cc,
	* src/uvalue.cc,
	* src/ueventcompound.cc,
	* src/uasynccommand.cc,
	* src/ueventmatch.cc: Use libport/cstdio.

	* src/uvar.cc: Remove unecessary parenthesis.

2006-12-23  Akim Demaille  <demaille@gostai.com>

	Update tests
	* src/uexpression.cc: Simplify error message.

2006-12-23  Akim Demaille  <demaille@gostai.com>

	More specific errors
	* src/uexpression.cc: For "load" and "exec".

2006-12-23  Akim Demaille  <demaille@gostai.com>

	More sendf
	* src/ucommand.cc: Use more sendf than send.

2006-12-23  Akim Demaille  <demaille@gostai.com>

	Fix multiple definitions
	* src/uast.hh (UAst::UAst): inline the implementation.

2006-12-23  Akim Demaille  <demaille@gostai.com>

	Simplify UCommand uses
	* src/ucommand.cc: Don't qualify when used by the definer.
	* src/uconnection.cc: Fix C++ -> C of strings.

2006-12-23  Akim Demaille  <demaille@gostai.com>

	Update UConnection::sendf
	* src/uconnection.hh, src/uconnection.cc (sendf): Take a string, not
	a char*.
	Add one for va_list.
	* src/ucommand.hh, src/ucommand.cc: Adjust.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Add location to UCommands
	* src/uast.hh: New.
	* src/Makefile.am: Adjust.
	* src/ucommand.hh (UCommand): Derive from UAst.
	Adjust all dependencies.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Update test framework
	* configure.ac: Adjust.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Store all the parsed file names
	* src/parser/uparser.hh, src/parser/uparser.cc (files, files_):
	New.
	(filename_): Now a pointer.
	* src/parser/bison/ugrammar.y: Let the locations' file names be
	const.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Coding style changes
	* src/ucommand.cc: here.
	(kind): New.
	Use it.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Less headers
	* src/userver.hh: Do not include ubinder.hh to lighten the
	dependencies.
	* src/ucommand.cc, src/uconnection.cc, src/uobj.cc,
	* src/uvariable.cc: do it.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Update tests
	* Makefile.am: Fix.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Missing include
	* src/uvariable.cc (ubinary.hh): Include it.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Prepare for new tests/
	This checkin probably does not work, but is needed to serialize
	complex svn directory changes.
	* tests: Remove.
	Will be replaced by an svn:externals onto urbivalid.
	* configure.ac: tests/ is now a package, not a simple subdir.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Less includes in headers
	* src/uobj.hh, src/ucommand.hh: Remove several includes.
	* src/parser/bison/ugrammar.y, src/ucommand.cc, src/uconnection.cc,
	* src/uexpression.cc, src/uobj.cc, src/uvalue.cc:
	Add the missing includes.
	Rename iterators.
	Formatting changes.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Simplifications
	* src/ucommand.hh: Make private most attributes.
	(copybase): Return the modified argument to please the call sites.
	The previous return value was *never* used.
	(nbval): Remove, unused.
	* src/ucommand.cc: Adjust.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Let variables be variables
	not attributes...
	* src/ucommand.hh, src/ucommand.cc (tmpeval): Remove.
	(v): New local variable in several places.
	Also, factor common code.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Minor changes
	* src/ucommand.cc, src/uconnection.cc, src/uconnection.hh: here.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Restyle
	* src/ucommand.cc: here.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Refactor
	* src/ucommand.cc: A lot of simple by very effective
	simplifications.
	Some are really absurd, reading the patch is encouraged if
	you need a laugh.

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Add some workarounds for bug #114.
	* src/parser/bison/ugrammar.y: Work around the fact that a
	  taggedcommand can be a command, a command can be an instruction, and
	  instruction can be empty (and a NULL pointer). Some NULL pointers
	  in the AST happen to be fatal for the kernel. Report a parse error
	  for those.

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Remove an unsafe cast.
	* src/parser/bison/ugrammar.y: Remove an unsafe cast from UCommand* to
	  UCommand_TREE*. Use dynamic_cast instead.

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Formatting changes.
	* src/parser/bison/ugrammar.y: Clean coding-style. Remove useless C
	 casts excepted where they are necessary to pick up an overload (in
	 this case: Use static_cast instead).

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Leak less memory when adding an alias.
	* src/userver.cc (UServer::addAlias): Leak only a string (char*, not
	  std::string) instead of leaking that string plus an UString.

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix initialization order and code cleanup.
	* src/userver.cc (ctor): Fix initialization order.
	  Some code cleanup (including using ++iterator instead of iterator++
	  where possible).

2006-12-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix includes.
	* src/ucommand.hh: Move cstdarg to.
	* src/ucommand.cc: ... Here.
	* src/userver.hh: Include cstdarg.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Clean up
	* src/ucommand.cc (debug, DEBUG_ATTR, to_string): New.
	(nodeType_foreach, nodeType_for, nodeType_loopn): Merge into...
	(nodetype): this.
	Extend for WHILE.
	Use them all.
	Remove useless parens.
	Rename iterators.
	Shorten scopes.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	Clean up
	* src/ubinder.hh, src/ubinder.cc: Here.
	Use simple iterator names.

2006-12-22  Akim Demaille  <demaille@gostai.com>

	debug (va_list)
	* src/userver.hh, src/userver.cc (debug): One more version,
	taking a va_list.

2006-12-21  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Add a dirty workaround for bug #113.
	* src/uconnection.cc (UConnection::received): Here.

2006-12-21  Akim Demaille  <akim@lrde.epita.fr>

	buffer_t
	* src/ucommand.cc (buffer_t): New.
	Use it.
	(tmpbuffer): Rename as...
	(buf): this.
	Let's keep the names short.
	* src/ucommand.hh (MAXSIZE_TMPMESSAGE): Remove.
	Let's keep the headers simple.

2006-12-21  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix CLEANFILES.
	* Makefile.am,
	* src/Makefile.am (CLEANFILES): Add vc80.pdb (VC++ puts the equivalent
	  of the debug stuff generated by -g in this file).

2006-12-20  Jean-Christophe Baillie  <baillie@gostai.com>

	urbivalid-up.

2006-12-20  Jean-Christophe Baillie  <baillie@gostai.com>

	fix small bug in speed:0 modified assignment.
	* src/ucommand.cc: fix behavior. No more 0=0.0001 ugly stuff.

2006-12-20  Jean-Christophe Baillie  <baillie@gostai.com>

	Fix ticket [111].
	fix synchronous assignment problem with add mode.
	* src/ucommand.cc: use previous value as startvalue to insure that it
	will remain unchanged between several assignments during the same
	cycle.

2006-12-20  Jean-Christophe Baillie  <baillie@gostai.com>

	formatting change
	* src/ucommand.cc: done.

2006-12-20  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Use libport/cstdio.
	* src/ucommand.cc,
	* src/uconnection.cc,
	* src/uexpression.cc,
	* src/uobj.cc,
	* src/uobject.cc,
	* src/userver.cc,
	* src/usystem.cc,
	* src/uvariable.cc,
	* src/uvariablename.cc: Here.

2006-12-20  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix include.
	* src/uvalue.hh: Fix typo.

2006-12-20  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Add missing include.
	* src/uvalue.hh: include ref-pt.hh from libport.

2006-12-20  Akim Demaille  <akim.demaille@free.fr>

	Include cstdarg
	* src/uconnection.cc: here.

2006-12-19  Akim Demaille  <akim.demaille@free.fr>

	UConnection::sendf
	* src/uconnection.hh, src/uconnection.cc (UConnection::sendf): New.
	* src/ucommand.cc, src/userver.cc, src/uvariablename.cc:
	perl -0 -pi -e 's/char (\w+)\[([^\]]+)\];
	\s*snprintf\s*\(\1,\s*\2,\s* (.*?)\);
	(\s*connection->send)\(\1,\s*(.*?)\);/$4f ($5, $3);/gms' src/*c
	Plus fixes by hand when it matched too well.

2006-12-19  Akim Demaille  <akim.demaille@free.fr>

	Simplifications
	* src/userver.cc: Use C++ like ctors.
	Someone will have to clean the warnings.
	And maybe continue to improve this ctor.
	Also, use simple iterator variable names (e.g., i).

2006-12-19  Akim Demaille  <akim.demaille@free.fr>

	Use an impossible name for removeFunction
	* src/userver.cc (UServer::UServer): here.

2006-12-19  Akim Demaille  <akim.demaille@free.fr>

	Put back the old definition of FREEMEM
	* src/utypes.hh: here.
	The test timed out on Windows.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Restore the newest definition of FREEMEM
	* src/utypes.hh: Here.
	Up till now we had 13/22 errors on Windows.  I suspect we
	still do after this patch.  Then we'll have to study the uses
	of ADDMEM, that will be the only remaining culprit.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Functions own their name
	* src/ufunction.cc, src/ufunction.hh (funname): Now an UString.
	Private.
	* src/ucommand.cc, src/userver.cc: Adjust.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Formatting and parens changes
	* src/ufunction.hh, src/userver.cc: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Restore the newest LIBERATE/ADDOBJ/FREEOBJ
	* src/utypes.hh: here.
	The problem (early failures on Aibo and Windows) is probably
	with the definition of ADDMEM and FREEMEM, not these.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Remove old GCC 2 hacks
	* src/ucommand.cc, src/uvalue.cc: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uqueue.cc: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Use libport/ref-pt.hh
	* src/fwd.hh: Complete.
	* src/parser/bison/ugrammar.y: Adjust.
	* src/ucallid.cc,
	* src/ucallid.hh,
	* src/ucommand.cc,
	* src/ucommand.hh,
	* src/uconnection.cc,
	* src/ueventcompound.hh,
	* src/uexpression.cc,
	* src/unamedparameters.cc,
	* src/uobj.cc,
	* src/uobject.cc,
	* src/userver.cc,
	* src/utypes.hh,
	* src/uvalue.cc,
	* src/uvalue.hh,
	* src/uvariable.cc,
	* src/uvariablelist.cc:
	Ditto.
	Remove includes from the hh files, sort those in cc files.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Restore old ADDMEM macros
	* src/utypes.hh: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	ucomplaints.*
	* src/ucomplaints.cc, src/ucomplaints.hh: New.
	* src/ucommand.cc, src/uconnection.cc, src/uconnection.hh,
	* src/utypes.hh, src/Makefile.am: Adjust.

2006-12-19  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Code clean-up.
	* src/ucommand.cc: Remove useless casts. Replace unsafe casts by
	  dynamic_cast.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Don't define tmpbuffer globally
	* src/ucommand.hh, src/ucommand.cc: Define it where used.
	* src/uvariablename.cc: Adjust.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Update uobject

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Shorten scopes
	* src/ucommand.cc (UCommand_ASSIGN_VALUE::execute): here.

2006-12-19  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Don't fail if valgrind was requested but can't be found.
	* tests/check-file: .

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Warn about memory instead of corruptions
	* src/uconnection.cc (received): Use a more appropriate warning here.

2006-12-19  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix test suite.
	* tests/check-file: Add missing `eval's.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Remove THESERVER
	* src/network/bsdnet/connection.cc,
	* src/network/bsdnet/network.cc: Use ::urbiserver.

2006-12-19  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Add support for Valgrind.
	* Makefile.am (maintainer-check, valgrind-check): New.
	* tests/check-file: Run valgrind if USE_VALGRIND or WITH_VALGRIND is a
	  non empty environment variable.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Adjust to libport::hash_map_type
	* src/utypes.hh: here.

2006-12-19  Akim Demaille  <demaille@gostai.com>

	Remove Wno-effc++
	* configure.ac: here.

2006-12-19  Jean-Christophe Baillie  <baillie@gostai.com>

	update uobject externals

2006-12-19  Jean-Christophe Baillie  <baillie@gostai.com>

	strMorph(s) will morph the UCommand into the command written
	in s, using 'exec' as an intermediary to handle s.

	code factoring
	* src/ucommand.cc: use strMorph to factor string->command code.

2006-12-19  Jean-Christophe Baillie  <baillie@gostai.com>

	Support for kernel system messages has been added through the USystem
	class that uobjects can inherit. This USystem class is a generic proxy
	to kernel informatio and kernel messages, only usable in pluggin mode.

	Read the documentation in usystem.hh for application on the
	NEW_CHANNEL kernel message channel and usage in UCommand_NEW to catch
	failed 'new' attempts (modif added for mefyl).

	Add support for kernel system messages with USystem, application to
	* src/Makefile.am: add usystem to the build process.
	* src/fwd.hh: declare USystem.
	* src/ucommand.cc: add support for NEW_CHANNEL messages and add
	factoring code with 'strMorph'.
	* src/ucommand.hh: add strMoprh and sysCall flag.
	* src/userver.cc: init 'systemObjects', vector of registered USystem
	objects lists. The vector index is the message channel.
	* src/userver.hh: add systemObjects.
	* src/usystem.cc: New.

2006-12-15  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Remove extra qualification.
	* src/uexpression.hh (eval_EXPR_FUNCTION): Don't declare with the
	 'UExpression::' qualification because it chokes on g++ 4.1.

2006-12-15  Akim Demaille  <akim@lrde.epita.fr>

	eval_EXPR_FUNCTION
	* src/uexpression.hh, src/uexpression.cc (eval): Extract
	the handling of EXPR_FUNCTIONs to...
	(eval_EXPR_FUNCTION): here.
	No other changes (in spite of what the diff may look like).

2006-12-15  Akim Demaille  <akim@lrde.epita.fr>

	EVAL_EXPR_BIN_BOOLEAN
	* src/uexpression.cc: New.
	Use it

2006-12-15  Akim Demaille  <akim@lrde.epita.fr>

	More scope reduction
	* src/uexpression.cc: Here.

2006-12-15  Akim Demaille  <akim@lrde.epita.fr>

	Shorten scopes
	* src/uexpression.cc: Here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Shorten scopes
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Shorten scopes
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	reuse name from UBlendType
	* src/uexpression.cc: here.
	* src/ucommand.cc: Formatting changes.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Put UCommandType in UCommand
	* src/utypes.hh (UCommandType): Rename as...
	* src/ucommand.hh (UCommand::Type): this.
	Adjust all callers.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Shorten scopes
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Shorten scopes
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Factor binaries
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Do not allow string order-comparison
	* src/uexpression.cc: Here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Upgrade ENSURE_COMPARISON
	* src/uexpression.cc (ENSURE_COMPARISON): Be given e1 and e2.
	Adjust callers.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	EVAL_EXPR_COMPARISON
	* src/uexpression.cc: New.
	Use it.
	Shorten scopes.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	eval_EXPR_VARIABLE
	* src/uexpression.hh, src/uexpression.cc (eval_EXPR_VARIABLE): New.
	(eval): Extracted from here.
	(devicename, methodname): Remove, unused.
	(errSize): Remove, used, but useless.
	(errorString): Use a tighter scope.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Shrink the scope of ret
	* src/uexpression.cc: here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Add braces
	* src/uexpression.cc: in this monster.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Formatting changes
	* src/parser/bison/ugrammar.y: here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	windows.hh
	* src/console.cc: Adjust.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Clean UExpressions
	* src/utypes.hh (UExpressionType): Move to...
	* src/uexpression.hh, src/uexpression.cc (UExpression::Type): Here.
	Adjust all dependencies.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Formatting changes
	* src/ucommandqueue.cc: here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Update uobject

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Include cassert
	* src/parser/uparser.cc: here.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Fix location tracking
	* src/parser/uparser.cc, src/parser/uparser.hh (UParser::loc_):
	New.
	* src/parser/bison/ugrammar.y: Use it.
	Formatting changes.
	Remove useles includes.
	* tests/Makefile.am: One less expected failure.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Match EOF one by one
	* src/parser/bison/utoken.l: To avoid counting two eol on \n\r for
	instance.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Update uobject
	* src/Makefile.am: Adjust.
	* src/utypes.hh: Include utypes-common.hh.
	Import UBlendType definitions.
	* src/uvariable.hh: UBlend -> UBlendType.
	* src/uvar.cc: Remove what is done elsewhere.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Don't declare static const int in declarations
	* src/network/bsdnet/connection.hh: Use enums.

2006-12-14  Akim Demaille  <akim.demaille@free.fr>

	Remove version.hh.in
	* src/version.hh.in: Remove.
	We use the one in build-aux.

2006-12-13  Akim Demaille  <akim.demaille@free.fr>

	Report file names in parse errors
	* src/parser/uparser.cc, src/parser/uparser.hh (filename_): New.
	* src/parser/bison/ugrammar.y: Use it to initialize @$.
	* tests/check-file: Normalize the path of included files
	to avoid difference due to builddir, srcdir etc.

2006-12-13  Akim Demaille  <akim.demaille@free.fr>

	Nuke a few useless includes
	I have a small computer, and I'm tired of wasted cycles.
	* src/fwd.hh: Complete and sort.
	* src/parser/bison/ugrammar.y, src/ucommand.cc, src/uconnection.hh,
	* src/ueventhandler.cc, src/uexpression.cc, src/ughostconnection.cc,
	* src/uobj.cc, src/userver.cc, src/userver.hh:
	Remove a few includes from userver.hh, since it's included by
	virtually all the files.
	Adjust the missing dependencies in *.cc files.

2006-12-13  Akim Demaille  <akim.demaille@free.fr>

	Minor parser cleanups
	* src/parser/uparser.cc, src/parser/uparser.hh (parser_type): New.
	Use it.
	(uflexer_): Rename as...
	(scanner_): this.
	(scan): Remove.
	* src/parser/bison/ugrammar.y: Adjust: directly use the UParser's
	scanner.

2006-12-13  Akim Demaille  <akim.demaille@free.fr>

	More %printer
	* src/parser/bison/ugrammar.y: For <val>.

2006-12-13  Akim Demaille  <akim.demaille@free.fr>

	More concrete tokens
	* src/parser/bison/ugrammar.y: here.

2006-12-13  Akim Demaille  <akim.demaille@free.fr>

	Add tests for load
	* src/console.cc: Support URBI_PATH.
	* src/userver.cc (loadFile): Reduce scopes.
	* tests/Makefile.am (TEST_ENVIRONMENT): New.
	* tests/check-file: Also accept XXXXXXX "prompts".
	Pass URBI_PATH to find files to load.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Remove UCommand_LOAD
	* src/ucommand.cc, src/ucommand.hh: It has been obsoleted by the
	previous patch.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Merge load into exec
	* src/uexpression.cc: Merge the handling of load into that of exec.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	UServer::path
	* src/userver.cc, src/userver.hh (path_type, path, find_file):
	New.
	(loadFile): No longer pure virtual, provide an effective default
	version.
	* src/console.cc (loadFile): Remove, this version is now in the
	kernel.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	include fstream
	* src/parser/uparser.cc: here.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Add file parsing
	* src/parser/uparser.cc, src/parser/uparser.hh (parse_): New.
	(process): Use it.
	Add an overloaded version meant to parse file, not a loaded buffer.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	UParsers know their UConnection
	* src/parser/uparser.cc, src/parser/uparser.hh (UParser::connection):
	New.
	(UParser::UParser, UParser::process): Adjust.
	* src/ucommand.cc, src/uexpression.cc, src/userver.cc: Adjust.
	* src/uconnection.cc, src/uconnection.hh: Pass the connection
	to the parser ctor.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/ucommand.hh, src/userver.cc: here.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	White space changes
	* src/ucommand.cc: here.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	UDEBUG_EXPR
	* src/uexpression.cc: New.
	(UExpression::print): Use it.
	Should be used more widely.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	One parser per connection
	* src/userver.cc, src/userver.hh: No longer aggregate a parser.
	* src/uconnection.cc, src/uconnection.hh (parser_, parser): New.
	(lastloc): Move to...
	* src/parser/uparser.hh: here.
	* src/parser/bison/ugrammar.y: Adjust.
	* src/ucommand.cc, src/uexpression.cc: Adjust to find the connection's
	parser, not the server's.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Add printers for strings in the parser
	* src/ustring.hh (operator<< (ostream, UString)): New.
	* src/parser/bison/ugrammar.y: Add %printer for UString value.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uconnection.cc: here.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Return access to members by reference, not pointers
	* src/uconnection.hh (recvQueue): Return a reference, to make
	it clear the ownership is not given away.
	* src/console.cc, src/userver.cc: Adjust.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Fix the previous checkin
	* src/uconnection.cc: Propagate the fact that queues are no
	longer pointers.
	* src/uvalue.cc: Ditto.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Aggregate UQueues in UConnection
	* src/uconnection.cc, src/uconnection.hh: Here.
	Adjust ctor and dtor.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	message for warnings
	* src/uconnection.cc (error_message): Rename as...
	(message): this.
	(message): New overloaded version for warnings.
	(UConnection::warning): Use it.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	error_message
	* src/uconnection.cc (error_message): New.
	Handle UERROR_MEMORY_WARNING.
	(UConnection::error): Use it, it was extracted from here.
	Simplify.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uconnection.cc, src/uobject.cc: Here.

2006-12-12  Razik Yousfi  <yousfi@gostai.com>

	Remove useless attributes.
	* src/uvariablename.hh: Remove useless attributes.
	* src/uvariablename.cc: Use local variables.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Don't be afraid to pass static strings to send
	* src/uexpression.cc: here, instead of first saving them
	in errorString.
	Remove one definition of errorString that is now useless.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uexpression.cc: Also, reduce some scopes.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Remove unused attribute
	* src/ucommand.hh (hmi): Remove.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Simplify the logic of UCommand_LOAD::execute
	* src/ucommand.cc: here.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	UParser::*_type
	* src/parser/uparser.hh (token_type, semantic_type)
	(location_type): New.
	Use them.

2006-12-12  Akim Demaille  <demaille@gostai.com>

	Prefix (some of) the tokens
	The token "in" was mapped to IN which is used somewhere on
	Windows.  Rather than fighting against this, use names that
	are less dangerous by prefixing then with TOK_.
	More should be needed, but at least that fixes the portability
	issue for now.
	* src/parser/bison/ugrammar.y: here.
	Use concrete names rather than abstract token names.
	More propagation is needed.
	* src/parser/bison/utoken.l: Adjust.

2006-12-12  Akim Demaille  <akim.demaille@free.fr>

	Simplify some piece of crap
	I thought I had seen it all checking student code at EPITA...
	* src/uvariablename.cc, src/uvariablename.hh (hmi2): Don't
	make it a class member, since it's only used as a local variable.
	(getVariable): Simplify.

2006-12-12  Akim Demaille  <akim.demaille@free.fr>

	Simplify scanGroups
	* src/ucommand.cc: here, using variable aliases.
	It should be noted that the test suite does not seem to
	exercise this part.  Someone should write some tests for it.
	* src/uvariablename.cc: Reduce variable scope.

2006-12-12  Akim Demaille  <akim.demaille@free.fr>

	Sort tokens
	* src/parser/bison/utoken.l, src/parser/bison/ugrammar.y:
	Sort tokens.

2006-12-12  Akim Demaille  <akim.demaille@free.fr>

	UParser::result
	* src/parser/uparser.cc, src/parser/uparser.hh: Remove, unused.
	(IN): Remove this #undef coming out of the blue.

2006-12-12  Akim Demaille  <akim.demaille@free.fr>

	UParser::errorMessage
	* src/parser/uparser.cc, src/parser/uparser.hh,
	* src/ucommand.cc, src/uconnection.cc,
	* src/uconnection.hh, src/uexpression.cc:
	(errorMessage): Move to...
	(UParser::errorMessage): here.
	(UParser::process): Simplify.
	Don't use new when there is no reason to.
	Remove initialization perfomed both by process and its callers.
	Using "private" might help in the future...
	Introduce variable shortcuts to improve the readability.

2006-12-08  Razik Yousfi  <yousfi@gostai.com>

	Remove dead code.
	* src/uasynccommand.hh: Remove dead code.
	* src/uasyncregister.hh: Idem.

2006-12-07  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Only MS VC++ doesn't have snprintf.
	But MinGW has it.
	* src/ucommand.cc: Fix accordingly.

2006-12-07  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	snprintf doesn't seem to exist on Win32.
	* src/ucommand.cc: But there is a _snprintf... so use it instead.

2006-12-07  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fixes for Windows.
	* src/network/bsdnet/connection.cc: Use libport's windows.h.
	* src/console.cc: Ditto.
	* src/network/bsdnet/connection.hh: Aesthetic change.
	* src/network/bsdnet/network.hh: Use libport's network.h.
	* src/network/bsdnet/network.cc: Fix includes.
	* src/uconnection.cc: Fix initialization order.

2006-12-07  Razik Yousfi  <yousfi@gostai.com>

	Use ucopy in copy methods.
	* src/uexpression.hh: Add new constructor.
	* src/uexpression.cc,
	* src/uvalue.cc,
	* src/uvariablelist.cc: Use ucopy.
	* vcs/local.rb: Add yousfi@gostai.com.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	Some cleanup
	This code is truly depressing, as soon as one wants to improve
	something, the impedance is so high that everything either falls
	apart, or require immediate care.  Believe it or not, I was
	working on error messages from the parser!
	* src/ucommand.cc, src/ucommand.hh, src/uconnection.cc,
	* src/uexpression.cc, src/ughostconnection.hh: Several
	changes I no longer feel like documenting, which is bad.
	Just as the code.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	uvar-common.cc
	* src/uvar.cc: Remove the code now in uvar-common.cc.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Clean the scanner
	Now the scanner is tracking location accurately when
	there are C comments.
	* src/parser/bison/utoken.l (SET_VALP_STR, RETURN_STR_TOKEN)
	(RETURN_VAL_TOKEN, RETURN_NUM, RETURN_FLAG, RETURN_FLAGTIME)
	(RETURN_TIMEVALUE): New.
	Use them to factor and improve the code.
	(SC_C_COMMENT): New, use it to handle C comments.
	(EOL, BLANKS): New abbrev, use them.
	Put quotes around patterns, to improve readability and
	pretty-printing.
	As usual, remove useless braces and parens.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	UVar::invariant
	* src/uvar.cc: Implement it, and use it.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	Formatting
	* src/uvalue.cc: here.
	And use case instead of if.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	Kill more useless parens
	* src/console.cc,
	* src/ubinder.cc,
	* src/ucommand.cc,
	* src/ufunction.cc,
	* src/uobject.cc,
	* src/uqueue.cc,
	* src/ustring.cc,
	* src/ustring.hh,
	* src/uvalue.cc,
	* src/uvariable.cc: Remove useless parens.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	update externals
	* Makefile.am (ACLOCAL_AMFLAGS, SVN_EXTERNALS): Add sdk.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Simplify UBinder
	* src/ubinder.hh, src/ubinder.cc: Use C++ style ctors.
	(id): A UString, not a pointer.
	(monitors_type): New, use it.
	Change almost all signatures to pass const UString& instead of
	UString*.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/parser/bison/ugrammar.y: here.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Fix LIBERATE
	* src/utypes.hh: Restore the original test.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	Fix deep_clear issues
	* src/ucallid.cc: Swap mem initializers to silent a warning.
	* src/ueventcompound.cc, src/ueventhandler.cc: Fix/clean the
	uses of deep_clear.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	use libport::deep_clear
	* src/ubinder.cc, src/ubinder.hh, src/ucommand.cc,
	* src/uconnection.cc, src/ueventcompound.cc, src/ueventhandler.cc,
	* src/ueventinstance.cc, src/ueventmatch.cc, src/uobj.cc,
	* src/uobject.cc, src/userver.cc:
	here.
	And run restyle.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	Formatting changes
	* src/uatcandidate.cc: here.
	Shorten scopes.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	Clean UCallid
	* src/ucallid.hh, src/ucallid.cc (fun_id, self_id): Be real
	UString instead of pointers.
	(stack, fun_id, self_id, root): Private.
	Formatting changes.
	Use libport::deep_clear.
	Modernize ctor.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	Formatting changes
	* src/ucommand.cc: Here.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	Formatting changes
	* src/utypes.hh: Make it cuter and more factored.

2006-12-05  Akim Demaille  <akim.demaille@free.fr>

	Cleanup UStrings
	A *lot* more is needed.  For instance it is still unclear
	whether str_ can be equal to 0 or not.
	* src/ustring.hh, src/ustring.cc: Add const where appropriate.
	Add more construtors, including from std::string and copy ctor.
	Simplify the code.
	(unArmor, fastArmor): Rename as...
	(un_armor, fast_armor): these.
	Declare the private functions are private.
	* src/parser/bison/utoken.l: Adjust.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Fix distcheck for Windows
	* src/parser/bison/bison.mk: Remove the unexpected back up copy.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	Simplifications
	* src/uatcandidate.cc,
	* src/ucommand.cc,
	* src/uexpression.cc,
	* src/ufunction.hh,
	* src/userver.cc,
	* src/utypes.hh,
	* src/uvariablelist.cc,
	* src/uvariablename.cc:
	Formatting changes.
	No need to cast 0, it has all the pointer types.

2006-12-05  Akim Demaille  <demaille@gostai.com>

	ucopy.hh, formatting changes.
	* src/ucopy.hh: New.
	* src/Makefile.am: Adjust.
	* src/ucommand.cc, src/uvariablename.cc: Ditto.

	* src/uatcandidate.cc, src/ucommand.hh, src/uconnection.cc,
	* src/uexpression.cc, src/ufunction.hh, src/unamedparameters.cc,
	* src/unamedparameters.hh, src/uobject.cc, src/uqueue.cc:
	Formatting changes.

	* src/uobject.cc: Fix a warning by not naming useless arguments.

2006-11-28  Matthieu Nottale  <nottale@gostai.com>

	uobject up

2006-11-27  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fixes for win32/MSVC++.
	* src/network/bsdnet/network.hh,
	* src/network/bsdnet/network.cc,
	* src/network/bsdnet/connection.cc: Include config.h. Define
	  _WIN32_WINNT before including winsock2.h.

	* src/parser/bison/bison.mk: Fix the output generated by flex: Do not
	  include unistd.h if WIN32 is defined. This requires to include
	  config.h but we can't do it from utoken.l since config.h must be
	  included before we attempt to include unistd.h and this occurs
	  at the very beginning of the file, where we don't have control.

2006-11-27  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #77
	* src/ucommand.cc: add missing event deletion in UCommand_EMIT
	destructor + code refactoring.
	* src/ucommand.hh: add removeEvent method.
	* src/utypes.hh: nothing.

2006-11-25  Matthieu Nottale  <nottale@gostai.com>

	Bugfix <TITLE> uobject up
	* src/ucommand.cc: Fix a bug in ucommand_assign::execute.
	* src/uobject.cc: Implement new "cast" overload to const char *.

2006-11-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix CLEANFILES.
	* tests/Makefile.am: Use '+=' because it's already initialized.

2006-11-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix distcheck.
	* Makefile.am (dist-hook): New: remove remaining .svn files.
	* tests/Makefile.am (check-TESTS): Fix the case where srcdir ==
	  buildir.
	  (EXTRA_DIST, CLEANFILES): New.

2006-11-24  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	List the tests that fail in XFAIL_TESTS.
	* tests/Makefile.am: Here.

2006-11-23  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix bug #84.
	* src/parser/bison/ugrammar.y: Raise parse errors in cases where the
	  then-part of an if-else or the at-part of an at-onleave is empty.
	  eg: if (true) else whatever;
	      at (true) onleave whatever;
	* vcs/local.rb: Add myself.

2006-11-23  Matthieu Nottale  <nottale@gostai.com>

	Fix timeout command behavior.
	* src/ucommand.cc: Fix timeout command morphing: command can last less than timeout.

2006-11-23  Matthieu Nottale  <nottale@gostai.com>

	Fix incorrect bin header conversion
	* src/uvalue.cc: Fix empty stream check.

2006-11-23  Matthieu Nottale  <nottale@gostai.com>

	Fix a segfault(assert fail) in uconnection.cc
	* src/ucommand.cc: Add missing initialisation of runlevel1 in UCOMMAND_TREE ctor.

2006-11-23  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix calls to usleep for Windows.
	* src/console.cc: Because 1/1000 = 0 and Sleep(0) might not work.

2006-11-23  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Install version.hh.
	This will be extremely helpful in order to know which version is
	installed (especially for the buildfarm so that it knows which version
	of the kernel it's using when compiling an engine/core/sdk/you name
	it).
	* src/Makefile.am: Here.

2006-11-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Use Sleep on Windows.
	* src/console.cc: Here.

2006-11-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix includes.
	* src/console.cc: include unistd.h for usleep.

2006-11-22  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix initialization orders in ctors.
	* src/ucommand.cc,
	* src/uvalue.cc,
	* src/uvariablename.cc: Here.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Simplify
	* src/uvalue.cc (echo): The code for void.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Restyle pointers
	* src/uatcandidate.cc,
	* src/ucommand.cc,
	* src/ueventhandler.cc,
	* src/uexpression.cc,
	* src/uobject.cc,
	* src/uvalue.cc:
	Use build-aux/reindent.
	* src/uvalue.cc (echo): Deeper overhaul: use switch, for God
	sake!

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Return style.
	* src/uqueue.hh, src/utypes.hh, src/uvariablename.hh: here.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Normalize returns
	* src/ubinder.cc,
	* src/ucommand.cc,
	* src/ucommandqueue.cc,
	* src/uexpression.cc,
	* src/ufunction.cc,
	* src/ughostconnection.cc,
	* src/unamedparameters.cc,
	* src/uvalue.cc,
	* src/uvar.cc,
	* src/uvariable.cc,
	* src/uvariablelist.cc,
	* src/uvariablename.cc: Run build-aux/reindent.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Coding style
	* src/ucommand.cc, src/uconnection.cc, src/uexpression.cc: here.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	:) :) :)
	* src/console.cc: This is C++, not Perl or sh.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Let uconsole accept args
	* src/console.cc: Use argv[1] if given.
	* tests/check-file: Feed uconsole directly, not via stdin,
	since it behaves weirdly on Tsuna's machine.

2006-11-21  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Add a sanity check.
	* src/uconnection.cc: Make sure that stack isn't empty before popping
	  it. Some code cleanup.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Update libport

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/memorymanager/memorymanager.cc: here.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Coding style changes
	* src/network/bsdnet/connection.cc,
	* src/network/bsdnet/network.cc: Run reindent.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Update externals
	* Makefile.am: Include init.mk.
	* tests/Makefile.am: Use SVN_EXTERNALS_PROXY.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	More code formatting changes
	* src/ucommand.cc, src/uconnection.cc, src/uexpression.cc,
	* src/userver.cc, src/uvalue.cc, src/uvariable.cc: Here.

2006-11-21  Akim Demaille  <demaille@gostai.com>

	Run reindent
	* src/ucommand.cc, src/uexpression.cc, src/unamedparameters.cc,
	* src/uqueue.cc, src/uqueue.hh, src/uvalue.cc: Formatting changes.

2006-11-20  Akim Demaille  <akim.demaille@gmail.com>

	Use svn-externals.mk
	* Makefile.am, src/Makefile.am, tests/Makefile.am: here.

2006-11-20  Akim Demaille  <akim.demaille@gmail.com>

	Formatting changes
	* src/ubinary.hh, src/ucommand.hh: here.

2006-11-20  Akim Demaille  <akim.demaille@gmail.com>

	Coding style changes
	* src/ubinary.cc, src/ucommand.cc, src/ucommandqueue.cc,
	* src/uconnection.cc, src/ufunction.cc,
	* src/ughostconnection.cc, src/unamedparameters.cc,
	* src/uobj.cc, src/uqueue.cc, src/userver.cc, src/uvalue.cc,
	* src/uvariable.cc, src/uvariablelist.cc,
	* src/uvariablename.cc:
	White space changes.
	Initialize members a la C++.

2006-11-18  Jean-Christophe Baillie  <baillie@gostai.com>
	rewrite UConnection sending mechanism.

	UConnection::flush is introduced to be able to delay the effective
	sending of the buffer into the connection. Functions like 'sendc' do not
	flush the buffer, whereas 'send' does.

	'sendPrefix" now puts a marker in the circular buffer before the
	prefix and if anything goes wrong in the subsequent sending, the
	circular buffer queue can "revert" to this marker. This will allow now
	to have atomic message sending, preventing partial sending of a
	header and then failure of the body (large binary for example). The
	body failure will trigger a call to 'revert' and cancel the whole
	message out of the circular buffer (and also lock the queue with
	locked_ so that next attempts will also fail, until we cross another
	'sendPrefix'). Since the above flush-based mecanism ensures than nothing
	has been sent through the network yet, this cancelation is valid. Both
	flushing and marker+reverting features fix the bugs reported in
	ticket #25 and #47.

	Proper testing on Aibo should be done to make sure the tickets are
	closed (not possible for the moment due to compile pbs)

	* src/network/bsdnet/connection.cc: remove the call to block(). It is
	not clear why this call was made and why it did not impact the
	performances of the previous versions.
	* src/ucommand.cc: support for the flushing mecanism.
	* src/uconnection.cc: add sendc and flush.
	* src/uconnection.hh: define sendc and flush.
	* src/uqueue.cc: add revert/mark.
	* src/uqueue.hh: define revert and mark + mark_ and locked_.
	* src/uvalue.cc: fix proper usage of sendc vs send.
	* src/uvariable.cc: idem.

2006-11-18  Jean-Christophe Baillie  <baillie@gostai.com>

	rename system.arg into system.args.
	* src/userver.cc: done.

2006-11-18  Jean-Christophe Baillie  <baillie@gostai.com>
	The system variable 'system.arg' now gives access to a list
	corresponding to the argv[] list of the server execution command line.
	This feature is necessary for webots.

	add support for system.arg (ticket #69).
	* src/userver.cc: add UServer::main.
	* src/userver.hh: declare UServer::main.

2006-11-18  Jean-Christophe Baillie  <baillie@gostai.com>

	add support for var-prefixed args in function prototypes (#74).
	* src/parser/bison/ugrammar.y: done.

2006-11-18  Jean-Christophe Baillie  <baillie@gostai.com>

	cleanup of unnecessary parenthesis.
	* src/ucommand.cc: done.
	* src/uexpression.cc: done.
	* src/uobj.cc: done.
	* src/userver.cc: done.
	* src/uvariable.cc: done.
	* src/uvariablename.cc: done.

2006-11-17  SIGOURE Benoit  <sigoure.benoit@lrde.epita.fr>

	Fix typos.
	* ChangeLog: Here.
	* configure.ac: And here.

2006-11-16  Akim Demaille  <akim.demaille@free.fr>

	Use banners in the tests.
	* tests/check-file: here.

2006-11-16  Akim Demaille  <akim.demaille@gmail.com>

	Formatting changes
	* src/ucommand.cc: Also, prefer for to while when advisable.
	Remove spurious parens.

2006-11-15  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #70 on nameresolution with remote uobjects methods.
	* src/ucommand.cc: fix code backward compat.
	* src/ufunction.cc: define kernel::remoteFunction.
	* src/ufunction.hh: declare kernel::remoteFunction.
	* src/uobj.cc: fix searchFunction.
	* src/userver.cc: init remoteFunction.

2006-11-15  Jean-Christophe Baillie  <baillie@gostai.com>

	remove unnecessary parenthesis in tests.
	* src/uvariable.cc: done.

2006-11-15  Jean-Christophe Baillie  <baillie@gostai.com>

	fix unnecessary high level scoping in variables
	* src/uobj.cc: fix scoping.

2006-11-15  Akim Demaille  <akim.demaille@gmail.com>

	*.h -> *.hh
	* src/memorymanager/blockmemorymanager.h: Rename as...
	* src/memorymanager/blockmemorymanager.hh: this.
	* src/memorymanager/memorymanager.h: Rename as...
	* src/memorymanager/memorymanager.hh: this.
	* src/parser/uparser.h: Rename as...
	* src/parser/uparser.hh: this.
	* src/uasynccommand.h: Rename as...
	* src/uasynccommand.hh: this.
	* src/uasyncregister.h: Rename as...
	* src/uasyncregister.hh: this.
	* src/uatcandidate.h: Rename as...
	* src/uatcandidate.hh: this.
	* src/ubinary.h: Rename as...
	* src/ubinary.hh: this.
	* src/ubinder.h: Rename as...
	* src/ubinder.hh: this.
	* src/ucallid.h: Rename as...
	* src/ucallid.hh: this.
	* src/ucommand.h: Rename as...
	* src/ucommand.hh: this.
	* src/ucommandqueue.h: Rename as...
	* src/ucommandqueue.hh: this.
	* src/uconnection.h: Rename as...
	* src/uconnection.hh: this.
	* src/ueventcompound.h: Rename as...
	* src/ueventcompound.hh: this.
	* src/ueventhandler.h: Rename as...
	* src/ueventhandler.hh: this.
	* src/ueventinstance.h: Rename as...
	* src/ueventinstance.hh: this.
	* src/ueventmatch.h: Rename as...
	* src/ueventmatch.hh: this.
	* src/uexpression.h: Rename as...
	* src/uexpression.hh: this.
	* src/ufunction.h: Rename as...
	* src/ufunction.hh: this.
	* src/ughostconnection.h: Rename as...
	* src/ughostconnection.hh: this.
	* src/ugroup.h: Rename as...
	* src/ugroup.hh: this.
	* src/unamedparameters.h: Rename as...
	* src/unamedparameters.hh: this.
	* src/uobj.h: Rename as...
	* src/uobj.hh: this.
	* src/uproperty.h: Rename as...
	* src/uproperty.hh: this.
	* src/uqueue.h: Rename as...
	* src/uqueue.hh: this.
	* src/userver.h: Rename as...
	* src/userver.hh: this.
	* src/ustring.h: Rename as...
	* src/ustring.hh: this.
	* src/utypes.h: Rename as...
	* src/utypes.hh: this.
	* src/uvalue.h: Rename as...
	* src/uvalue.hh: this.
	* src/uvariable.h: Rename as...
	* src/uvariable.hh: this.
	* src/uvariablelist.h: Rename as...
	* src/uvariablelist.hh: this.
	* src/uvariablename.h: Rename as...
	* src/uvariablename.hh: this.

	* src/Makefile.am, src/parser/bison/bison.mk,
	* src/parser/bison/flex-lexer.hh, src/parser/bison/ugrammar.y: Adjust.

	* src/console.cc, src/memorymanager/memorymanager.cc,
	* src/parser/uparser.cc, src/uasynccommand.cc,
	* src/uasyncregister.cc, src/uatcandidate.cc, src/ubanner.cc,
	* src/ubinary.cc, src/ubinder.cc, src/ucallid.cc,
	* src/ucommand.cc, src/ucommandqueue.cc, src/uconnection.cc,
	* src/ueventcompound.cc, src/ueventhandler.cc,
	* src/ueventinstance.cc, src/ueventmatch.cc,
	* src/uexpression.cc, src/ufunction.cc,
	* src/ughostconnection.cc, src/ugroup.cc,
	* src/unamedparameters.cc, src/uobj.cc, src/uobject.cc,
	* src/uproperty.cc, src/uqueue.cc, src/userver.cc,
	* src/ustring.cc, src/uvalue.cc, src/uvar.cc,
	* src/uvariable.cc, src/uvariablelist.cc, src/uvariablename.cc:
	Adjust.

2006-11-15  Akim Demaille  <akim.demaille@gmail.com>

	Use reindent
	* src/uasynccommand.cc, src/uasynccommand.h,
	* src/uasyncregister.cc, src/uatcandidate.cc,
	* src/uatcandidate.h, src/ubinary.cc, src/ubinary.h,
	* src/ucommand.cc, src/ucommand.h, src/ucommandqueue.cc,
	* src/uconnection.cc, src/ueventcompound.cc,
	* src/ueventcompound.h, src/ueventhandler.cc,
	* src/ueventhandler.h, src/ueventinstance.cc,
	* src/ueventinstance.h, src/ueventmatch.cc, src/ueventmatch.h,
	* src/uexpression.cc, src/ufunction.cc, src/ufunction.h,
	* src/ughostconnection.cc, src/ugroup.cc,
	* src/unamedparameters.cc, src/uobj.cc, src/uobject.cc,
	* src/uproperty.h, src/uqueue.cc, src/uqueue.h,
	* src/userver.cc, src/userver.h, src/ustring.cc, src/utypes.h,
	* src/uvalue.cc, src/uvalue.h, src/uvar.cc, src/uvariable.cc,
	* src/uvariablelist.cc, src/uvariablename.cc,
	* src/uvariablename.h:
	Use reindent: space changes, use STREQ, use libport/cstring.

2006-11-15  Akim Demaille  <akim.demaille@gmail.com>

	Small uexpression.cc cleansing
	* src/uexpression.cc: Use reindent.
	Remove some useless parens.
	* src/ustring.h: Use appropriate C++ headers.

2006-11-13  Akim Demaille  <akim.demaille@free.fr>

	Use uconsole to check the kernel
	To run the test, run "make check" (-j accepted).
	To read the logs, see _build/linux/tests/test-suite.log.
	* tests/Makefile.am, tests/check-file: New.
	* Makefile.am, README, configure.ac: Adjust.

2006-11-13  Akim Demaille  <akim.demaille@free.fr>

	Use istream::read
	* src/console.cc: Use read.

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Factoring
	* src/uexpression.cc (ENSURE_TYPES_1, ENSURE_TYPES_2)
	(ENSURE_TYPES_3, ENSURE_COMPARISON): New.
	Use them.
	Various formatting changes.

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Proprify console.cc
	* src/console.cc: Finish the partial rewriting into C++.
	Unfortunately that does not make it interactive.

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Update externals

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Start reworking console.cc
	* src/console.cc: Unfinished work.

2006-11-13  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/parser/uparser.cc, src/parser/bison/ugrammar.y,
	* src/uconnection.cc: Here.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #62 (wrong tags in 'if' command)
	* src/ucommand.cc: done.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #41, not accesschange on object attributes
	* src/uvariable.cc: add a call to UVariable::get for each attribute of
	the object.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

It is now possible to redefine a remote or plugged C++ method from within URBI
itself, while still accessing the old definition. Example:

myobj = new remoteobj;
function myobj.foo(x)
{
  remoteobj::foo(x);
  ...
};

Since local redefinitions of functions override remote/plugged definitions, the
local 'myobj.foo' will always be called, bypassing the remote version (only
accessible now via the :: construct).

	extend support of :: to uobjects
	* src/ucommand.cc: add support for :: with remote/plugged uobjects.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

Native local functions must override plugins and remote functions definition
when a name conflict occurs.
This means that it is possible to redefine a remote function written in C++
by redefining the method in URBI (and possibly redirect it to another C++
method).

	change functions evaluation priority to: native, plugged, remote
	* src/ucommand.cc: swap order of evaluation for possible function name
	match.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	add support for :: in assignments
	* src/ucommand.cc: add same support of :: for UCommand_ASSIGN_VALUE.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

The idea is to be able to call parent methods inside redefined children
methods (see NEWS and ticket #65).

	add support for :: construct (ticket #65)
	* NEWS: add description of recent changes.
	* src/parser/bison/ugrammar.y: add parsing of :: construct.
	* src/parser/bison/utoken.l: add :: token.
	* src/ucommand.cc: add support for simple method call (no uobject, no
	function. Will be done in next commit).
	* src/uvariablename.cc: add doublecolon.
	* src/uvariablename.h: add doublecolon.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	fix string armor problem (related to ticket #63
	* src/ustring.cc: add armor() function, with optimization (fastArmor).
	* src/ustring.h: add armor, fastArmor.
	* src/uvalue.cc: use armor in UValue::echo.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

A big change in this commit. The use of 'return' in a function will return and
destroy all commands still in progress in the function. The proper way to exit
a function which should keep running commands (like 'at') is to avoid using
'return' (in fact, the function does not return, since it's still running.
Logical).

This is new because in C++ this distinction wouldn't make any sense: there is
no such things as "still running background instructions" and when the end of
the function is reached, it is guaranteed that all instructions within the
function body are terminated, so putting 'return' or not doesn't change anything.
Not in URBI.

The difference is visible only in functions containing 'at' commands for
example:

function f()
{
  at (test) ping;
};

function f2()
{
  at (test) ping;
  return;
}

f2() will kill the 'at', f() will not. This is indeed very useful if the
'return' instruction is conditioned by some test. It has the same effect as a
kind of 'stop function_tag'.

	rewrite return mechanism for functions.
	* src/parser/bison/ugrammar.y: remove automatic return.
	* src/ucallid.cc: add returnVar to store the return container.
	* src/ucallid.h: add returnVar and accessor.
	* src/ucommand.cc: fix return mechanism.
	* src/uconnection.cc: fix return mechanism.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	Formatting changes.
	* src/unamedparameters.cc: done.
	* src/unamedparameters.h: done.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	indent
	* src/uconnection.cc: done.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	add disinherit
	* src/parser/bison/ugrammar.y: fix bug in call to UCommand_INHERIT
	constructor with disinherit, should send the 'true' flag for
	'eraseit'.
	* src/ucommand.cc: add eraseit==true case.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug in multiple inheritance
	* src/uobj.cc: done.

2006-11-12  Jean-Christophe Baillie  <baillie@gostai.com>

	add 'inherit'/'disinherit' keyword, implement inherit
	* src/parser/bison/ugrammar.y: add syntax.
	* src/parser/bison/utoken.l: add keywords.
	* src/ucommand.cc: add class UCommand_INHERIT.
	* src/ucommand.h: add class UCommand_INHERIT.
	* src/utypes.h: add CMD_INHERIT.

2006-11-11  Jean-Christophe Baillie  <baillie@gostai.com>

access_and_change_varlist in UServer keeps track of variable that have both a
notifyChange and notifyAccess record. The destructor of UVariable cleans it,
UServer::work calls UVariable::get for each of the listed variables.

	add *untested* resolution for ticket #40. Cannot test as long as
	* src/uobject.cc: done.
	* src/userver.cc: done.
	* src/userver.h: done.
	* src/uvariable.cc: done.
	* src/uvariable.h: done.

2006-11-11  Jean-Christophe Baillie  <baillie@gostai.com>

	Formatting changes.
	* src/uobject.cc: done.
	* src/userver.h: done.

2006-11-11  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #61: $() behavior
	* src/ucommand.cc: resolve name before testing it.
	* src/uvariablename.cc: simplify $(s) construct and fix bug.

2006-11-11  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #54 and bugs in name resolution
	* src/uobj.cc: fix a bug in iterator value.
	* src/uvariablename.cc: check now for all possible name spaces all the
	time, not only according to id_type.

2006-11-11  Jean-Christophe Baillie  <baillie@gostai.com>

Remote uobjects couldn't be newed anymore because a test was double checking
the object existence, triggering an error of "object already existing".

	fix remote uobject new
	* src/ucommand.cc: fixed.

2006-11-07  Akim Demaille  <akim.demaille@free.fr>

	urbi/uobject.hh
	* src/ucommand.cc, src/uobject.cc, src/uvalue.cc, src/uvariable.cc,
	* src/uvar.cc, src/userver.cc, src/uobj.cc, src/uvariablename.cc:
	Adjust the path to uobject.hh.
	* src/Makefile.am: Don't ship uobject files, uobject.mk does it.
	Use $(uobject_hh).

2006-11-07  Akim Demaille  <akim.demaille@free.fr>

	install libport
	As discussed with Matthieu.
	* Makefile.am: Include libport.mk.

2006-11-07  Akim Demaille  <demaille@gostai.com>

	Upgrade dependencies
	* src/console.cc: Include config.h.
	* configure.ac (URBI_BUILD_AUX): Use it.
	Use nostdinc.
	* src/Makefile.am (AM_CPPFLAGS): Adjust.
	(uobj-help, uobj-ci, uobj-up): Remove, now in uobject.mk.

2006-11-07  Matthieu Nottale  <nottale@gostai.com>

	Fix ticket #60: Bug in hierarchical tags
	* src/ucommand.cc: Fix incorrect substr use.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug in assignment that fails and put void in the assigned variable.
	* src/ucommand.cc: remove useless comments.
	* src/uexpression.cc: in case of error eval returns 0, not DATA_VOID.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix typo in one error message.
	* src/ucommand.cc: done.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

class toto { var x; };
tata = new toto;
at (tata.x) ping;
[00007013:notag] !!! Pure virtual variables not allowed in asynchronous tests.
[00007013:notag] !!! Invalid name resolution in test. Did you define all events and variables?

=> tata.x must exist for 'at' to be able to put a hook on it for caching
purposes.

	forbid usage of virtual attributes in asynchronous test expressions
	* src/uexpression.cc: done.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix error statement: must start with an upper case
	* src/ucommand.cc: change 'invalid' to 'Invalid'.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix 'vars' command
	* src/ucommand.cc: add support for VOID, LIST and OBJ types.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

Calling 'new' several times for the same object will now fail:

class x;
class y;
a = new x; // OK
a = new y; // FAIL

The proper way of doing it will be in the future:

a = new x;
a inherits y; // from this point on, any call to init would fail because it
	      // would be ambiguous between x.init and y.init
	      // Conflicts should be notified in warning and generate errors
	      // only if effective usage is attempted.

	Temporarily prohibits multiple inheritance.
	* src/ucommand.cc: done.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

Trying to put objects in lists or have functions that return objects now
triggers an error message.

	add proper error messages for common objects misusages in kernel 1
	* src/ucommand.cc: dito.
	* src/uexpression.cc: dito.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix indentation
	* src/uexpression.cc: dito.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #52
	* src/ucommand.cc: fix bug in name eval checking inside NEW.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug on 'at' tests containing core functions
	* src/uexpression.cc: fix bug.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	Indentation reformatting.
	* src/utypes.h: doit.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

The grammar has been hacked again to support tags of the form <id>(.<id>)*
In 1.5, when name resolution will be set properly, we will submit tags to the
same resolution algorithm, giving immediate benefits like "programmable tags":

a="hello";
$(a): ping;
[00012123:hello] pong

	fix bug in parsing hierarchical tags with more than 2 levels of
	* src/parser/bison/utoken.l: add the TAG token.
	* src/parser/bison/ugrammar.y: extend parsing of tags to include the
	TAG token.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug in hash+list name resolution
	* src/uexpression.cc: fix.

2006-11-05  Jean-Christophe Baillie  <baillie@gostai.com>

For many critical applications where URBI has to handle "lists" of objects
created at runtime (like bots in a video game), it is necessary to be able to
have objects referred to by names containing variable parts. This feature is
added via the hash map mechanism already existing:

class x;
obj[1] = new x;
obj["myname"] = new x;
obj[45]["hello"] = new x;

The way it is done is again via a hack in the nameresolution function and the
parser. In k1.5, this will be fixed with a generic nameresolution algorithm.

NB: obj[1] is not referring to an underlying ulist of objects, and evaluating
obj alone without the array index will fail.

	add support for objects hash table
	* src/parser/bison/utoken.l: add POINT token ('.').
	* src/parser/bison/ugrammar.y: add support for prefix[...].suffix[...]
	constructs in grammar (should be generalized in 1.5).
	* src/uvariablename.cc: extend buildFullname function and fix bugs in
	name resolution algorithm.
	* src/uvariablename.h: add index_obj array.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	fix ticket #35: notifyaccess when list elements are viewed
	* src/uexpression.cc: add a call to UVariable::get().

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	fix bug accessing array of array in lists
	* src/uexpression.cc: a quick hack. This *must* be fixed in k1.5.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	update NEWS
	* NEWS: update.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

The simple code "event b" was creating both an event b[0] and a variable b.
This is now fixed.

	fix bug in declaration of events without parameters
	* src/ucommand.cc: add the "events" keyword that can be used to list
	declared events (like vars for variables).
	* src/parser/bison/utoken.l: add events keyword.
	* src/ueventhandler.h: add a nbarg accessor.
	* src/ueventhandler.cc: idem.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	fix speedmax bug
	* src/ucommand.cc: enforce speedmax on instantaneous assignments like
	x=<value> and display a warning message when the +error flag is set.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	change 'modificator' to 'modifier'
	* src/ucommand.cc: change error messages to display 'modifier' instead
	of 'modificator'.

2006-11-04  Jean-Christophe Baillie  <baillie@gostai.com>

	fix string unarmor bug
	* src/parser/bison/utoken.l: STRING token now calls UString::unArmor().
	* src/ustring.cc: add unArmor/armor (armor not implemented yet).
	* src/ustring.h: add defs.
	* src/uvalue.cc: change UValue::echo for DATA_STRING; no processing
	required anymore.

2006-11-04  Akim Demaille  <akim@lrde.epita.fr>

	Automake 1.10 compatibility
	* src/Makefile.am: Use init.mk.
	Use newer svn-externals.
	* configure.ac: Automake 1.10 includes $(SHELL) in $(install_sh),
	so do not add another.

2006-11-03  Jean-Christophe Baillie  <baillie@gostai.com>

	whenever support add, fix bug in at (forgot to call normalForm)

	* src/ucommand.cc: add support for whenever.
	* src/ucommand.h: add support for whenever.
	* src/userver.cc: remove unecessary debug ouput.

2006-11-01  Akim Demaille  <akim@lrde.epita.fr>

	Use URBI_LIBPORT
	* configure.ac: Here.

2006-11-01  Jean-Christophe Baillie  <baillie@gostai.com>

	fix "exec" bug

	* src/parser/bison/utoken.l: fix UString lenght with STRING
	token.
	* src/uexpression.cc: nothing.
	* src/ustring.cc: formating changes.
	* src/ustring.h: add setLen, used by utoken.l to adjust the
	length of the UString.

2006-11-01  Jean-Christophe Baillie  <baillie@gostai.com>

	Formatting changes.

	* src/ucommand.cc: indent.
	* src/parser/bison/ugrammar.y: remove comments.

2006-11-01  Jean-Christophe Baillie  <baillie@gostai.com>

	Remove obsolete 'eventid' attribute in UValue

	* src/uvalue.cc: do it.

2006-11-01  Jean-Christophe Baillie  <baillie@gostai.com>

	Code reindent and force coding style

	* src/ucommand.cc: do it.
	* src/uvalue.h: do it.
	* src/ucommand.h: do it.
	* src/parser/bison/ugrammar.y: do it.
	* src/uexpression.cc: do it.
	* src/uvalue.cc: do it.
	* src/uvariable.cc: do it.
	* src/userver.cc: do it.
	* src/uobj.cc: do it.
	* src/uvariablename.cc: do it.
	* src/uvariable.h: do it.
	* src/uvariablename.h: do it.
	* src/uconnection.cc: do it.

2006-10-31  Matthieu Nottale  <nottale@gostai.com>

	Rename Connection* to connection*

	* src/network/bsdnet/Connection.cc: Remove.
	* src/network/bsdnet/connection.cc: New.
	* src/network/bsdnet/Connection.h: Remove.
	* src/network/bsdnet/bsdnet.mk: .
	* src/network/bsdnet/network.cc: .
	* src/network/bsdnet/connection.hh: New.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Depend on uobject/ not liburbi
	* src/ucommand.cc, src/uexpression.h, src/uexpression.cc,
	* src/uobject.cc, src/uvalue.cc, src/network/bsdnet/Connection.cc,
	* src/uvariable.cc, src/uvar.cc, src/userver.cc, src/uobj.cc,
	* src/uvariablename.cc: Adjust: use uobject/uobject.hh.

	* src/Makefile.am, configure.ac, Makefile.am: Adjust.

2006-10-31  Jean-Christophe Baillie  <baillie@gostai.com>

	Add multievent support (whenever still not working)
	* src/ucommand.cc: adjust UCommand_EMIT and UCommand_AT.
	* src/ucommand.h: add inheritance from UASyncCommand.
	* src/uatcandidate.cc: New.
	* src/uexpression.h: change UExpression::eval prototype.
	* src/utypes.h: add UEventCompoundType.
	* src/ueventinstance.cc: New.
	* src/ueventinstance.h: New.
	* src/uasynccommand.h: New.
	* src/uasyncregister.cc: New.
	* src/uasyncregister.h: New.
	* src/uexpression.cc: change UExpression::eval and add
	UExpression::asyncScan.
	* src/uatcandidate.h: New.
	* src/ueventhandler.h: New.
	* src/uvariable.cc: add support for UAsyncRegister.
	* src/ueventcompound.cc: New.
	* src/ueventcompound.h: New.
	* src/userver.cc: replace eventtab by emittab.
	* src/userver.h: replace eventtab by emittab.
	* src/uobj.cc: update searchEvent function.
	* src/uasynccommand.cc: New.
	* src/uobj.h: update searchEvent prototype.
	* src/ueventhandler.cc: New.
	* src/uvariablename.cc: fixed name resolution for events
	with new UEventHandler approach.
	* src/uvariable.h: add support for UASyncRegister.
	* src/ueventmatch.cc: New.
	* src/ueventmatch.h: New.
	* src/Makefile.am: add new files.
	* src/fwd.hh: add new classes.

2006-10-31  Jean-Christophe Baillie  <baillie@gostai.com>

	Formatting changes
	* uvalue.h: here.

2006-10-31  Jean-Christophe Baillie  <baillie@gostai.com>

	Remove commented code
	* src/parser/bison/ugrammar.y: here.

2006-10-31  Jean-Christophe Baillie  <baillie@gostai.com>

	Fix UString copy ctor
	* src/ustring.cc: Do it.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Adjust to the changes in liburbi
	* src/Makefile.am: Adjust file names.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Dead line
	* src/Makefile.am: No longer pass -DFLOAT_DOUBLE, this is
	driven by configure now.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Update dependencies
	* Makefile.am: Tidy.
	More aliases for JCB.
	* scheduler: Remove.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/ustring.cc: here.
	* src/memorymanager/blockmemorymanager.h: here.
	* src/memorymanager/memorymanager.cc: here.
	* src/ubinder.cc: and here.
	* src/Makefile.am: Formatting change.

2006-10-31  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/parser/bison/ugrammar.y (NEW_BIN_1): New.
	Use it.

2006-10-25  Matthieu Nottale  <nottale@gostai.com>

	r256: Fix a parse error (gcc 4.1.2) and missing pthread flags

	* src/parser/uparser.h: Remove extra UFlexer:: in in-class method declaration.
	* src/Makefile.am: Add pthread-related flags to uconsole build.

2006-10-24  Akim Demaille  <demaille@gostai.com>

	Use libport/ufloat.h
	* src/ufloat.h: Remove.
	* src/uvalue.h, src/utypes.h: Adjust.

2006-10-24  Akim Demaille  <demaille@gostai.com>

	Use libport's ufloat.hh.
	* src/ufloat.h: Wrap libport/ufloat.hh.
	To be removed eventually (or moved into libport under some
	form).
	* src/ufloat.cc: Remove.
	* src/utypes.h: Adjust.

2006-10-24  Akim Demaille  <demaille@gostai.com>

	Remove AIBO connection code
	* src/network/OPENR: Remove.
	* src/network/OPENR/aiboconnection.h: Remove.
	* src/network/OPENR/openr.mk: Remove.
	* src/network/OPENR/aiboconnection.cc: Remove.

2006-10-24  Akim Demaille  <demaille@gostai.com>

	Adjust to libport installation
	* src/Makefile.am: No longer install libport bits.
	(AM_CXXFLAGS): Point to uobject/.

2006-10-24  Akim Demaille  <demaille@gostai.com>

	Formatting changes
	* src/uvar.cc: Make it more alike its peer.

2006-10-22  Akim Demaille  <akim.demaille@free.fr>

	Stop using symlinks, Matthieu dislikes them
	* src/uobject/uobject.cc, src/uobject/uvar.cc: Move to...
	* src/uobject.cc, src/uvar.cc: here.
	* src/uobject/uobject.h, src/uobject/uext.h,
	* src/uobject/common_uvalue.cc: Remove.
	* src/Makefile.am (liburbi_srcdir, uobject_srcdir): New.
	Use them to use the copies shipped by the enbedded liburbi.

2006-10-22  Akim Demaille  <akim.demaille@free.fr>

	Fix parser compilation under Aibo
	* src/parser/bison/bison.mk: Include an explicit compilation
	rule for ugrammar.cc which uses PARSER_CXXFLAGS.
	This rule was copied from Automake 1.9.6's output.
	* src/Makefile.am: Don't compile console for aibo.
	(libkernel_la_CPPFLAGS): Don't define it, it makes the object
	file names longer for no good reason.
	Just let AM_CPPFLAGS do its job.
	* configure.ac: Don't define NETWORK_OPENR, OPENR suffices.

2006-10-21  Akim Demaille  <akim.demaille@free.fr>

	Prepare aibo
	* src/console.cc: Use libport/utime.hh.
	* src/parser/bison/bison.mk: Compile the parser in a separate
	library, in a failed attempt to avoid -O2.
	* src/Makefile.am: Do not compile the Aibo connection kit.
	Will probably be removed later.

2006-10-21  Akim Demaille  <akim.demaille@free.fr>

	ChangeLog issues

2006-10-20  Matthieu Nottale  <nottale@gostai.com>

	Upped libport and liburbi, small fix as a consequence

	* src/uvalue.cc: cast char*->unsigned char*.

2006-10-18  Akim Demaille  <demaille@gostai.com>

	Fix distdir issue
	* src/network/OPENR/aiboconnection.h,
	* src/network/OPENR/aiboconnection.cc: Formatting changes.
	* src/utypes.h: Use libport.hh.
	* src/Makefile.am: Move some EXTRA_DISTs to...
	* Makefile.am: here.
	* configure.ac: Use tar-ustar.

2006-10-17  Matthieu Nottale  <nottale@gostai.com>

	Replace install-sh, fix header path

	* src/parser/uparser.cc: Fix ugrammar.hh inclusion path.
	* configure.ac: Fix install-sh.

2006-10-17  Akim Demaille  <demaille@gostai.com>

	Look for pthread.h, install parts of libport.
	* src/Makefile.am: install bit of libport, since userver.h includes
	it, and is installed.  That sucks.
	* configure.ac: Use URBI_PTHREAD.

2006-10-17  Akim Demaille  <demaille@gostai.com>

	Fix path.
	* src/parser/bison/FlexLexer.h: Rename as...
	* src/parser/bison/flex-lexer.hh: this to avoid being caught
	by the installed one.
	* src/parser/uparser.h: Adjust.
	* src/parser/bison/bison.mk: Adjust.
	* src/Makefile.am: Adjust.
	lockable.h -> lockable.hh.

2006-10-17  Akim Demaille  <demaille@gostai.com>

	Update libport use.
	* src/uconnection.h: Use the new files.
	* src/userver.h: Ditto.
	* src/parser/uparser.h: Fix include path.
	Reported by Matthieu.
	* src/uconnection.cc: idem.
	* src/Makefile.am: Adjust.

2006-10-17  Akim Demaille  <demaille@gostai.com>

	Use libport/lockable.hh.
	* src/lockable.h: Remove.
	* src/uconnection.h, src/userver.cc, src/userver.h,
	* src/uconnection.cc: Adjust.
	* src/Makefile.am: Ditto.

2006-10-17  Akim Demaille  <demaille@gostai.com>

	Formatting changes.
	* src/lockable.h: Do that.
	* src/userver.cc: Idem.

2006-10-16  Akim Demaille  <akim.demaille@free.fr>

	Use install-sh -C for headers.
	* configure.ac (INSTALL_HEADER): Define.
	This fixes the symptoms of a weird issue: when running
	"make install" in the kernel, when install goes into
	liburbi the headers are installed with fresh timestamps, and
	therefore, when install arrives back in the kernel's
	directory, it recompiles again.
	Now the timestamps are no longer updated.
	But in the first place, when should not depend on
	installed headers, but on our shipped headers.

2006-10-16  Akim Demaille  <demaille@gostai.com>

	Tidy.
	Move all the sources into src.
	Use the latest liburbi-c++.
	* configure.ac: Create config.h.
	* Makefile.am: Put bits into...
	* src/Makefile.am: this new file.
	* src/parser/bison/bison.mk: Adjust.
	* src/uvalue.cc, src/network/bsdnet/network.cc,
	* src/userver.cc, src/uobject/uobject.cc,
	* src/uobject/uobject.h, src/uobject/uext.h,
	* src/uobject/common_uvalue.cc: Don't name unused arguments.

	* src/ubanner.cc: Include config.h.

2006-10-15  Akim Demaille  <akim.demaille@free.fr>

	Fix some warnings.
	* ucommand.cc: No longer name unused arguments.
	* ucommand.h: Idem.
	* ueventhandler.h: Idem.
	* uconnection.h: Idem.
	* ueventhandler.cc: Idem.
	* uconnection.cc: Idem.

2006-10-15  Akim Demaille  <akim.demaille@free.fr>

	Upgrade build-aux.
	* configure.ac: Don't use -Weffc++ yet.
	* ustring.cc: Use C++ headers.
	Formatting changes.
	* ustring.h: Formatting changes.
	* memorymanager/blockmemorymanager.h: Idem.
	(BlockPool::BlockPool): New.
	* memorymanager/memorymanager.cc: Implement it.
	And use it.
	* ucommand.h: Formatting changes.
	* console.cc: Idem.
	* liburbi-c++/src/liburbi/uabstractclient.cpp: Idem.

2006-10-15  Matthieu Nottale  <nottale@gostai.com>

	FIX: ugrammar was unsaved in my IDE. Sorry

	* parser/bison/ugrammar.y: Fix conflict.

2006-10-15  Matthieu Nottale  <nottale@gostai.com>

	Optimization: tag subsystem rewrite, memory manager rewrite

	* ucommand.cc: .
	* ucommand.h: .
	* utypes.h: .
	* parser/bison/ugrammar.y: .
	* ufunction.cc: .
	* uexpression.cc: .
	* ufunction.h: .
	* userver.cc: .
	* userver.h: .
	* uvariablename.cc: .
	* memorymanager/blockmemorymanager.h: .
	* memorymanager/memorymanager.cc: .
	* memorymanager/memorymanager.h: .
	* uconnection.cc: .

2006-10-15  BAILLIE Jean-Christophe  <baillie@gostai.com>

	Fix indentation problems

	Indentation problems fixed in some files (using Akim's convention:
	to be debated)
	NB: vi option to add =>  :set tabstop=8

	* ucommand.cc: .
	* parser/bison/ugrammar.y: .
	* uexpression.cc: .
	* userver.cc: .
	* uvariablename.cc: .

2006-10-13  Matthieu Nottale  <nottale@gostai.com>

	Optimisation.

	* utypes.h: Remove eqStr (leftover).
	* uconnection.cc: Remove 4(half) useless hash map searches in execute.
	* liburbi-c++/src/liburbi/uobject/uext.h: Tsuna:BUG: this is an
	external item.

2006-10-12  matthieu nottale  <nottale@gostai.com>

	Fix invalid iterator use.

	* network/bsdnet/network.cc: Fixed for good.

2006-10-12  matthieu nottale  <nottale@gostai.com>

	Lock fix.

	* parser/uparser.cc: Remove unnecessary &*.
	* lockable.h: Lock is now a recursive mutex.
	* userver.cc: Lock server in work.
	* userver.h: UServer inherits Lockable .
	* console.cc: Add missing headers.
	* uconnection.cc: Lock server in parse.

2006-10-12  Matthieu Nottale  <nottale@gostai.com>

	Add a much needed try/catch

	* network/bsdnet/network.cc: Add a try/catch, so that when a
	connection is destroyed in its notifyread, the call to notifyWrite
	on the deleted object does not bring the ship down.
	* lockable.h: Add a temporary #error in the aibo case to ensure
	locks are enabled.
	* console.cc: Add missing includes time.h and sys/time.h in
	!windows case.

2006-10-10  matthieu nottale  <nottale@gostai.com>

	Env defaults to engine. Add build dependency on bison.mk

	* configure.ac: Default env is engine.
	* parser/bison/bison.mk: Add dependency on bison.mk.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	More robustness against flex 2.5.4.

	* parser/bison/bison.mk: std::ostream.
	Include iostream, not istream, since ostreams are used.
	* liburbi-c++/src/liburbi/uabstractclient.cpp: Instantiate
	in the same order as the declaration.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	Formatting changes.
	* userver.cc: Do it.
	* console.cc: Idem.
	* ughostconnection.cc: Idem.
	* liburbi-c++/src/liburbi/uabstractclient.cpp: Idem.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	console.
	* console.cc: New.
	* Makefile.am: Compile it.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	Hook liburbi to SUBDIRS.
	* Makefile.am (liburbi-ci): New .

2006-10-10  Akim Demaille  <demaille@gostai.com>

	Install fwd.hh.
	* Makefile.am: Do it.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	Use liburbi as an svn:externals.
	* configure.ac: Configure the subpackage liburbi-c++.
	* uobject/uobject.h, uobject/uext.h, uobject/common_uvalue.cc:
	Point to the local version of liburbi-c++.
	* Makefile.am (liburbi-up): New.
	To be used to upgrade the version of liburbi used.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	fwd.hh.
	* fwd.hh: New.
	* unamedparameters.h, uvalue.h, ucommand.h, uexpression.h,
	* utypes.h, ucommandqueue.h, ugroup.h, ughostconnection.h,
	* ueventhandler.h, uvariablelist.h, ufunction.h,
	* uconnection.h, ubinder.h, userver.cc, userver.h, uobj.h,
	* uvariable.h, uvariablename.h, ucallid.h:
	Use it.
	* Makefile.am: Adjust.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	uobject.cc in urbi::.
	* uobject/uobject.cc:  Define in urbi:: the entities declared in it.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	uparse.cc.
	* parser/uparser.cc: New.
	* parser/uparser.h, Makefile.am: Adjust.

2006-10-10  Akim Demaille  <demaille@gostai.com>

	* network/bsdnet/network.h, network/bsdnet/network.cc,
	* uconnection.cc, ucommand.cc: Formatting changes.

2006-10-09  Akim Demaille  <demaille@gostai.com>

	pin baux.
	* Makefile.am: And include build-aux.mk.

2006-10-08  JC Baillie  <baillie@gostai.com>

	first stage of object arrays (can create)

	The goal is be able to do things like:

	myobj[1] = new stuff;
	myobj[1].val = 4;

	For the moment, only the first stage is possible with this commit.
	To reach the second stage (which requires a modification of the
	grammar), you can do this:

	myobj__1.val = 4; //or
	$("myobj__"+string(index)+".val") = 4;


	* ucommand.cc: tweak UCommand_NEW to support any object name.
	* ucommand.h: change constructor.
	* parser/bison/ugrammar.y: update with new UCommand_NEW constructor.

2006-10-08  JC Baillie  <baillie@gostai.com>

	Prepare for multievent handling

	Multievent handling needs a new class UEventHandler.

	* ucommand.cc: include uventhandler.h.
	* utypes.h: nothing.
	* ueventhandler.h: New.
	* ueventhandler.cc: New.
	* Makefile.am: add .cc and .h for ueventhandler.

2006-10-08  JC Baillie  <baillie@gostai.com>

	fix 'new' behavior when no init is present and no parameters are given

	When invoking new with no parameters, the default "empty"
	constructor is now called, even if the init function has not been
	explicitly declared.

	* ucommand.cc: fix UCommand_NEW behavior when new has no param and
	no init is defined.

2006-10-08  JC Baillie  <baillie@gostai.com>

	no recursive inheritance

	* ucommand.cc: fix a=new a; this is not permitted.

2006-10-08  Jean-Christophe Baillie  <baillie@gostai.com>

	Name resolution fix in object methods + akim bug in booleval reverted

	Some cleanup of warning messages during compile.
	Fix a name resolution bug in object methods when attributes are
	defined in the origin class and not in the child class.
	Akim removed a "if (freeme)" before a delete in booleval. Reverted.

	* ucommand.cc: cleanup warnings.
	* parser/bison/ugrammar.y: cleanup of unnecessary comments.
	* uexpression.cc: cleanup warnings, fix indent.
	* uvalue.cc: remove booleval bug, fix indent.
	* uvariable.cc: cleanup warnings, fix indent.
	* INSTALL: remove old install notes.
	* userver.cc: cleanup warnings.
	* uobj.cc: add searchEvent function.
	* uobj.h: add searchEvent definition.
	* uvariablename.cc: fix name resolution in object methods with
	inheritance.
	* LICENSE-URBI-LANGUAGE: Remove.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Bison and Flex output are no longer shipped.
	Therefore they are now in the build tree.
	* parser/bison/bison.mk: Implement these changes.
	* Makefile.am (CLEANFILES): Initialize.
	* configure.ac: Require exactly Flex 2.5.4.
	Require at least Bison 2.2.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Fix Perl invocation.
	* parser/bison/bison.mk: Beware that perl needs the file to
	process after the -e.
	* parser/bison/ugrammar.y: Sugar.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Sugar the parser.
	* parser/bison/ugrammar.y (NEW_EXP_2): New.
	Use it.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Fix install/uninstall issues.
	distcheck passes.
	* Makefile.am: Use DESTDIR.
	(uninstall-local): New.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Fix build != src issue.
	* parser/bison/bison.mk: Don't rely on an existing
	builddir/parser/bison.
	Reported by Matthieu.

2006-10-06  matthieu nottale  <nottale@gostai.com>

	COMMA and SEMICOLON priority changed

	* parser/bison/ugrammar.y: Fix priority between COMMA and
	SEMICOLON in grammar.

2006-10-06  Akim Demaille  <demaille@gostai.com>

	Enable debug traces in the parser.
	* parser/uparser.h: Do that.
	* parser/bison/ugrammar.y: use %debug.
	delete 0 is valid c++.

2006-10-04  Akim Demaille  <demaille@gostai.com>

	Simplify delete invocations.

	* ucommand.cc: "delete(\(.*?\))" -> "delete \1".
	"if *(\(.*?\)) *\(delete \1\)" -> "\2".
	* utypes.h: Ditto.
	* uvariablelist.cc: Ditto.
	* ufunction.cc: Ditto.
	* ucallid.cc: Ditto.
	* uexpression.cc: Ditto.
	* unamedparameters.cc: Ditto.
	* uvalue.cc: Ditto.
	* ubinary.cc: Ditto.
	* uproperty.cc: Ditto.
	* uvariable.cc: Ditto.
	* uobj.cc: Ditto.
	* ugroup.cc: Ditto.
	* uconnection.cc: Ditto.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	inline ucopy.
	* ucommand.cc: Do it.
	* uvariablename.cc: Use it.
	This should fix some memory leak: before we were making copies
	that are not always used.
	delete 0 is valid C++.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	Formatting changes.
	* uvariablename.cc, uvalue.cc: Do that.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	Clean up.
	* ucommand.cc: Lots of formatting changes.
	Don't abuse of parens, know your precedences.
	delete 0 is valid C++.
	(ucopy): New.
	Use it.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	Formatting changes.
	* uobject/uobject.cc: Do that.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	Catch up with uobject.h.
	* ucommand.cc, uobject/uobject.cc, uobject/uvar.cc:
	Various indentation fixes.
	Various warning fixes.
	Catch up with const-ref uses for std::string in uobject.h.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	Use URBI_*.
	* configure.ac: Use URBI_PROG_CXX, and URBI_DOC.
	Use AC_ENABLE_SHARED.

2006-10-03  Akim Demaille  <demaille@gostai.com>

	* build-aux, bootstrap: Remove.
	Now replaced with svn:externals.

2006-10-03  matthieu nottale  <nottale@gostai.com>

	New nonfree banner. Fix leak.

	* ubanner.cc: New message that doesn't say urbikernel is free.
	* uobject/uvar.cc: Fix a leak: delete vardata in uvar dtor.

2006-09-29  Matthieu Nottale  <nottale@gostai.com>

	Fix bison.mk incorrect path

	* parser/bison/bison.mk: Fix utoken.cc path.

2006-09-28  matthieu nottale  <nottale@gostai.com>

	Fixes for sdk generation

	* network/OPENR/openr.mk: replaced CPPFLAGS= with CPPFLAGS +=.
	* Makefile.am: Hack libkernel.lai and install locations to pretend
	the lib is not installed.
	We have to do it in order to include libkernel in an other library.

2006-09-27  matthieu nottale  <nottale@gostai.com>

	Makefile.am fixes

	* Makefile.am: Add missing uext.h.
	Add libkernel_la_CPPFLAGS because AM_CPPFLAGS is ignored
	(libkernel_la_CPPFLAGS written in openr.mk).

2006-09-26  Akim Demaille  <akim.demaille@free.fr>

	White space changes.
	* uconnection.cc: White space changes.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	* uconnection.cc: Include ubanner.hh.
	* userver.cc: Remove declarations that are now in ubanner.hh.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	Update to URBI_DIRS.

	* configure.ac (NETWORK_BSDNET): No longer define it.
	* parser/bison/Makefile.defs: Rename as...
	* parser/bison/bison.mk: this.
	And adjust dir names.
	* network/bsdnet/Makefile.defs: Rename as...
	* network/bsdnet/bsdnet.mk: this.
	And adjust dir names.
	* network/OPENR/Makefile.defs: Rename as...
	* network/OPENR/openr.mk: this.
	And adjust dir names.
	* build-aux/urbi-dirs.m4: Also define kernelincludedir.
	* build-aux/urbi-openr.m4: Formatting changes.
	* README: New.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	Introduce ubanner.cc.
	* ubanner.hh, ubanner.cc: New.
	* userver.cc, userver.h: Use it.
	(UServer::display (const char **)): New.
	Use it.
	* Makefile.am: Adjust.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	Update URBI_DIRS.
	* build-aux/urbi-dirs.m4: Update from liburbi-cpp.
	* configure.ac: Use it.
	* Makefile.am (AM_CPPFLAGS): Remove useless ones, add missing ones.
	Ship uext.h.

2006-09-26  matthieu nottale  <nottale@gostai.com>

	Include path fix

	* utypes.h: Fix uobject.h include path, add uext.h include.
	* uvalue.cc: idem.
	* userver.cc: idem.
	* uobject/uext.h: New. Symlink from liburbi.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	* uobject/uobject.cc: Add missing std::.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	* uobject/uobject.cc (cleanTable): Cleanup.
	* Makefile.am: Formatting changes.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	* build-aux/urbi-openr.m4: New.
	* configure.ac: Use it.

2006-09-26  Akim Demaille  <demaille@gostai.com>

	* parser/bison/Makefile.defs: Install the header files.
	* network/bsdnet/Makefile.defs,
	* network/OPENR/Makefile.defs,
	* network/OPENR/Makefile.defs,
	* Makefile.am: Ditto.

	* userver.h: Reorder includes.
	* memorymanager/memorymanager.h: Formatting changes.

2006-09-26  Akim Demaille  <akim.demaille@free.fr>

	namespace cleanups.
	* ucommand.cc: Don't "using" things from std::.
	Catch up with liburbi being in urbi::.
	* ucommand.h: Ditto.
	* uexpression.h: Ditto.
	* ufloat.h: Ditto.
	* ucallid.cc: Ditto.
	* ugroup.h: Ditto.
	* uexpression.cc: Ditto.
	* uvariable.cc: Ditto.
	* uconnection.h: Ditto.
	* ubinder.h: Ditto.
	* userver.cc: Ditto.
	* userver.h: Ditto.
	* uobj.cc: Ditto.
	* uobj.h: Ditto.
	* uobject/uvar.cc: Ditto.
	* uvariablename.cc: Ditto.
	* uvariable.h: Ditto.
	* uvariablename.h: Ditto.
	* ucallid.h: Ditto.
	* uconnection.cc: Ditto.
	* ubinder.cc: Ditto.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Use URBI_DIRS.
	* build-aux/urbi-dirs.m4: New.
	* configure.ac: Use it.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	distcheck fixes.
	* build-aux/doxygen.mk: Update.
	* build-aux/revision.mk: Clean version..hh.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Portability fixes.
	* parser/bison/Makefile.defs: use Perl, not sed, since alternation
	is not portable (and OSX is a loser in this regard).
	Also cover cin, cout, cerr, and widen the pattern.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Prepend std:: to istream.

	* parser/bison/Makefile.defs: For Linux.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	VC++ issues.

	* ucommand.cc: .Formatting changes.
	* parser/bison/Makefile.defs (utoken.cc): Fix lack of std::.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Fixes and details.

	* ucommand.cc: Indent properly.
	* utypes.h: Comment changes.
	* parser/bison/ugrammar.y (NEW_BIN): New.
	Use it.
	Don't use parens for delete.
	"Delete 0" is valid C++.
	* parser/bison/Makefile.defs: Ship FlexLexer.h.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Fixes.

	* build-aux/move-if-change: New.
	* Makefile.am: Ship bison++.in.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Dos2unix.
	* ucommand.cc, utypes.h, uvariablelist.cc, ucallid.cc
	* unamedparameters.cc, uvalue.cc, ubinary.cc, uproperty.cc: .
	* CHANGELOG-Kernel, uobject/common_uvalue.cc, ugroup.cc: .
	* ubinder.cc: Use Unix-style end of lines.

	* uobject/uvar.cc: Namespace fixes.

2006-09-25  Akim Demaille  <demaille@gostai.com>

	Autoconfiscate.
	* ChangeLog, bootstrap: New.
	* build-aux/bison++.in, build-aux/revision.mk,
	* build-aux/urbi-var-progs.m4: New.
	* configure.ac: Use them.
	* build-aux/doxygen.mk, doc/Makefile.am, doc/Doxyfile.in: New.

	* Makefile: Rename as...
	* Makefile.am: this.

	* configure.ac (OS): New.
	* version.hh.in: New.
	* Makefile.am: Use it.

	* lockable.h: Simplify.
	* network/OPENR/Makefile.defs: Update to match Automake use.
	* network/bsdnet/Makefile.defs: Ditto.
	* parser/bison/Makefile.defs: Ditto.
	* parser/bison/FlexLexer.h: Formatting changes.
	* parser/uparser.h: Formatting changes.
	(ugrammar.hh, FlexLexer.h, location.hh): Include them.
	Use parser::token_type instead of Bison pre-2.2 names.
	Don't use using.
	Let Emacs know this file is C++.
	* parser/bison/utoken.l: Formatting changes.
	No using.
	* parser/bison/ugrammar.y: Require Bison 2.2.
	No using.
	Formatting changes.
	Don't use "../" in includes.
	* parser/bison/Makefile.defs: Use bison++ to save cycles.

	* version.h: Replace by...
	* version.hh.in: this.
	* Makefile.am: Use it.

	* userver.cc: Use C++ headers, use version.hh.
	Formatting changes.
	* userver.h: Formatting changes.
	* uobj.cc: Specify the path to uobject.h.
	* uobject/uvar.cc: Formatting changes.
	* uvariable.h: Ditto.
	* uconnection.cc: Ditto.

Local Variables:
ispell-local-dictionary: "american"
End:

$Rev$
$Id$
$Date$
