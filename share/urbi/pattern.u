class Global.Pattern
{
  var pattern;

  function init(p)
  {
    pattern = p |
  };

  function match(value)
  {
    return matchPattern(pattern, value) |
  };

  function matchPattern(pattern, value)
  {
    if (!pattern.locateSlot("match").isNil)
      return pattern.match(this, value)
    else if (!value.locateSlot("matchAgainst").isNil)
      return value.matchAgainst(this, pattern)
    else
      return value == pattern |
  };

  class Binding
  {
    var setter;
    var name;

    function init(n, s)
    {
      name = n |
      setter = s |
    };

    function asString()
    {
      return "var " + name |
    };

    function match(pattern, value)
    {
      setter(value) |
      return true |
    };
  };
};
