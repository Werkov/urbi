/** Urbi Naming Standard infrastructure classes **/

do (Global)
{
  /// Implementations of a Facet must inherit from the appropriate class.
  class Interface {
    var componentName;
    var parentComponent = nil;
  } |
  do (Interface) {
    class Battery           : Interface  {};
    class Motor             : Interface  {};
    class LinearMotor       : Motor  {};
    class RotationalMotor   : Motor  {};
    class VideoIn           : Interface  {};
    class AudioIn           : Interface  {};
    class AudioOut          : Interface  {};
    class Identity          : Interface  {};
    class Network           : Interface  {};
    class Sensor            : Interface  {};
    class DistanceSensor    : Sensor {};
    class TouchSensor       : Sensor {};
    class AccelerationSensor: Sensor {};
    class GyroSensor        : Sensor {};
    class TemperatureSensor : Sensor {};
    class Laser             : Sensor {};
    class Mobile            : Interface  {};
    class Tracker           : Interface  {};
    class BlobDetector      : Interface  {};
    class TextToSpeech      : Interface  {};
    class SpeechRecognizer  : Interface  {};
    class Led               : Interface  {};
    class RGBLed            : Led    {};
    function interfaces()
    {
      function isInterface(o)
      {
        var name = o.type;
        Interface.hasLocalSlot(name) && Interface.getSlot(name) === o
      };

      var res = allProtos.filter(isInterface) |
      res.filter(function (x) { !res.any(function(y) { x !== y && y.isA(x)})})
    };
  };
  // Keep the 'Facet' name for backward compatibility.
  var Facet = function() {
    Lobby.wall("Warning, Facet is deprecated, use 'Interface'");
    Facet = Interface
  };
  var Interface.facets = Interface.getSlot("interfaces");
};
