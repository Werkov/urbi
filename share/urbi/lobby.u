/*
 * Copyright (C) 2010, Gostai S.A.S.
 *
 * This software is provided "as is" without warranty of any kind,
 * either expressed or implied, including but not limited to the
 * implied warranties of fitness for a particular purpose.
 *
 * See the LICENSE file for more information.
 */

var Lobby.systemLobby = this;
do (Lobby)
{
  var onDisconnect = Event.new;
  var connected = true;

  function asString()
  {
    var res = Object.getSlot("asString").apply([this]) |
    if (hasSlot("remoteIP"))
      res += " (%s)" % remoteIP |
    return res
  };

  // A function to make initialization dependencies easier to manage.
  function banner ()
  {
    System
      .PackageInfo
      .components["Urbi SDK"]
      .banner
      .'each|'(closure (s) { echo(s) })
  };

  function copyright(var deep = true)
  {
    System
      .PackageInfo
      .components["Urbi SDK"]
      .copyright(deep)
      .'each|'(closure (s) { echo(s) })
  };

  // Output the urbi license
  function license()
  {
    for (var line in File.new(System.urbiRoot / "LICENSE.txt").asList)
      echo(line);
  };

  function echo(var msg, var tag = "")
  {
    // Avoid the trailing space.
    msg = msg.asString |
    if (msg)
      send("*** " + msg, tag)
    else
      send("***", tag)
  };

  function handleDisconnect()
  {
    connected = false |
    Lobby.systemLobby.echo("disconnecting " + this) |
    // Break the reference loop of notifyChange local to this lobby.
    if (hasLocalSlot("handle") && handle.isA(Finalizable))
      removeSlot("handle")|
    onDisconnect!(this)
  };

  /// \param displayBanner  whether to send the banner.
  /// \param isGhost        whether it's the ghostconnection.
  function initialize(var displayBanner, var isGhost = false)
  {
    if (displayBanner)
      banner|
    if (isGhost)
    {
      maybeLoad("URBI.INI", clog) |
      maybeLoad("global.u", clog)
    }|
    maybeLoad("CLIENT.INI", clog) |
    maybeLoad("local.u", clog)
  };

  function wall(var msg, var tag = "")
  {
    for (var l in lobbies - [Lobby])
      echo(msg, tag);
  };
};
