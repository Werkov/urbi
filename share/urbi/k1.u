// k1 compatibility.
class Global.Kernel1Functions
{
  function copy(o)
  {
    warn("`copy(o)' is deprecated, use `o.copy'") |
    o.copy
  };

  function ping()
  {
    echo ("pong time=" + time.asString);
  };

  function seq(n)
  {
    warn("`seq(number)' is deprecated, use `number.seq'") |
    n.seq
  };

  function size(l)
  {
    warn("`size(list)' is deprecated, use `list.size'") |
    l.size
  };

  function strlen(s)
  {
    s.length
  };

  var Global.isvoid = function{ var x = call.evalArgAt(0).acceptVoid; return x.isVoid};
  var system = System;
  var system.ghostID = "";
};

// K1 compatibility: import the k1 functions.
Global.addProto(Global.Kernel1Functions);


// Deprecated commands from k1.
// FIXME: Some commands should be rewritten once it becomes possible.
class Global.DeprecatedCommands
{
  for (var name: [
                  "commands",
                  "connections",
                  "devices",
                  "events",
                  "functions",
                  "reset",
                  "runningcommands",
                  "strict",
                  "taglist",
                  "undefall",
                  "unstrict",
                  "uservars",
                  "vars"
                    ])
    setSlot(name,
      function () { echo("`" + name + "' is deprecated." ) })
};

Global.addProto(Global.DeprecatedCommands);
