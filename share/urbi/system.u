/*-----------------.
| System version.  |
`-----------------*/

do (System)
{
  const var version = "2.0";

  // Assertion control.
  var ndebug = false;

  function assert_(value, message)
  {
    if (!value)
      throw "failed assertion: " + message;
  };

  function assert
  {
    if (!System.ndebug)
      System.assert_ (call.evalArgAt (0), call.argString (0));
  };

  function assert_eq
  {
    if (!System.ndebug)
      {
        var v0 = call.evalArgAt(0);
        var v1 = call.evalArgAt(1);
        var s0 = call.argString(0);
        var s1 = call.argString(1);
        System.assert_(v0 == v1,
                       s0 + " == " + s1 + " ("  + v0 + " == " + v1 + ")");
      }
  };

  // Look for file and load it.
  // Throw on errors.
  function load(file)
  {
    loadFile(searchFile(file));
  };

  // Look for file, and load verbosely on channel it if found.
  function maybeLoad(file, channelName = "")
  {
    var path = nil;
    try
    {
      path = searchFile(file);
    }
    catch (var e if e.isA(FileNotFound))
    {
    }|;
    if (!path.isNil)
    {
      if (channelName)
        echo("Loading %s" % [path], channelName);
      loadFile(path);
    };
  };

  function ps()
  {
    nonInterruptible |
    for| (var t : jobs)
      t.dumpState
  };

};

System.load("urbi/platform.u");
