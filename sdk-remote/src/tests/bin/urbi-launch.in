#! @SHELL@
# @configure_input@

set -e

case $VERBOSE in
  (x) set -x;;
esac

: ${EXEEXT='@EXEEXT@'}
: ${abs_top_srcdir='@abs_top_srcdir@'}
: ${abs_top_builddir='@abs_top_builddir@'}
: ${program=$abs_top_builddir/src/bin/urbi-launch$EXEEXT}

verbose ()
{
  if test -n "$VERBOSE"; then
    echo >&2 "$0: $@"
  fi
}

# The libubbject we load depends on the usage.
verbose "$*"
case " $* " in
  (*' --start '* | *' -s '*)
    # Spawning a new server, which requires a server.  Two cases:
    # this package is part of a kernel package, in which case we
    # should find libuobject.la in it.  Otherwise we hope a kernel
    # was installed, and the real urbi-launch will look for it at the
    # right place.
    if test -f $abs_top_builddir/../src/Makefile; then
      libuobjectdir=$abs_top_builddir/../src
      # Be sure to find the shipped Urbi files.
      URBI_PATH="$abs_top_srcdir/../share:$abs_top_builddir/../share:$URBI_PATH"
      export URBI_PATH
    fi
    ;;
  (*)
     libuobjectdir=$abs_top_builddir/src/libuobject;;
esac

if test -n "$libuobjectdir"; then
  libuobject=$libuobjectdir/libuobject
  case $(uname -o) in
    (Cygwin)
      # Using slashes is not a problem.  But not starting with the
      # drive letter is.
      libuobject=$(cygpath -w "$libuobject");;
  esac
  set x -c "$libuobject" "$@"
  shift
fi

# Find the noninstalled libport libraries.
libport_dir=$abs_top_builddir/libport
# Careful, do not add directory containing libuobject.
for d in $libport_dir/lib/*/.libs $abs_top_builddir/*/.libs $abs_top_builddir/src/liburbi/.libs
do
  export LD_LIBRARY_PATH=$d:$LD_LIBRARY_PATH
  export DYLD_LIBRARY_PATH=$d:$DYLD_LIBRARY_PATH
done
verbose "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
verbose "DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH"

verbose "running $program $*"
exec "$program" "$@"

# Local Variables:
# mode: shell-script
# End:
