//                                      -*- urbi -*-

// Too many unpredictable changes in the error messages.
LookupError.fixSpellingErrors = false |

// Determinism: asList and asString.
do (Dictionary)
{
  copySlot("keys", "oldKeys");
  keys->constant = false;
  keys = function ()
    {
      oldKeys.sort;
    };
}|

// We want random to become deterministic.
do (Float)
{
  var this.random_counter = 0;
  // chosen by fair dice roll.
  // guaranteed to be random.
  var this.random_values = [3, 1, 2];
  random->constant = false;
  random =
    function ()
    {
      var res = random_values[random_counter];
      // We don't want COW here, as the doc calls "5.random" repeatedly.
      Float.random_counter = (random_counter + 1) % random_values.size;
      res
    }
}|

// Deterministic localSlotNames.
do (Object)
{
  copySlot("localSlotNames", "oldLocalSlotNames");
  localSlotNames->constant = false;
  localSlotNames = function ()
    {
      oldLocalSlotNames.sort;
    };
}|

// Deterministic String.fresh.
do (String)
{
  var counter_ = 5;
  fresh->constant = false;
  fresh = function ()
  {
    this + "_" + counter_++;
  }
}|

// Keep sync with urbivalid/test.u.
if (System.Platform.isWindows)
  do (System)
  {
    // On Windows, use /bin/sh to please our tests.
    var 'system.orig' = getSlot("system");
    system->constant = false;
    system = function (command)
    {
      // Escape all the quotes and backslashes, and call /bin/sh.
      var cmd = "/bin/sh -c \"" |
      for| (var c: command)
        cmd += {if (c in ["\\", "\""]) "\\" else ""} + c |
      cmd += "\"";
      var res = 'system.orig'(cmd) |
      clog << ("system wrapper: " + command + ": " + cmd + ": " + res) |
      res
    };
  }|
