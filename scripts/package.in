#! /bin/sh

set -e

# Define before loading common.sh which uses destdir.
DESTDIR=$4
. $(dirname $0)/common.sh
set -x

## ----------- ##
## Variables.  ##
## ----------- ##

case $# in
  (10);;
  (*) fatal "not enough arguments: $#, expecting 10";;
esac

buildprefix='@prefix@'

abs_top_builddir=$builddir
abs_top_srcdir=$srcdir

srcdir=$2
builddir=$3
# Directories/tarballs left in this directory (updir) will be
# published by the buildfarm's package script.
updir=$5
ARCH=$6       # ARM|ppc|x86|x86_64.
#OS=$7         # linux|macos|windows.
COMP=$8       # ex. gcc4, vcxx2005.
MODE=$9       # [release|debug]_[static|dynamic].
prefix=${10}
# Set release_mode depending on whether we are building a release version
# or a development version.
case $MODE in
  (release*)    release_mode=true;;
  (*)           release_mode=false;;
esac

check_equal ()
{
  local lhs
  local rhs
  eval "lhs=\$$1"
  eval "rhs=\$$2"
  if test "$lhs" != "$rhs"; then
    stderr "*******************"                \
           "$1 != $2"                           \
           "($lhs != $rhs)"                     \
           "proceeding with $1 = $rhs"
    eval "$1=\$$2"
  fi
}

check_equal ARCH         URBI_HOST_CPU
check_equal COMP         URBI_HOST_COMP
# check_equal OS           URBI_HOST_OS
check_equal builddir     abs_top_builddir
check_equal prefix       buildprefix
check_equal release_mode COMPILATION_MODE_RELEASE
check_equal srcdir       abs_top_srcdir

# Determine the version from the latest component of the tag. This will
# ease ordering.
version=$(cd "$srcdir" && git describe | sed -e "s,^preview/,,;s,/,-,g")
# If we are in release mode, do not tell it, the final users won't care.
# Otherwise, add "-debug".
configuration=$version-$CONFIGURATION
$release_mode || configuration=$configuration-$MODE

# The SDK package.
urbi_sdk=$PROJECT-$configuration
# The doc only package.
urbi_doc=${PROJECT%-sdk}-doc-$version
# The SDK package, without the doc.
urbi_sdk_no_doc=$urbi_sdk-no-doc
# The runtime package, i.e., without doc etc.
urbi_runtime=$(echo "$urbi_sdk" | sed -e 's/urbi-sdk/urbi-runtime/')

# Primary target.
name=$urbi_sdk

# 1. Documentation.
#
# If the documentation is compiled in this package, extract it as a
# separate directory.
#
# If the doc is not compiled in, then if a doc package is available,
# inline its contents in this package.  Otherwise make a package
# without the doc, but with a name that states it.
docsrc="$DESTDIR$prefix/share/doc/urbi-sdk"
if test -f "$docsrc/urbi-sdk.pdf"; then
  stderr "Documentation is compiled, shipping"
  tree_copy "$docsrc" "$updir/$urbi_doc"
  # Do not leave the COMPONENTS.txt file, which is architecture
  # specific.  It would override the existing one from the package
  # into which the documentation will be copied.
  rm "$updir/$urbi_doc/COMPONENTS.txt"
else
  stderr "Documentation is NOT compiled, looking for it in $archivedir"
  if test -f "$archivedir/$urbi_doc.tar.bz2"; then
    stderr "Documentation found, installing"
    # Do not remove what's in $docsrc, as we might remove architecture
    # specific files, such as COMPONENTS.txt.
    tar -C "$docsrc"  --strip=1 -xf "$archivedir/$urbi_doc.tar.bz2"
    # So remove the package without doc if there is one.
    rm -f "$archivedir/$urbi_sdk_no_doc".*
  else
    # We couldn't find the doc, and it's not our job to compile it.
    # So, instead of blocking the generation of packages, generate
    # packages without the doc, but make it clear in the tarball name.
    stderr "Documentation NOT found"
    name=$urbi_sdk_no_doc
  fi
fi

# 2. Prebuilt-Urbi SDK.
#
# Create a fresh directory in which we put the subdirectories of the
# $install directory.
tree_copy "$DESTDIR$prefix" "$updir/$name"

# 3. Description.
#
# Extract the file that describes the contents of the package.
cp "$docsrc/COMPONENTS.txt" "$updir/$urbi_sdk.txt"

# 4. Prebuilt-Urbi Runtime.
#
# Create a run-time version of the package.
packagedir="$updir/$urbi_runtime"
tree_copy "$DESTDIR$prefix" "$packagedir"
# Keep only the bin, lib, and share/urbi directories.  Don't forget
# bin is lib on Windows.  Leave LICENSE.txt since it is used by
# Lobby.license.
(cd "$packagedir" &&
    rm -rf README.txt include libexec share/doc)

# 5. Source tarball.
tarname=$PROJECT-$version.tar.bz2
if test -f $abs_top_builddir/$tarname; then
  cp -v $abs_top_builddir/$tarname $updir/$tarname.tmp
  mv $updir/$tarname.tmp $updir/$tarname
fi
