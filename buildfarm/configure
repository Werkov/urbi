#!/bin/sh

me=$(basename $0)
stderr ()
{
  local i
  for i
  do
    echo "$i"
  done | sed -e "s/^/$me: /"
}

run ()
{
  stderr "running: $*"
  eval "$@"
}

fatal ()
{
  stderr "$@"
  exit 1
}

older ()
{
  test ! -e "$1" || test "$1" -ot "$2"
}

set -ex

## --------------------- ##
## Basic sanity checks.  ##
## --------------------- ##

# We really want ps to work.
#
# When it does not, ld cannot work properly, so check-lib-deps does not
# work.  And configure fails to run "javac Test" failing this way:
#
# bf-2-ubuntu$ /usr/bin/javac Test
# /usr/bin/javac: error while loading shared libraries: libjli.so: cannot open shared object file: No such file or directory
#
# or
#
# bf-1-chroot$ javac Test.java
# Java HotSpot(TM) Client VM warning: Can't detect initial thread stack location - find_vma failed
#
# Beware that on OS X, if "ps" sees no process, it fails.  "ps x"
# should help.
if ! ps x; then
  fatal "ps does not work, is procfs properly mounted?"
fi

# We need share.
sharedir=$HOME/share
readme=$sharedir/README-share.txt
if test ! -f $readme; then
  fatal "share/ does not seem to be mounted properly: there is no $readme"
fi

# colordiff sometimes does not tell different files apart (e.g., on
# Debian Etch).
if colordiff /dev/null $readme >/dev/null 2>&1; then
  fatal "colordiff exits successfully on different files"
fi


## ----------- ##
## Bootstrap.  ##
## ----------- ##

# Dead links are troublesome.  There can be some for instance with
# gnulib's configure when a module is obsoleted: its symlinks remain.
#
# --no-run-if-empty, -r
#   OS X does not support -r, and anyway "rm -f" is valid.
# --verbose, -t
find . -type l -print | perl -nle '-e || print' | xargs -t rm -f

here=$(pwd)
if $(older "$DIR_SOURCE/configure" "$0"); then
  cd "$DIR_SOURCE"
  ./bootstrap
  cd $here
fi


## ----------- ##
## Configure.  ##
## ----------- ##


local=$HOME/local
export PKG_CONFIG_PATH=$local/pkgconfig/$BUILDFARM_MODE:$local/pkgconfig:$PKG_CONFIG_PATH

# Boost.
case $BUILDFARM_OS in
  (linux_lucid) ;;                   # Use the native Boost.
  (windows)     BOOST_VERSION=1.39;; # For some historical reason.
  (*)           BOOST_VERSION=1.38;; # Match Naoqi's requirement.
esac
if test -n "$BOOST_VERSION"; then
  BOOST=$(pkg-config --print-errors boost-$BOOST_VERSION --variable=prefix)
  with_boost=--with-boost=$BOOST
fi

# ROS.
case $BUILDFARM_OS in
  (linux_lucid) ROS_VERSION=diamondback;;
  (windows)     ;;
  (*)           ROS_VERSION=cturtle;;
esac
if pkg-config --print-errors --exists ros-$ROS_VERSION; then
  ROS_PREFIX=$(pkg-config --print-errors ros-$ROS_VERSION --variable=prefix)
  ROS_ROOT=$ROS_PREFIX/ros
  with_ros="ROS_ROOT=$ROS_ROOT"
else
  unset ROS_ROOT
fi

# Compiler.
case $BUILDFARM_COMPILER in
  (vcxx2005|vcxx2008)
  CONFIGUREFLAGS="                              \
    AR='lib.exe'                                \
    CC='ccache cl.exe'                          \
    CC_FOR_BUILD=gcc                            \
    CXX='ccache cl.exe'                         \
    LD=link.exe                                 \
    DUMPBIN=dumpbin.exe                         \
    RANLIB=:                                    \
    --enable-shared                             \
    --disable-static                            \
    --enable-dependency-tracking                \
    host_alias=mingw32                          \
    --host=mingw32"
  ;;
  (*)
  CONFIGUREFLAGS="                              \
    CC='ccache gcc'                             \
    CXX='ccache g++'                            \
    CPPFLAGS='-I$local/include'                 \
    LDFLAGS='-I$local/lib'"
  ;;
esac

case $BUILDFARM_HOSTNAME in
  # bf-2 is in charge of distcheck, cut it some slack.
  (bf-3) enable_doc='--enable-doc';;
  (*)    enable_doc='--disable-doc';;
esac

case $BUILDFARM_MODE in
  (release) COMPILATION_MODE=speed;;
  (debug)   COMPILATION_MODE=debug;;
  (*)   fatal "invalid \$BUILDFARM_MODE: $BUILDFARM_MODE"
esac

if $(older "$DIR_BUILD/Makefile" "$0"); then
  cd "$DIR_BUILD"
  run "$DIR_SOURCE/configure"                   \
    --prefix=/prefix                            \
    --enable-compilation-mode=$COMPILATION_MODE \
    "$with_boost"                               \
    "$with_ros"                                 \
    "$enable_doc"                               \
    --enable-headers-install                    \
    $CONFIGUREFLAGS                             \
  ||
  {
    sta=$?
    cat >&2 config.log
    exit $sta
  }
  cd $here
fi
