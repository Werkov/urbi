#!/bin/sh

me=$(basename $0)
stderr ()
{
  local i
  for i
  do
    echo "$i"
  done | sed -e "s/^/$me: /"
}

run ()
{
  stderr "running: $*"
  eval "$@"
}

fatal ()
{
  stderr "$@"
  exit 1
}

older ()
{
  test ! -e "$1" || test "$1" -ot "$2"
}

set -ex

local=$HOME/local
export PKG_CONFIG_PATH=$local/pkgconfig/$BUILDFARM_MODE:$local/pkgconfig

BOOST=$(pkg-config --print-errors boost-1.38 --variable=prefix)
CC='ccache gcc'
CXX='ccache g++'
CPPFLAGS="-I'$local/include'"
LDFLAGS="-I'$local/lib'"

case $(uname -n) in
  (bf-3) DOC=;;
  (*)    DOC='--disable-doc';;
esac

case $BUILDFARM_MODE in
  (release) COMPILATION_MODE=speed;;
  (debug)   COMPILATION_MODE=debug;;
  (*)   fatal "invalid buildfarm mode: $BUILDFARM_MODE"
esac

case $BUILDFARM_COMPILER in
  (vcxx2005|vcxx2008)
  CPPFLAGS= #'-I/home/build/local_wine/winroot/opt/include'
  LDFLAGS= #'-L/home/build/local_wine/winroot/opt/lib'
  CONFIGUREFLAGS="                                      \
  AR='lib.exe'                                          \
  CC='ccache cl.exe'                                    \
  CC_FOR_BUILD=gcc                                      \
  CXX='ccache cl.exe'                                   \
  LD=link.exe                                           \
  DUMPBIN=dumpbin.exe                                   \
  RANLIB=:                                              \
  --enable-shared                                       \
  --disable-static                                      \
  --enable-dependency-tracking                          \
  --with-boost=/home/build/local/boost/boost_1_39       \
  host_alias=mingw32                                    \
  --host=mingw32"
esac

# Dead links are troublesome.  There can be some for instance with
# gnulib's configure when a module is obsoleted: its symlinks remain.
#
# --no-run-if-empty, -r
# --verbose, -t
find . -type l -print | perl -nle '-e || print' | xargs -r -t rm -f

here=$(pwd)
if $(older "$DIR_SOURCE/configure" "$0"); then
  cd "$DIR_SOURCE"
  ./bootstrap
  cd $here
fi

if $(older "$DIR_BUILD/Makefile" "$0"); then
  cd "$DIR_BUILD"
  run "$DIR_SOURCE/configure"                   \
    --prefix=/prefix                            \
    --enable-compilation-mode=$COMPILATION_MODE \
    --with-boost="'$BOOST'"                     \
    "$DOC"                                      \
    --enable-headers-install                    \
    CPPFLAGS="'$CPPFLAGS'"                      \
    LDFLAGS="'$LDFLAGS'"                        \
    $CONFIGUREFLAGS                             \
  ||
  {
    sta=$?
    cat >&2 config.log
    exit $sta
  }
  cd $here
fi
