#! /bin/sh

set -e
. $(dirname "$0")/common
set -x

## ----------- ##
## Functions.  ##
## ----------- ##

# find_dual ZIP
# -------------
# If ZIP is release, return the debug one, and vice versa.  Does not
# check for the existence of the files.
find_dual ()
{
  echo "$1" | perl -pe 's/-debug// || s/((-no-doc)?\.zip)/-debug$1/'
}

# Check the previous function.
find_dual_unit_test ()
{
  local i
  local o
  local res
  for i in \
  urbi-runtime-2.7.3-windows-x86-vcxx2008-debug-no-doc.zip:urbi-runtime-2.7.3-windows-x86-vcxx2008-no-doc.zip\
  /home/build/share/built/urbi-sdk/archives/2.7.3-000-g0fb1c3f/urbi-runtime-2.7.3-windows-x86-vcxx2008-debug.zip:/home/build/share/built/urbi-sdk/archives/2.7.3-000-g0fb1c3f/urbi-runtime-2.7.3-windows-x86-vcxx2008.zip\
  urbi-runtime-2.7.3-windows-x86-vcxx2008-no-doc.zip:urbi-runtime-2.7.3-windows-x86-vcxx2008-debug-no-doc.zip
  do
    o=$(echo "$i" | sed -e 's/^.*://')
    i=$(echo "$i" | sed -e 's/:.*$//')
    res=$(find_dual $i)
    test "$o" = "$res" ||
      fatal "find_dual fails on $i: $res instead of $o"
  done
}

find_dual_unit_test

get_installer_name ()
{
  local f="$1"
  local nod="no-doc"

  f=${f/-$BUILDFARM_MODE/}
  f=${f/-$nod/}
  f=${f/.zip/.exe}
  echo "$f"
}


## ----------- ##
## Variables.  ##
## ----------- ##

# Check that we have all the envvars we expect.
for v in BUILDFARM_COMPILER BUILDFARM_MODE BUILDFARM_OS \
         DIR_PACKAGES DIR_SOURCE
do
  eval "test -n \$$v" ||
    fatal "\$$v is not set"
done

test $# = 1 ||
  fatal "invalid argument number: $#, expecting 1"
upname=$1


# Do not produce anything if we are not working on windows builds.
case $BUILDFARM_OS in
  (windows) ;;
  (*) exit 0;;
esac

tools=$HOME/share/tools
# We need vcxx-2005, not vcxx2005.
compiler=$(echo "$BUILDFARM_COMPILER" | perl -pe 's/(vcxx)(\d+)/$1-$2/')
# vcredist has name with vcxx-2005, not vcxx2005.
vcredist=$tools/vcredist/vcredist_x86-$compiler.exe
gostai_console="$tools/gostai-console/gostai-console-2.6-win32.exe"
gostai_editor="$tools/gostai-editor/gostai-editor-2.5-win32.exe"
for i in vcredist gostai_console gostai_editor
do
  eval "file=\$$i"
  test -r "$file" ||
    fatal "cannot read $i: $val"
  test -f "$file" ||
    fatal "not a file $i: $val"
  test -s "$file" ||
    fatal "empty file $i: $val"
done


## ------ ##
## Main.  ##
## ------ ##

# The archive built by this slave.
my_zip="$upname.zip"
# The archive built by the other one.
other_zip=$(find_dual "$my_zip")
installer=$(get_installer_name "$(basename $my_zip)")

if test -r "$my_zip"                            \
   && test -r "$other_zip"                      \
   && test "$my_zip" -nt "$other_zip"; then
  # My zip is the newest, do the merge-install.

  # Merge zips.
  $DIR_SOURCE/buildfarm/merge-install.sh                \
      -v                                                \
      --vcredist "$vcredist"                            \
      --compiler "$compiler"                            \
      --version "$SHA1"                                 \
      --templateloc "$DIR_SOURCE/share/templates"       \
      --installscriptloc "$DIR_SOURCE/share/installer/" \
      --gostai-console "$gostai_console"                \
      --gostai-editor "$gostai_editor"                  \
      --output "$DIR_PACKAGES/$installer"               \
      "$my_zip" "$other_zip"
fi
