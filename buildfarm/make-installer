#! /bin/sh

# Merge multiple (2) Urbi SDK tarballs (one debug and one release)
# and run the installer generator.

set -e
. $(dirname "$0")/common

## ----------- ##
## Functions.  ##
## ----------- ##

verb ()
{
  if $verbose; then stderr "$@"; fi
}

usage ()
{
  cat <<EOF
 usage: $0 [options]

Options:
  -i, --installprogram    name of installer generator program [$installer]
  -a, --installarguments  arguments for installer [$installargs]
  -d, --debug             debug mode
  -v, --verbose           verbose mode
  -o, --output            output file
EOF
  exit 0
}

files=
verbose=false
installer="$HOME/.wine/drive_c/Program Files/NSIS/makensis.exe"
installerargs="/NOCD share/installer/installer.nsh"
# Location of installer.nsh, will create a symlink to it if set
installscriptloc=$DIR_SOURCE/share/installer
templateloc=$DIR_SOURCE/share/templates
# Target
output=

while test $# -ne 0
do
  case $1 in
  (-h|--help) usage;;
  (-i|--installprogram) shift; installer=$1 ;;
  (-a|--installarguments) shift; installerargs=$1 ;;
  (-d|--debug) set -x ;;
  (-v|--verbose) verbose=true ;;
  (-o|--output) shift; output=$1 ;;
  (*) files="$files $1" ;;
  esac
  shift
done

test "$(echo $files |wc -w)" -eq 2 ||
  fatal "expected exactly two files"

verb "merging archives $files"
dir=$(mktemp -d)

if test -n "$output"; then
  trap "cd / && rm -rf $dir" 0 1 2 13 15
fi

verb "Will work in $dir"
cd $dir
mkdir temp
mkdir merge
cd temp

for f in $files
do
  verb "merging $f"
  unzip -q $f
  basedir=$(echo *)
  case $f in
    (*debug*)
    mv $basedir/bin/urbi-launch.exe $basedir/bin/urbi-launch-d.exe
    mv $basedir/bin/urbi.exe $basedir/bin/urbi-d.exe
    sed -e 's/urbi-launch/urbi-launch-d/g' $basedir/urbi.bat \
        >$basedir/urbi-d.bat
    rm $basedir/urbi.bat
    ;;
  esac
  cp -a */* ../merge
  #safer that way
  cd ..
  rm -rf temp
  mkdir temp
  cd temp
done
cd ../merge

verb "Copying vcredist from $vcredist"
cp $vcredist ./vcredist-x86.exe

if test -n "$installscriptloc"; then
  verb "Setting up symlink to $installscriptloc"
  ln -s $installscriptloc share/installer
fi

if test -n "$gostaiconsole"; then
  verb "Copying gostai-console installer from $gostaiconsole"
  cp "$gostaiconsole" ./gostai-console-installer.exe
fi

if test -n "$gostaieditor"; then
  verb "Copying gostai-editor installer from $gostaieditor"
  cp "$gostaieditor" ./gostai-editor-installer.exe
fi

if test -n "templateloc"; then
  verb "Setting up symlink to $templateloc"
  ln -s $templateloc share/templates
fi

verb "running '$installer' /D$vcxx /DVERSION=$SHA1 $installerargs"
wine "$installer" "/D$vcxx" "/DVERSION=$SHA1" $installerargs

if test -n "$output"; then
  xmv "$dir/merge/gostai-engine-runtime.exe" "$output"
else
  verb "Result in $dir"
fi
