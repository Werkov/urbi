#!/bin/sh

set -e
. $(dirname "$0")/common

make_()
{
  make DESTDIR="$DIR_INSTALL" "$@"
}

# Sometimes the load is responsible for failures.  Try in parallel,
# then sequential, and VERBOSE so that log of failed tests are
# displayed.
make_twice_()
{
  make_ -j$JOBS "$@" || make_ VERBOSE=1 "$@"
}

check()
{
  make_twice_ installcheck "$@"
}

## ------ ##
## Main.  ##
## ------ ##

cd "$DIR_BUILD"

case $BUILDFARM_HOSTNAME in (bf-2)
  # Source checks.  One machine is enough.
  make_ spell-check
  make_ maintainer-check
  ;;
esac

# Libport.  Not for install-check.
make_twice_ check -C sdk-remote/libport

# SDK-Remote
check -C sdk-remote/src/tests

# Urbi.
# bf-1 is known to fail 0.x/3-network, which shadows too many other
# tests.  So in the case of bf-1, proceed anyway. FIXME: fix the
# failure (issue #5037)!
check -C tests TESTS_DIRS=0.x || sta=$?
case $BUILDFARM_HOSTNAME:$sta in
  (bf-1:1) stderr "0.x failed on bf-1: proceeding anyway";;
  (bf-1:0) fatal "0.x passed on bf-1: fix me accordingly";;
  (*:1)    fatal "0.x failed";;
esac

check -C doc
check -C tests TESTS_DIRS=2.x
check -C tests TESTS_DIRS=1.x
check -C tests TESTS_DIRS=uob/plug
check -C tests TESTS_DIRS=uob/remote
check -C tests TESTS_DIRS=uob/rtp
# Java is portable, of course.  But we use JNI, i.e., components
# compiled from C++, in a DLL.  We need a JVM running under Wine for
# this to work, which is not the case currently.
case $BUILDFARM_OS in
  (windows);;
  (*) check -C tests TESTS_DIRS=uob/java;;
esac
check -C tests TESTS_DIRS=demo
check -C tests TESTS_DIRS=@ros

# fsm.u is not installed, cannot installcheck.  Windows cannot run
# properly with non-installed libraries.
case $BUILDFARM_OS in
  (windows);;
  (*) make_twice_ check -C tests TESTS_DIRS=@fsm;;
esac

case $BUILDFARM_HOSTNAME in
  (bf-2) make_ distcheck-buildfarm;;
esac
